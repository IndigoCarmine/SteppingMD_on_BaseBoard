
SteppingMD_on_BaseBoard.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000649c  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000690  080065a8  080065a8  000165a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    000000f8  08006c38  08006c38  00016c38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          00000180  08006d30  08006d30  00016d30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006eb0  08006eb0  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000018  08006eb0  08006eb0  00016eb0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000010  08006ec8  08006ec8  00016ec8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  08006ed8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000444  20000078  08006f50  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200004bc  08006f50  000204bc  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .debug_info   00072765  00000000  00000000  000200a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00007050  00000000  00000000  00092806  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00021b3e  00000000  00000000  00099856  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000d20  00000000  00000000  000bb398  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000054d0  00000000  00000000  000bc0b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000097e4  00000000  00000000  000c1588  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001dc5b  00000000  00000000  000cad6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000dd46c  00000000  00000000  000e89c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  001c5e33  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000059ec  00000000  00000000  001c5e84  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000078 	.word	0x20000078
 8000128:	00000000 	.word	0x00000000
 800012c:	08006590 	.word	0x08006590

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000007c 	.word	0x2000007c
 8000148:	08006590 	.word	0x08006590

0800014c <strcmp>:
 800014c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000150:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000154:	2a01      	cmp	r2, #1
 8000156:	bf28      	it	cs
 8000158:	429a      	cmpcs	r2, r3
 800015a:	d0f7      	beq.n	800014c <strcmp>
 800015c:	1ad0      	subs	r0, r2, r3
 800015e:	4770      	bx	lr

08000160 <strlen>:
 8000160:	4603      	mov	r3, r0
 8000162:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000166:	2a00      	cmp	r2, #0
 8000168:	d1fb      	bne.n	8000162 <strlen+0x2>
 800016a:	1a18      	subs	r0, r3, r0
 800016c:	3801      	subs	r0, #1
 800016e:	4770      	bx	lr

08000170 <__aeabi_frsub>:
 8000170:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000174:	e002      	b.n	800017c <__addsf3>
 8000176:	bf00      	nop

08000178 <__aeabi_fsub>:
 8000178:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0800017c <__addsf3>:
 800017c:	0042      	lsls	r2, r0, #1
 800017e:	bf1f      	itttt	ne
 8000180:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000184:	ea92 0f03 	teqne	r2, r3
 8000188:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 800018c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000190:	d06a      	beq.n	8000268 <__addsf3+0xec>
 8000192:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000196:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 800019a:	bfc1      	itttt	gt
 800019c:	18d2      	addgt	r2, r2, r3
 800019e:	4041      	eorgt	r1, r0
 80001a0:	4048      	eorgt	r0, r1
 80001a2:	4041      	eorgt	r1, r0
 80001a4:	bfb8      	it	lt
 80001a6:	425b      	neglt	r3, r3
 80001a8:	2b19      	cmp	r3, #25
 80001aa:	bf88      	it	hi
 80001ac:	4770      	bxhi	lr
 80001ae:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 80001b2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80001b6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 80001ba:	bf18      	it	ne
 80001bc:	4240      	negne	r0, r0
 80001be:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c2:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80001c6:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80001ca:	bf18      	it	ne
 80001cc:	4249      	negne	r1, r1
 80001ce:	ea92 0f03 	teq	r2, r3
 80001d2:	d03f      	beq.n	8000254 <__addsf3+0xd8>
 80001d4:	f1a2 0201 	sub.w	r2, r2, #1
 80001d8:	fa41 fc03 	asr.w	ip, r1, r3
 80001dc:	eb10 000c 	adds.w	r0, r0, ip
 80001e0:	f1c3 0320 	rsb	r3, r3, #32
 80001e4:	fa01 f103 	lsl.w	r1, r1, r3
 80001e8:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80001ec:	d502      	bpl.n	80001f4 <__addsf3+0x78>
 80001ee:	4249      	negs	r1, r1
 80001f0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80001f4:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 80001f8:	d313      	bcc.n	8000222 <__addsf3+0xa6>
 80001fa:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80001fe:	d306      	bcc.n	800020e <__addsf3+0x92>
 8000200:	0840      	lsrs	r0, r0, #1
 8000202:	ea4f 0131 	mov.w	r1, r1, rrx
 8000206:	f102 0201 	add.w	r2, r2, #1
 800020a:	2afe      	cmp	r2, #254	; 0xfe
 800020c:	d251      	bcs.n	80002b2 <__addsf3+0x136>
 800020e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000212:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000216:	bf08      	it	eq
 8000218:	f020 0001 	biceq.w	r0, r0, #1
 800021c:	ea40 0003 	orr.w	r0, r0, r3
 8000220:	4770      	bx	lr
 8000222:	0049      	lsls	r1, r1, #1
 8000224:	eb40 0000 	adc.w	r0, r0, r0
 8000228:	3a01      	subs	r2, #1
 800022a:	bf28      	it	cs
 800022c:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000230:	d2ed      	bcs.n	800020e <__addsf3+0x92>
 8000232:	fab0 fc80 	clz	ip, r0
 8000236:	f1ac 0c08 	sub.w	ip, ip, #8
 800023a:	ebb2 020c 	subs.w	r2, r2, ip
 800023e:	fa00 f00c 	lsl.w	r0, r0, ip
 8000242:	bfaa      	itet	ge
 8000244:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000248:	4252      	neglt	r2, r2
 800024a:	4318      	orrge	r0, r3
 800024c:	bfbc      	itt	lt
 800024e:	40d0      	lsrlt	r0, r2
 8000250:	4318      	orrlt	r0, r3
 8000252:	4770      	bx	lr
 8000254:	f092 0f00 	teq	r2, #0
 8000258:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 800025c:	bf06      	itte	eq
 800025e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000262:	3201      	addeq	r2, #1
 8000264:	3b01      	subne	r3, #1
 8000266:	e7b5      	b.n	80001d4 <__addsf3+0x58>
 8000268:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800026c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000270:	bf18      	it	ne
 8000272:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000276:	d021      	beq.n	80002bc <__addsf3+0x140>
 8000278:	ea92 0f03 	teq	r2, r3
 800027c:	d004      	beq.n	8000288 <__addsf3+0x10c>
 800027e:	f092 0f00 	teq	r2, #0
 8000282:	bf08      	it	eq
 8000284:	4608      	moveq	r0, r1
 8000286:	4770      	bx	lr
 8000288:	ea90 0f01 	teq	r0, r1
 800028c:	bf1c      	itt	ne
 800028e:	2000      	movne	r0, #0
 8000290:	4770      	bxne	lr
 8000292:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000296:	d104      	bne.n	80002a2 <__addsf3+0x126>
 8000298:	0040      	lsls	r0, r0, #1
 800029a:	bf28      	it	cs
 800029c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 80002a0:	4770      	bx	lr
 80002a2:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 80002a6:	bf3c      	itt	cc
 80002a8:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 80002ac:	4770      	bxcc	lr
 80002ae:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80002b2:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 80002b6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80002ba:	4770      	bx	lr
 80002bc:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80002c0:	bf16      	itet	ne
 80002c2:	4608      	movne	r0, r1
 80002c4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80002c8:	4601      	movne	r1, r0
 80002ca:	0242      	lsls	r2, r0, #9
 80002cc:	bf06      	itte	eq
 80002ce:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80002d2:	ea90 0f01 	teqeq	r0, r1
 80002d6:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80002da:	4770      	bx	lr

080002dc <__aeabi_ui2f>:
 80002dc:	f04f 0300 	mov.w	r3, #0
 80002e0:	e004      	b.n	80002ec <__aeabi_i2f+0x8>
 80002e2:	bf00      	nop

080002e4 <__aeabi_i2f>:
 80002e4:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80002e8:	bf48      	it	mi
 80002ea:	4240      	negmi	r0, r0
 80002ec:	ea5f 0c00 	movs.w	ip, r0
 80002f0:	bf08      	it	eq
 80002f2:	4770      	bxeq	lr
 80002f4:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80002f8:	4601      	mov	r1, r0
 80002fa:	f04f 0000 	mov.w	r0, #0
 80002fe:	e01c      	b.n	800033a <__aeabi_l2f+0x2a>

08000300 <__aeabi_ul2f>:
 8000300:	ea50 0201 	orrs.w	r2, r0, r1
 8000304:	bf08      	it	eq
 8000306:	4770      	bxeq	lr
 8000308:	f04f 0300 	mov.w	r3, #0
 800030c:	e00a      	b.n	8000324 <__aeabi_l2f+0x14>
 800030e:	bf00      	nop

08000310 <__aeabi_l2f>:
 8000310:	ea50 0201 	orrs.w	r2, r0, r1
 8000314:	bf08      	it	eq
 8000316:	4770      	bxeq	lr
 8000318:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 800031c:	d502      	bpl.n	8000324 <__aeabi_l2f+0x14>
 800031e:	4240      	negs	r0, r0
 8000320:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000324:	ea5f 0c01 	movs.w	ip, r1
 8000328:	bf02      	ittt	eq
 800032a:	4684      	moveq	ip, r0
 800032c:	4601      	moveq	r1, r0
 800032e:	2000      	moveq	r0, #0
 8000330:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000334:	bf08      	it	eq
 8000336:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 800033a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 800033e:	fabc f28c 	clz	r2, ip
 8000342:	3a08      	subs	r2, #8
 8000344:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000348:	db10      	blt.n	800036c <__aeabi_l2f+0x5c>
 800034a:	fa01 fc02 	lsl.w	ip, r1, r2
 800034e:	4463      	add	r3, ip
 8000350:	fa00 fc02 	lsl.w	ip, r0, r2
 8000354:	f1c2 0220 	rsb	r2, r2, #32
 8000358:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800035c:	fa20 f202 	lsr.w	r2, r0, r2
 8000360:	eb43 0002 	adc.w	r0, r3, r2
 8000364:	bf08      	it	eq
 8000366:	f020 0001 	biceq.w	r0, r0, #1
 800036a:	4770      	bx	lr
 800036c:	f102 0220 	add.w	r2, r2, #32
 8000370:	fa01 fc02 	lsl.w	ip, r1, r2
 8000374:	f1c2 0220 	rsb	r2, r2, #32
 8000378:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 800037c:	fa21 f202 	lsr.w	r2, r1, r2
 8000380:	eb43 0002 	adc.w	r0, r3, r2
 8000384:	bf08      	it	eq
 8000386:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800038a:	4770      	bx	lr

0800038c <__aeabi_fmul>:
 800038c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000390:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000394:	bf1e      	ittt	ne
 8000396:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800039a:	ea92 0f0c 	teqne	r2, ip
 800039e:	ea93 0f0c 	teqne	r3, ip
 80003a2:	d06f      	beq.n	8000484 <__aeabi_fmul+0xf8>
 80003a4:	441a      	add	r2, r3
 80003a6:	ea80 0c01 	eor.w	ip, r0, r1
 80003aa:	0240      	lsls	r0, r0, #9
 80003ac:	bf18      	it	ne
 80003ae:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80003b2:	d01e      	beq.n	80003f2 <__aeabi_fmul+0x66>
 80003b4:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80003b8:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80003bc:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80003c0:	fba0 3101 	umull	r3, r1, r0, r1
 80003c4:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80003c8:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80003cc:	bf3e      	ittt	cc
 80003ce:	0049      	lslcc	r1, r1, #1
 80003d0:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80003d4:	005b      	lslcc	r3, r3, #1
 80003d6:	ea40 0001 	orr.w	r0, r0, r1
 80003da:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80003de:	2afd      	cmp	r2, #253	; 0xfd
 80003e0:	d81d      	bhi.n	800041e <__aeabi_fmul+0x92>
 80003e2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80003e6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80003ea:	bf08      	it	eq
 80003ec:	f020 0001 	biceq.w	r0, r0, #1
 80003f0:	4770      	bx	lr
 80003f2:	f090 0f00 	teq	r0, #0
 80003f6:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80003fa:	bf08      	it	eq
 80003fc:	0249      	lsleq	r1, r1, #9
 80003fe:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000402:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000406:	3a7f      	subs	r2, #127	; 0x7f
 8000408:	bfc2      	ittt	gt
 800040a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800040e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000412:	4770      	bxgt	lr
 8000414:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000418:	f04f 0300 	mov.w	r3, #0
 800041c:	3a01      	subs	r2, #1
 800041e:	dc5d      	bgt.n	80004dc <__aeabi_fmul+0x150>
 8000420:	f112 0f19 	cmn.w	r2, #25
 8000424:	bfdc      	itt	le
 8000426:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800042a:	4770      	bxle	lr
 800042c:	f1c2 0200 	rsb	r2, r2, #0
 8000430:	0041      	lsls	r1, r0, #1
 8000432:	fa21 f102 	lsr.w	r1, r1, r2
 8000436:	f1c2 0220 	rsb	r2, r2, #32
 800043a:	fa00 fc02 	lsl.w	ip, r0, r2
 800043e:	ea5f 0031 	movs.w	r0, r1, rrx
 8000442:	f140 0000 	adc.w	r0, r0, #0
 8000446:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800044a:	bf08      	it	eq
 800044c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000450:	4770      	bx	lr
 8000452:	f092 0f00 	teq	r2, #0
 8000456:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800045a:	bf02      	ittt	eq
 800045c:	0040      	lsleq	r0, r0, #1
 800045e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000462:	3a01      	subeq	r2, #1
 8000464:	d0f9      	beq.n	800045a <__aeabi_fmul+0xce>
 8000466:	ea40 000c 	orr.w	r0, r0, ip
 800046a:	f093 0f00 	teq	r3, #0
 800046e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000472:	bf02      	ittt	eq
 8000474:	0049      	lsleq	r1, r1, #1
 8000476:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800047a:	3b01      	subeq	r3, #1
 800047c:	d0f9      	beq.n	8000472 <__aeabi_fmul+0xe6>
 800047e:	ea41 010c 	orr.w	r1, r1, ip
 8000482:	e78f      	b.n	80003a4 <__aeabi_fmul+0x18>
 8000484:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000488:	ea92 0f0c 	teq	r2, ip
 800048c:	bf18      	it	ne
 800048e:	ea93 0f0c 	teqne	r3, ip
 8000492:	d00a      	beq.n	80004aa <__aeabi_fmul+0x11e>
 8000494:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000498:	bf18      	it	ne
 800049a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800049e:	d1d8      	bne.n	8000452 <__aeabi_fmul+0xc6>
 80004a0:	ea80 0001 	eor.w	r0, r0, r1
 80004a4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80004a8:	4770      	bx	lr
 80004aa:	f090 0f00 	teq	r0, #0
 80004ae:	bf17      	itett	ne
 80004b0:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 80004b4:	4608      	moveq	r0, r1
 80004b6:	f091 0f00 	teqne	r1, #0
 80004ba:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80004be:	d014      	beq.n	80004ea <__aeabi_fmul+0x15e>
 80004c0:	ea92 0f0c 	teq	r2, ip
 80004c4:	d101      	bne.n	80004ca <__aeabi_fmul+0x13e>
 80004c6:	0242      	lsls	r2, r0, #9
 80004c8:	d10f      	bne.n	80004ea <__aeabi_fmul+0x15e>
 80004ca:	ea93 0f0c 	teq	r3, ip
 80004ce:	d103      	bne.n	80004d8 <__aeabi_fmul+0x14c>
 80004d0:	024b      	lsls	r3, r1, #9
 80004d2:	bf18      	it	ne
 80004d4:	4608      	movne	r0, r1
 80004d6:	d108      	bne.n	80004ea <__aeabi_fmul+0x15e>
 80004d8:	ea80 0001 	eor.w	r0, r0, r1
 80004dc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80004e0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80004e4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80004e8:	4770      	bx	lr
 80004ea:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80004ee:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80004f2:	4770      	bx	lr

080004f4 <__aeabi_fdiv>:
 80004f4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004f8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80004fc:	bf1e      	ittt	ne
 80004fe:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000502:	ea92 0f0c 	teqne	r2, ip
 8000506:	ea93 0f0c 	teqne	r3, ip
 800050a:	d069      	beq.n	80005e0 <__aeabi_fdiv+0xec>
 800050c:	eba2 0203 	sub.w	r2, r2, r3
 8000510:	ea80 0c01 	eor.w	ip, r0, r1
 8000514:	0249      	lsls	r1, r1, #9
 8000516:	ea4f 2040 	mov.w	r0, r0, lsl #9
 800051a:	d037      	beq.n	800058c <__aeabi_fdiv+0x98>
 800051c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000520:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000524:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000528:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800052c:	428b      	cmp	r3, r1
 800052e:	bf38      	it	cc
 8000530:	005b      	lslcc	r3, r3, #1
 8000532:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000536:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800053a:	428b      	cmp	r3, r1
 800053c:	bf24      	itt	cs
 800053e:	1a5b      	subcs	r3, r3, r1
 8000540:	ea40 000c 	orrcs.w	r0, r0, ip
 8000544:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000548:	bf24      	itt	cs
 800054a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800054e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000552:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000556:	bf24      	itt	cs
 8000558:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 800055c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000560:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000564:	bf24      	itt	cs
 8000566:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 800056a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800056e:	011b      	lsls	r3, r3, #4
 8000570:	bf18      	it	ne
 8000572:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000576:	d1e0      	bne.n	800053a <__aeabi_fdiv+0x46>
 8000578:	2afd      	cmp	r2, #253	; 0xfd
 800057a:	f63f af50 	bhi.w	800041e <__aeabi_fmul+0x92>
 800057e:	428b      	cmp	r3, r1
 8000580:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000584:	bf08      	it	eq
 8000586:	f020 0001 	biceq.w	r0, r0, #1
 800058a:	4770      	bx	lr
 800058c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000590:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000594:	327f      	adds	r2, #127	; 0x7f
 8000596:	bfc2      	ittt	gt
 8000598:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800059c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80005a0:	4770      	bxgt	lr
 80005a2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80005a6:	f04f 0300 	mov.w	r3, #0
 80005aa:	3a01      	subs	r2, #1
 80005ac:	e737      	b.n	800041e <__aeabi_fmul+0x92>
 80005ae:	f092 0f00 	teq	r2, #0
 80005b2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80005b6:	bf02      	ittt	eq
 80005b8:	0040      	lsleq	r0, r0, #1
 80005ba:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80005be:	3a01      	subeq	r2, #1
 80005c0:	d0f9      	beq.n	80005b6 <__aeabi_fdiv+0xc2>
 80005c2:	ea40 000c 	orr.w	r0, r0, ip
 80005c6:	f093 0f00 	teq	r3, #0
 80005ca:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80005ce:	bf02      	ittt	eq
 80005d0:	0049      	lsleq	r1, r1, #1
 80005d2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80005d6:	3b01      	subeq	r3, #1
 80005d8:	d0f9      	beq.n	80005ce <__aeabi_fdiv+0xda>
 80005da:	ea41 010c 	orr.w	r1, r1, ip
 80005de:	e795      	b.n	800050c <__aeabi_fdiv+0x18>
 80005e0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80005e4:	ea92 0f0c 	teq	r2, ip
 80005e8:	d108      	bne.n	80005fc <__aeabi_fdiv+0x108>
 80005ea:	0242      	lsls	r2, r0, #9
 80005ec:	f47f af7d 	bne.w	80004ea <__aeabi_fmul+0x15e>
 80005f0:	ea93 0f0c 	teq	r3, ip
 80005f4:	f47f af70 	bne.w	80004d8 <__aeabi_fmul+0x14c>
 80005f8:	4608      	mov	r0, r1
 80005fa:	e776      	b.n	80004ea <__aeabi_fmul+0x15e>
 80005fc:	ea93 0f0c 	teq	r3, ip
 8000600:	d104      	bne.n	800060c <__aeabi_fdiv+0x118>
 8000602:	024b      	lsls	r3, r1, #9
 8000604:	f43f af4c 	beq.w	80004a0 <__aeabi_fmul+0x114>
 8000608:	4608      	mov	r0, r1
 800060a:	e76e      	b.n	80004ea <__aeabi_fmul+0x15e>
 800060c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000610:	bf18      	it	ne
 8000612:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000616:	d1ca      	bne.n	80005ae <__aeabi_fdiv+0xba>
 8000618:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 800061c:	f47f af5c 	bne.w	80004d8 <__aeabi_fmul+0x14c>
 8000620:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000624:	f47f af3c 	bne.w	80004a0 <__aeabi_fmul+0x114>
 8000628:	e75f      	b.n	80004ea <__aeabi_fmul+0x15e>
 800062a:	bf00      	nop

0800062c <__gesf2>:
 800062c:	f04f 3cff 	mov.w	ip, #4294967295
 8000630:	e006      	b.n	8000640 <__cmpsf2+0x4>
 8000632:	bf00      	nop

08000634 <__lesf2>:
 8000634:	f04f 0c01 	mov.w	ip, #1
 8000638:	e002      	b.n	8000640 <__cmpsf2+0x4>
 800063a:	bf00      	nop

0800063c <__cmpsf2>:
 800063c:	f04f 0c01 	mov.w	ip, #1
 8000640:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000644:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000648:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800064c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000650:	bf18      	it	ne
 8000652:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000656:	d011      	beq.n	800067c <__cmpsf2+0x40>
 8000658:	b001      	add	sp, #4
 800065a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800065e:	bf18      	it	ne
 8000660:	ea90 0f01 	teqne	r0, r1
 8000664:	bf58      	it	pl
 8000666:	ebb2 0003 	subspl.w	r0, r2, r3
 800066a:	bf88      	it	hi
 800066c:	17c8      	asrhi	r0, r1, #31
 800066e:	bf38      	it	cc
 8000670:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000674:	bf18      	it	ne
 8000676:	f040 0001 	orrne.w	r0, r0, #1
 800067a:	4770      	bx	lr
 800067c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000680:	d102      	bne.n	8000688 <__cmpsf2+0x4c>
 8000682:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000686:	d105      	bne.n	8000694 <__cmpsf2+0x58>
 8000688:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800068c:	d1e4      	bne.n	8000658 <__cmpsf2+0x1c>
 800068e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000692:	d0e1      	beq.n	8000658 <__cmpsf2+0x1c>
 8000694:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000698:	4770      	bx	lr
 800069a:	bf00      	nop

0800069c <__aeabi_cfrcmple>:
 800069c:	4684      	mov	ip, r0
 800069e:	4608      	mov	r0, r1
 80006a0:	4661      	mov	r1, ip
 80006a2:	e7ff      	b.n	80006a4 <__aeabi_cfcmpeq>

080006a4 <__aeabi_cfcmpeq>:
 80006a4:	b50f      	push	{r0, r1, r2, r3, lr}
 80006a6:	f7ff ffc9 	bl	800063c <__cmpsf2>
 80006aa:	2800      	cmp	r0, #0
 80006ac:	bf48      	it	mi
 80006ae:	f110 0f00 	cmnmi.w	r0, #0
 80006b2:	bd0f      	pop	{r0, r1, r2, r3, pc}

080006b4 <__aeabi_fcmpeq>:
 80006b4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006b8:	f7ff fff4 	bl	80006a4 <__aeabi_cfcmpeq>
 80006bc:	bf0c      	ite	eq
 80006be:	2001      	moveq	r0, #1
 80006c0:	2000      	movne	r0, #0
 80006c2:	f85d fb08 	ldr.w	pc, [sp], #8
 80006c6:	bf00      	nop

080006c8 <__aeabi_fcmplt>:
 80006c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006cc:	f7ff ffea 	bl	80006a4 <__aeabi_cfcmpeq>
 80006d0:	bf34      	ite	cc
 80006d2:	2001      	movcc	r0, #1
 80006d4:	2000      	movcs	r0, #0
 80006d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80006da:	bf00      	nop

080006dc <__aeabi_fcmple>:
 80006dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006e0:	f7ff ffe0 	bl	80006a4 <__aeabi_cfcmpeq>
 80006e4:	bf94      	ite	ls
 80006e6:	2001      	movls	r0, #1
 80006e8:	2000      	movhi	r0, #0
 80006ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80006ee:	bf00      	nop

080006f0 <__aeabi_fcmpge>:
 80006f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006f4:	f7ff ffd2 	bl	800069c <__aeabi_cfrcmple>
 80006f8:	bf94      	ite	ls
 80006fa:	2001      	movls	r0, #1
 80006fc:	2000      	movhi	r0, #0
 80006fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000702:	bf00      	nop

08000704 <__aeabi_fcmpgt>:
 8000704:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000708:	f7ff ffc8 	bl	800069c <__aeabi_cfrcmple>
 800070c:	bf34      	ite	cc
 800070e:	2001      	movcc	r0, #1
 8000710:	2000      	movcs	r0, #0
 8000712:	f85d fb08 	ldr.w	pc, [sp], #8
 8000716:	bf00      	nop

08000718 <__aeabi_f2iz>:
 8000718:	ea4f 0240 	mov.w	r2, r0, lsl #1
 800071c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000720:	d30f      	bcc.n	8000742 <__aeabi_f2iz+0x2a>
 8000722:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000726:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800072a:	d90d      	bls.n	8000748 <__aeabi_f2iz+0x30>
 800072c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000730:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000734:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000738:	fa23 f002 	lsr.w	r0, r3, r2
 800073c:	bf18      	it	ne
 800073e:	4240      	negne	r0, r0
 8000740:	4770      	bx	lr
 8000742:	f04f 0000 	mov.w	r0, #0
 8000746:	4770      	bx	lr
 8000748:	f112 0f61 	cmn.w	r2, #97	; 0x61
 800074c:	d101      	bne.n	8000752 <__aeabi_f2iz+0x3a>
 800074e:	0242      	lsls	r2, r0, #9
 8000750:	d105      	bne.n	800075e <__aeabi_f2iz+0x46>
 8000752:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8000756:	bf08      	it	eq
 8000758:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800075c:	4770      	bx	lr
 800075e:	f04f 0000 	mov.w	r0, #0
 8000762:	4770      	bx	lr

08000764 <__aeabi_f2uiz>:
 8000764:	0042      	lsls	r2, r0, #1
 8000766:	d20e      	bcs.n	8000786 <__aeabi_f2uiz+0x22>
 8000768:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800076c:	d30b      	bcc.n	8000786 <__aeabi_f2uiz+0x22>
 800076e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000772:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000776:	d409      	bmi.n	800078c <__aeabi_f2uiz+0x28>
 8000778:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800077c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000780:	fa23 f002 	lsr.w	r0, r3, r2
 8000784:	4770      	bx	lr
 8000786:	f04f 0000 	mov.w	r0, #0
 800078a:	4770      	bx	lr
 800078c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000790:	d101      	bne.n	8000796 <__aeabi_f2uiz+0x32>
 8000792:	0242      	lsls	r2, r0, #9
 8000794:	d102      	bne.n	800079c <__aeabi_f2uiz+0x38>
 8000796:	f04f 30ff 	mov.w	r0, #4294967295
 800079a:	4770      	bx	lr
 800079c:	f04f 0000 	mov.w	r0, #0
 80007a0:	4770      	bx	lr
 80007a2:	bf00      	nop

080007a4 <selfrel_offset31>:
 80007a4:	6803      	ldr	r3, [r0, #0]
 80007a6:	005a      	lsls	r2, r3, #1
 80007a8:	bf4c      	ite	mi
 80007aa:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 80007ae:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 80007b2:	4418      	add	r0, r3
 80007b4:	4770      	bx	lr
 80007b6:	bf00      	nop

080007b8 <search_EIT_table>:
 80007b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007bc:	b339      	cbz	r1, 800080e <search_EIT_table+0x56>
 80007be:	1e4f      	subs	r7, r1, #1
 80007c0:	4604      	mov	r4, r0
 80007c2:	4615      	mov	r5, r2
 80007c4:	463e      	mov	r6, r7
 80007c6:	f04f 0800 	mov.w	r8, #0
 80007ca:	eb08 0106 	add.w	r1, r8, r6
 80007ce:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80007d2:	1049      	asrs	r1, r1, #1
 80007d4:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
 80007d8:	4648      	mov	r0, r9
 80007da:	f7ff ffe3 	bl	80007a4 <selfrel_offset31>
 80007de:	4603      	mov	r3, r0
 80007e0:	00c8      	lsls	r0, r1, #3
 80007e2:	3008      	adds	r0, #8
 80007e4:	428f      	cmp	r7, r1
 80007e6:	4420      	add	r0, r4
 80007e8:	d00b      	beq.n	8000802 <search_EIT_table+0x4a>
 80007ea:	42ab      	cmp	r3, r5
 80007ec:	d80b      	bhi.n	8000806 <search_EIT_table+0x4e>
 80007ee:	f7ff ffd9 	bl	80007a4 <selfrel_offset31>
 80007f2:	3801      	subs	r0, #1
 80007f4:	42a8      	cmp	r0, r5
 80007f6:	f101 0801 	add.w	r8, r1, #1
 80007fa:	d3e6      	bcc.n	80007ca <search_EIT_table+0x12>
 80007fc:	4648      	mov	r0, r9
 80007fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000802:	42ab      	cmp	r3, r5
 8000804:	d9fa      	bls.n	80007fc <search_EIT_table+0x44>
 8000806:	4588      	cmp	r8, r1
 8000808:	d001      	beq.n	800080e <search_EIT_table+0x56>
 800080a:	1e4e      	subs	r6, r1, #1
 800080c:	e7dd      	b.n	80007ca <search_EIT_table+0x12>
 800080e:	f04f 0900 	mov.w	r9, #0
 8000812:	4648      	mov	r0, r9
 8000814:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08000818 <__gnu_unwind_get_pr_addr>:
 8000818:	2801      	cmp	r0, #1
 800081a:	d007      	beq.n	800082c <__gnu_unwind_get_pr_addr+0x14>
 800081c:	2802      	cmp	r0, #2
 800081e:	d007      	beq.n	8000830 <__gnu_unwind_get_pr_addr+0x18>
 8000820:	4b04      	ldr	r3, [pc, #16]	; (8000834 <__gnu_unwind_get_pr_addr+0x1c>)
 8000822:	2800      	cmp	r0, #0
 8000824:	bf0c      	ite	eq
 8000826:	4618      	moveq	r0, r3
 8000828:	2000      	movne	r0, #0
 800082a:	4770      	bx	lr
 800082c:	4802      	ldr	r0, [pc, #8]	; (8000838 <__gnu_unwind_get_pr_addr+0x20>)
 800082e:	4770      	bx	lr
 8000830:	4802      	ldr	r0, [pc, #8]	; (800083c <__gnu_unwind_get_pr_addr+0x24>)
 8000832:	4770      	bx	lr
 8000834:	08000f09 	.word	0x08000f09
 8000838:	08000f0d 	.word	0x08000f0d
 800083c:	08000f11 	.word	0x08000f11

08000840 <get_eit_entry>:
 8000840:	b530      	push	{r4, r5, lr}
 8000842:	4b24      	ldr	r3, [pc, #144]	; (80008d4 <get_eit_entry+0x94>)
 8000844:	4604      	mov	r4, r0
 8000846:	b083      	sub	sp, #12
 8000848:	1e8d      	subs	r5, r1, #2
 800084a:	b33b      	cbz	r3, 800089c <get_eit_entry+0x5c>
 800084c:	4628      	mov	r0, r5
 800084e:	a901      	add	r1, sp, #4
 8000850:	f3af 8000 	nop.w
 8000854:	b1e8      	cbz	r0, 8000892 <get_eit_entry+0x52>
 8000856:	9901      	ldr	r1, [sp, #4]
 8000858:	462a      	mov	r2, r5
 800085a:	f7ff ffad 	bl	80007b8 <search_EIT_table>
 800085e:	4601      	mov	r1, r0
 8000860:	b1b8      	cbz	r0, 8000892 <get_eit_entry+0x52>
 8000862:	f7ff ff9f 	bl	80007a4 <selfrel_offset31>
 8000866:	684b      	ldr	r3, [r1, #4]
 8000868:	64a0      	str	r0, [r4, #72]	; 0x48
 800086a:	2b01      	cmp	r3, #1
 800086c:	d02e      	beq.n	80008cc <get_eit_entry+0x8c>
 800086e:	2b00      	cmp	r3, #0
 8000870:	db27      	blt.n	80008c2 <get_eit_entry+0x82>
 8000872:	1d08      	adds	r0, r1, #4
 8000874:	f7ff ff96 	bl	80007a4 <selfrel_offset31>
 8000878:	2300      	movs	r3, #0
 800087a:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 800087e:	6803      	ldr	r3, [r0, #0]
 8000880:	2b00      	cmp	r3, #0
 8000882:	db12      	blt.n	80008aa <get_eit_entry+0x6a>
 8000884:	f7ff ff8e 	bl	80007a4 <selfrel_offset31>
 8000888:	4603      	mov	r3, r0
 800088a:	2000      	movs	r0, #0
 800088c:	6123      	str	r3, [r4, #16]
 800088e:	b003      	add	sp, #12
 8000890:	bd30      	pop	{r4, r5, pc}
 8000892:	2300      	movs	r3, #0
 8000894:	2009      	movs	r0, #9
 8000896:	6123      	str	r3, [r4, #16]
 8000898:	b003      	add	sp, #12
 800089a:	bd30      	pop	{r4, r5, pc}
 800089c:	4b0e      	ldr	r3, [pc, #56]	; (80008d8 <get_eit_entry+0x98>)
 800089e:	490f      	ldr	r1, [pc, #60]	; (80008dc <get_eit_entry+0x9c>)
 80008a0:	4618      	mov	r0, r3
 80008a2:	1ac9      	subs	r1, r1, r3
 80008a4:	10c9      	asrs	r1, r1, #3
 80008a6:	9101      	str	r1, [sp, #4]
 80008a8:	e7d6      	b.n	8000858 <get_eit_entry+0x18>
 80008aa:	f3c3 6003 	ubfx	r0, r3, #24, #4
 80008ae:	f7ff ffb3 	bl	8000818 <__gnu_unwind_get_pr_addr>
 80008b2:	2800      	cmp	r0, #0
 80008b4:	4603      	mov	r3, r0
 80008b6:	bf14      	ite	ne
 80008b8:	2000      	movne	r0, #0
 80008ba:	2009      	moveq	r0, #9
 80008bc:	6123      	str	r3, [r4, #16]
 80008be:	b003      	add	sp, #12
 80008c0:	bd30      	pop	{r4, r5, pc}
 80008c2:	2301      	movs	r3, #1
 80008c4:	1d08      	adds	r0, r1, #4
 80008c6:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 80008ca:	e7d8      	b.n	800087e <get_eit_entry+0x3e>
 80008cc:	2300      	movs	r3, #0
 80008ce:	2005      	movs	r0, #5
 80008d0:	6123      	str	r3, [r4, #16]
 80008d2:	e7dc      	b.n	800088e <get_eit_entry+0x4e>
 80008d4:	00000000 	.word	0x00000000
 80008d8:	08006d30 	.word	0x08006d30
 80008dc:	08006eb0 	.word	0x08006eb0

080008e0 <restore_non_core_regs>:
 80008e0:	6803      	ldr	r3, [r0, #0]
 80008e2:	b510      	push	{r4, lr}
 80008e4:	07da      	lsls	r2, r3, #31
 80008e6:	4604      	mov	r4, r0
 80008e8:	d406      	bmi.n	80008f8 <restore_non_core_regs+0x18>
 80008ea:	079b      	lsls	r3, r3, #30
 80008ec:	f100 0048 	add.w	r0, r0, #72	; 0x48
 80008f0:	d509      	bpl.n	8000906 <restore_non_core_regs+0x26>
 80008f2:	f000 fc5d 	bl	80011b0 <__gnu_Unwind_Restore_VFP_D>
 80008f6:	6823      	ldr	r3, [r4, #0]
 80008f8:	0759      	lsls	r1, r3, #29
 80008fa:	d509      	bpl.n	8000910 <restore_non_core_regs+0x30>
 80008fc:	071a      	lsls	r2, r3, #28
 80008fe:	d50e      	bpl.n	800091e <restore_non_core_regs+0x3e>
 8000900:	06db      	lsls	r3, r3, #27
 8000902:	d513      	bpl.n	800092c <restore_non_core_regs+0x4c>
 8000904:	bd10      	pop	{r4, pc}
 8000906:	f000 fc4b 	bl	80011a0 <__gnu_Unwind_Restore_VFP>
 800090a:	6823      	ldr	r3, [r4, #0]
 800090c:	0759      	lsls	r1, r3, #29
 800090e:	d4f5      	bmi.n	80008fc <restore_non_core_regs+0x1c>
 8000910:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000914:	f000 fc54 	bl	80011c0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8000918:	6823      	ldr	r3, [r4, #0]
 800091a:	071a      	lsls	r2, r3, #28
 800091c:	d4f0      	bmi.n	8000900 <restore_non_core_regs+0x20>
 800091e:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8000922:	f000 fc55 	bl	80011d0 <__gnu_Unwind_Restore_WMMXD>
 8000926:	6823      	ldr	r3, [r4, #0]
 8000928:	06db      	lsls	r3, r3, #27
 800092a:	d4eb      	bmi.n	8000904 <restore_non_core_regs+0x24>
 800092c:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8000930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000934:	f000 bc90 	b.w	8001258 <__gnu_Unwind_Restore_WMMXC>

08000938 <__gnu_unwind_24bit.constprop.0>:
 8000938:	2009      	movs	r0, #9
 800093a:	4770      	bx	lr

0800093c <_Unwind_decode_typeinfo_ptr.constprop.0>:
 800093c:	4603      	mov	r3, r0
 800093e:	6800      	ldr	r0, [r0, #0]
 8000940:	b100      	cbz	r0, 8000944 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
 8000942:	4418      	add	r0, r3
 8000944:	4770      	bx	lr
 8000946:	bf00      	nop

08000948 <_Unwind_DebugHook>:
 8000948:	4770      	bx	lr
 800094a:	bf00      	nop

0800094c <unwind_phase2>:
 800094c:	b570      	push	{r4, r5, r6, lr}
 800094e:	4604      	mov	r4, r0
 8000950:	460e      	mov	r6, r1
 8000952:	4620      	mov	r0, r4
 8000954:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8000956:	f7ff ff73 	bl	8000840 <get_eit_entry>
 800095a:	4605      	mov	r5, r0
 800095c:	b998      	cbnz	r0, 8000986 <unwind_phase2+0x3a>
 800095e:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
 8000962:	4632      	mov	r2, r6
 8000964:	4621      	mov	r1, r4
 8000966:	2001      	movs	r0, #1
 8000968:	6923      	ldr	r3, [r4, #16]
 800096a:	f8c4 c014 	str.w	ip, [r4, #20]
 800096e:	4798      	blx	r3
 8000970:	2808      	cmp	r0, #8
 8000972:	d0ee      	beq.n	8000952 <unwind_phase2+0x6>
 8000974:	2807      	cmp	r0, #7
 8000976:	d106      	bne.n	8000986 <unwind_phase2+0x3a>
 8000978:	4628      	mov	r0, r5
 800097a:	6c31      	ldr	r1, [r6, #64]	; 0x40
 800097c:	f7ff ffe4 	bl	8000948 <_Unwind_DebugHook>
 8000980:	1d30      	adds	r0, r6, #4
 8000982:	f000 fc01 	bl	8001188 <__restore_core_regs>
 8000986:	f005 fc4d 	bl	8006224 <abort>
 800098a:	bf00      	nop

0800098c <unwind_phase2_forced>:
 800098c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000990:	f04f 0a00 	mov.w	sl, #0
 8000994:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 8000998:	f10d 0e0c 	add.w	lr, sp, #12
 800099c:	f101 0c04 	add.w	ip, r1, #4
 80009a0:	68c7      	ldr	r7, [r0, #12]
 80009a2:	f8d0 8018 	ldr.w	r8, [r0, #24]
 80009a6:	4606      	mov	r6, r0
 80009a8:	4614      	mov	r4, r2
 80009aa:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80009ae:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80009b2:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80009b6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80009ba:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80009be:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80009c2:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 80009c6:	ad02      	add	r5, sp, #8
 80009c8:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 80009cc:	f8c5 a000 	str.w	sl, [r5]
 80009d0:	e021      	b.n	8000a16 <unwind_phase2_forced+0x8a>
 80009d2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80009d4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80009d8:	4629      	mov	r1, r5
 80009da:	6173      	str	r3, [r6, #20]
 80009dc:	a87a      	add	r0, sp, #488	; 0x1e8
 80009de:	f005 fc63 	bl	80062a8 <memcpy>
 80009e2:	4631      	mov	r1, r6
 80009e4:	4650      	mov	r0, sl
 80009e6:	6933      	ldr	r3, [r6, #16]
 80009e8:	aa7a      	add	r2, sp, #488	; 0x1e8
 80009ea:	4798      	blx	r3
 80009ec:	9c88      	ldr	r4, [sp, #544]	; 0x220
 80009ee:	4682      	mov	sl, r0
 80009f0:	646c      	str	r4, [r5, #68]	; 0x44
 80009f2:	4633      	mov	r3, r6
 80009f4:	4632      	mov	r2, r6
 80009f6:	4649      	mov	r1, r9
 80009f8:	2001      	movs	r0, #1
 80009fa:	e9cd 5800 	strd	r5, r8, [sp]
 80009fe:	47b8      	blx	r7
 8000a00:	4604      	mov	r4, r0
 8000a02:	b9f0      	cbnz	r0, 8000a42 <unwind_phase2_forced+0xb6>
 8000a04:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8000a08:	4628      	mov	r0, r5
 8000a0a:	a97a      	add	r1, sp, #488	; 0x1e8
 8000a0c:	f005 fc4c 	bl	80062a8 <memcpy>
 8000a10:	f1ba 0f08 	cmp.w	sl, #8
 8000a14:	d11b      	bne.n	8000a4e <unwind_phase2_forced+0xc2>
 8000a16:	4630      	mov	r0, r6
 8000a18:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8000a1a:	f7ff ff11 	bl	8000840 <get_eit_entry>
 8000a1e:	f104 0909 	add.w	r9, r4, #9
 8000a22:	fa5f fa89 	uxtb.w	sl, r9
 8000a26:	4604      	mov	r4, r0
 8000a28:	2800      	cmp	r0, #0
 8000a2a:	d0d2      	beq.n	80009d2 <unwind_phase2_forced+0x46>
 8000a2c:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8000a2e:	4633      	mov	r3, r6
 8000a30:	6469      	str	r1, [r5, #68]	; 0x44
 8000a32:	4632      	mov	r2, r6
 8000a34:	2001      	movs	r0, #1
 8000a36:	e9cd 5800 	strd	r5, r8, [sp]
 8000a3a:	f04a 0110 	orr.w	r1, sl, #16
 8000a3e:	47b8      	blx	r7
 8000a40:	b100      	cbz	r0, 8000a44 <unwind_phase2_forced+0xb8>
 8000a42:	2409      	movs	r4, #9
 8000a44:	4620      	mov	r0, r4
 8000a46:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 8000a4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a4e:	f1ba 0f07 	cmp.w	sl, #7
 8000a52:	d1f6      	bne.n	8000a42 <unwind_phase2_forced+0xb6>
 8000a54:	4620      	mov	r0, r4
 8000a56:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8000a58:	f7ff ff76 	bl	8000948 <_Unwind_DebugHook>
 8000a5c:	a803      	add	r0, sp, #12
 8000a5e:	f000 fb93 	bl	8001188 <__restore_core_regs>
 8000a62:	bf00      	nop

08000a64 <_Unwind_GetCFA>:
 8000a64:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8000a66:	4770      	bx	lr

08000a68 <__gnu_Unwind_RaiseException>:
 8000a68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a6a:	f04f 37ff 	mov.w	r7, #4294967295
 8000a6e:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8000a70:	b0f9      	sub	sp, #484	; 0x1e4
 8000a72:	640b      	str	r3, [r1, #64]	; 0x40
 8000a74:	ac01      	add	r4, sp, #4
 8000a76:	f101 0c04 	add.w	ip, r1, #4
 8000a7a:	460e      	mov	r6, r1
 8000a7c:	4605      	mov	r5, r0
 8000a7e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8000a82:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000a84:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8000a88:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000a8a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8000a8e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000a90:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 8000a94:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8000a98:	9700      	str	r7, [sp, #0]
 8000a9a:	e006      	b.n	8000aaa <__gnu_Unwind_RaiseException+0x42>
 8000a9c:	466a      	mov	r2, sp
 8000a9e:	4629      	mov	r1, r5
 8000aa0:	692b      	ldr	r3, [r5, #16]
 8000aa2:	4798      	blx	r3
 8000aa4:	2808      	cmp	r0, #8
 8000aa6:	4604      	mov	r4, r0
 8000aa8:	d108      	bne.n	8000abc <__gnu_Unwind_RaiseException+0x54>
 8000aaa:	4628      	mov	r0, r5
 8000aac:	9910      	ldr	r1, [sp, #64]	; 0x40
 8000aae:	f7ff fec7 	bl	8000840 <get_eit_entry>
 8000ab2:	2800      	cmp	r0, #0
 8000ab4:	d0f2      	beq.n	8000a9c <__gnu_Unwind_RaiseException+0x34>
 8000ab6:	2009      	movs	r0, #9
 8000ab8:	b079      	add	sp, #484	; 0x1e4
 8000aba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000abc:	4668      	mov	r0, sp
 8000abe:	f7ff ff0f 	bl	80008e0 <restore_non_core_regs>
 8000ac2:	2c06      	cmp	r4, #6
 8000ac4:	d1f7      	bne.n	8000ab6 <__gnu_Unwind_RaiseException+0x4e>
 8000ac6:	4631      	mov	r1, r6
 8000ac8:	4628      	mov	r0, r5
 8000aca:	f7ff ff3f 	bl	800094c <unwind_phase2>
 8000ace:	bf00      	nop

08000ad0 <__gnu_Unwind_ForcedUnwind>:
 8000ad0:	b410      	push	{r4}
 8000ad2:	4614      	mov	r4, r2
 8000ad4:	6184      	str	r4, [r0, #24]
 8000ad6:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8000ad8:	60c1      	str	r1, [r0, #12]
 8000ada:	2200      	movs	r2, #0
 8000adc:	641c      	str	r4, [r3, #64]	; 0x40
 8000ade:	4619      	mov	r1, r3
 8000ae0:	bc10      	pop	{r4}
 8000ae2:	e753      	b.n	800098c <unwind_phase2_forced>

08000ae4 <__gnu_Unwind_Resume>:
 8000ae4:	b570      	push	{r4, r5, r6, lr}
 8000ae6:	6943      	ldr	r3, [r0, #20]
 8000ae8:	68c6      	ldr	r6, [r0, #12]
 8000aea:	640b      	str	r3, [r1, #64]	; 0x40
 8000aec:	b9ae      	cbnz	r6, 8000b1a <__gnu_Unwind_Resume+0x36>
 8000aee:	460a      	mov	r2, r1
 8000af0:	6903      	ldr	r3, [r0, #16]
 8000af2:	4604      	mov	r4, r0
 8000af4:	460d      	mov	r5, r1
 8000af6:	4601      	mov	r1, r0
 8000af8:	2002      	movs	r0, #2
 8000afa:	4798      	blx	r3
 8000afc:	2807      	cmp	r0, #7
 8000afe:	d005      	beq.n	8000b0c <__gnu_Unwind_Resume+0x28>
 8000b00:	2808      	cmp	r0, #8
 8000b02:	d10f      	bne.n	8000b24 <__gnu_Unwind_Resume+0x40>
 8000b04:	4629      	mov	r1, r5
 8000b06:	4620      	mov	r0, r4
 8000b08:	f7ff ff20 	bl	800094c <unwind_phase2>
 8000b0c:	4630      	mov	r0, r6
 8000b0e:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8000b10:	f7ff ff1a 	bl	8000948 <_Unwind_DebugHook>
 8000b14:	1d28      	adds	r0, r5, #4
 8000b16:	f000 fb37 	bl	8001188 <__restore_core_regs>
 8000b1a:	2201      	movs	r2, #1
 8000b1c:	f7ff ff36 	bl	800098c <unwind_phase2_forced>
 8000b20:	f005 fb80 	bl	8006224 <abort>
 8000b24:	f005 fb7e 	bl	8006224 <abort>

08000b28 <__gnu_Unwind_Resume_or_Rethrow>:
 8000b28:	68c2      	ldr	r2, [r0, #12]
 8000b2a:	b12a      	cbz	r2, 8000b38 <__gnu_Unwind_Resume_or_Rethrow+0x10>
 8000b2c:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
 8000b30:	2200      	movs	r2, #0
 8000b32:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
 8000b36:	e729      	b.n	800098c <unwind_phase2_forced>
 8000b38:	e796      	b.n	8000a68 <__gnu_Unwind_RaiseException>
 8000b3a:	bf00      	nop

08000b3c <_Unwind_Complete>:
 8000b3c:	4770      	bx	lr
 8000b3e:	bf00      	nop

08000b40 <_Unwind_DeleteException>:
 8000b40:	6883      	ldr	r3, [r0, #8]
 8000b42:	4601      	mov	r1, r0
 8000b44:	b10b      	cbz	r3, 8000b4a <_Unwind_DeleteException+0xa>
 8000b46:	2001      	movs	r0, #1
 8000b48:	4718      	bx	r3
 8000b4a:	4770      	bx	lr

08000b4c <_Unwind_VRS_Get>:
 8000b4c:	2901      	cmp	r1, #1
 8000b4e:	d012      	beq.n	8000b76 <_Unwind_VRS_Get+0x2a>
 8000b50:	d809      	bhi.n	8000b66 <_Unwind_VRS_Get+0x1a>
 8000b52:	b973      	cbnz	r3, 8000b72 <_Unwind_VRS_Get+0x26>
 8000b54:	2a0f      	cmp	r2, #15
 8000b56:	d80c      	bhi.n	8000b72 <_Unwind_VRS_Get+0x26>
 8000b58:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8000b5c:	6842      	ldr	r2, [r0, #4]
 8000b5e:	4618      	mov	r0, r3
 8000b60:	9b00      	ldr	r3, [sp, #0]
 8000b62:	601a      	str	r2, [r3, #0]
 8000b64:	4770      	bx	lr
 8000b66:	3903      	subs	r1, #3
 8000b68:	2901      	cmp	r1, #1
 8000b6a:	bf94      	ite	ls
 8000b6c:	2001      	movls	r0, #1
 8000b6e:	2002      	movhi	r0, #2
 8000b70:	4770      	bx	lr
 8000b72:	2002      	movs	r0, #2
 8000b74:	4770      	bx	lr
 8000b76:	4608      	mov	r0, r1
 8000b78:	4770      	bx	lr
 8000b7a:	bf00      	nop

08000b7c <_Unwind_GetGR>:
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	b500      	push	{lr}
 8000b80:	b085      	sub	sp, #20
 8000b82:	460a      	mov	r2, r1
 8000b84:	a903      	add	r1, sp, #12
 8000b86:	9100      	str	r1, [sp, #0]
 8000b88:	4619      	mov	r1, r3
 8000b8a:	f7ff ffdf 	bl	8000b4c <_Unwind_VRS_Get>
 8000b8e:	9803      	ldr	r0, [sp, #12]
 8000b90:	b005      	add	sp, #20
 8000b92:	f85d fb04 	ldr.w	pc, [sp], #4
 8000b96:	bf00      	nop

08000b98 <_Unwind_VRS_Set>:
 8000b98:	2901      	cmp	r1, #1
 8000b9a:	d012      	beq.n	8000bc2 <_Unwind_VRS_Set+0x2a>
 8000b9c:	d809      	bhi.n	8000bb2 <_Unwind_VRS_Set+0x1a>
 8000b9e:	b973      	cbnz	r3, 8000bbe <_Unwind_VRS_Set+0x26>
 8000ba0:	2a0f      	cmp	r2, #15
 8000ba2:	d80c      	bhi.n	8000bbe <_Unwind_VRS_Set+0x26>
 8000ba4:	9900      	ldr	r1, [sp, #0]
 8000ba6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8000baa:	6809      	ldr	r1, [r1, #0]
 8000bac:	4618      	mov	r0, r3
 8000bae:	6051      	str	r1, [r2, #4]
 8000bb0:	4770      	bx	lr
 8000bb2:	3903      	subs	r1, #3
 8000bb4:	2901      	cmp	r1, #1
 8000bb6:	bf94      	ite	ls
 8000bb8:	2001      	movls	r0, #1
 8000bba:	2002      	movhi	r0, #2
 8000bbc:	4770      	bx	lr
 8000bbe:	2002      	movs	r0, #2
 8000bc0:	4770      	bx	lr
 8000bc2:	4608      	mov	r0, r1
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <_Unwind_SetGR>:
 8000bc8:	2300      	movs	r3, #0
 8000bca:	b510      	push	{r4, lr}
 8000bcc:	b084      	sub	sp, #16
 8000bce:	ac03      	add	r4, sp, #12
 8000bd0:	9203      	str	r2, [sp, #12]
 8000bd2:	9400      	str	r4, [sp, #0]
 8000bd4:	460a      	mov	r2, r1
 8000bd6:	4619      	mov	r1, r3
 8000bd8:	f7ff ffde 	bl	8000b98 <_Unwind_VRS_Set>
 8000bdc:	b004      	add	sp, #16
 8000bde:	bd10      	pop	{r4, pc}

08000be0 <__gnu_Unwind_Backtrace>:
 8000be0:	b570      	push	{r4, r5, r6, lr}
 8000be2:	f04f 36ff 	mov.w	r6, #4294967295
 8000be6:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8000be8:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
 8000bec:	6413      	str	r3, [r2, #64]	; 0x40
 8000bee:	f10d 0e5c 	add.w	lr, sp, #92	; 0x5c
 8000bf2:	f102 0c04 	add.w	ip, r2, #4
 8000bf6:	4605      	mov	r5, r0
 8000bf8:	460c      	mov	r4, r1
 8000bfa:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8000bfe:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8000c02:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8000c06:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8000c0a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8000c0e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8000c12:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 8000c16:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 8000c1a:	9616      	str	r6, [sp, #88]	; 0x58
 8000c1c:	e012      	b.n	8000c44 <__gnu_Unwind_Backtrace+0x64>
 8000c1e:	210c      	movs	r1, #12
 8000c20:	a816      	add	r0, sp, #88	; 0x58
 8000c22:	466a      	mov	r2, sp
 8000c24:	f7ff ffd0 	bl	8000bc8 <_Unwind_SetGR>
 8000c28:	4621      	mov	r1, r4
 8000c2a:	a816      	add	r0, sp, #88	; 0x58
 8000c2c:	47a8      	blx	r5
 8000c2e:	b978      	cbnz	r0, 8000c50 <__gnu_Unwind_Backtrace+0x70>
 8000c30:	4669      	mov	r1, sp
 8000c32:	2008      	movs	r0, #8
 8000c34:	9b04      	ldr	r3, [sp, #16]
 8000c36:	aa16      	add	r2, sp, #88	; 0x58
 8000c38:	4798      	blx	r3
 8000c3a:	2805      	cmp	r0, #5
 8000c3c:	4606      	mov	r6, r0
 8000c3e:	d008      	beq.n	8000c52 <__gnu_Unwind_Backtrace+0x72>
 8000c40:	2809      	cmp	r0, #9
 8000c42:	d005      	beq.n	8000c50 <__gnu_Unwind_Backtrace+0x70>
 8000c44:	4668      	mov	r0, sp
 8000c46:	9926      	ldr	r1, [sp, #152]	; 0x98
 8000c48:	f7ff fdfa 	bl	8000840 <get_eit_entry>
 8000c4c:	2800      	cmp	r0, #0
 8000c4e:	d0e6      	beq.n	8000c1e <__gnu_Unwind_Backtrace+0x3e>
 8000c50:	2609      	movs	r6, #9
 8000c52:	a816      	add	r0, sp, #88	; 0x58
 8000c54:	f7ff fe44 	bl	80008e0 <restore_non_core_regs>
 8000c58:	4630      	mov	r0, r6
 8000c5a:	f50d 7d0e 	add.w	sp, sp, #568	; 0x238
 8000c5e:	bd70      	pop	{r4, r5, r6, pc}

08000c60 <__gnu_unwind_pr_common>:
 8000c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c64:	461e      	mov	r6, r3
 8000c66:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
 8000c68:	b089      	sub	sp, #36	; 0x24
 8000c6a:	f854 3b04 	ldr.w	r3, [r4], #4
 8000c6e:	460d      	mov	r5, r1
 8000c70:	4617      	mov	r7, r2
 8000c72:	f000 0803 	and.w	r8, r0, #3
 8000c76:	9406      	str	r4, [sp, #24]
 8000c78:	2e00      	cmp	r6, #0
 8000c7a:	d079      	beq.n	8000d70 <__gnu_unwind_pr_common+0x110>
 8000c7c:	2202      	movs	r2, #2
 8000c7e:	f88d 201c 	strb.w	r2, [sp, #28]
 8000c82:	0c1a      	lsrs	r2, r3, #16
 8000c84:	f88d 201d 	strb.w	r2, [sp, #29]
 8000c88:	041b      	lsls	r3, r3, #16
 8000c8a:	b2d2      	uxtb	r2, r2
 8000c8c:	9305      	str	r3, [sp, #20]
 8000c8e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8000c92:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8000c94:	f1b8 0f02 	cmp.w	r8, #2
 8000c98:	bf08      	it	eq
 8000c9a:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8000c9c:	f013 0301 	ands.w	r3, r3, #1
 8000ca0:	d00c      	beq.n	8000cbc <__gnu_unwind_pr_common+0x5c>
 8000ca2:	4638      	mov	r0, r7
 8000ca4:	a905      	add	r1, sp, #20
 8000ca6:	f000 fb71 	bl	800138c <__gnu_unwind_execute>
 8000caa:	b918      	cbnz	r0, 8000cb4 <__gnu_unwind_pr_common+0x54>
 8000cac:	2008      	movs	r0, #8
 8000cae:	b009      	add	sp, #36	; 0x24
 8000cb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cb4:	2009      	movs	r0, #9
 8000cb6:	b009      	add	sp, #36	; 0x24
 8000cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cbc:	f8d4 a000 	ldr.w	sl, [r4]
 8000cc0:	f1ba 0f00 	cmp.w	sl, #0
 8000cc4:	d0ed      	beq.n	8000ca2 <__gnu_unwind_pr_common+0x42>
 8000cc6:	9301      	str	r3, [sp, #4]
 8000cc8:	f000 0308 	and.w	r3, r0, #8
 8000ccc:	9302      	str	r3, [sp, #8]
 8000cce:	2e02      	cmp	r6, #2
 8000cd0:	d04a      	beq.n	8000d68 <__gnu_unwind_pr_common+0x108>
 8000cd2:	f8b4 a000 	ldrh.w	sl, [r4]
 8000cd6:	f8b4 9002 	ldrh.w	r9, [r4, #2]
 8000cda:	3404      	adds	r4, #4
 8000cdc:	6caa      	ldr	r2, [r5, #72]	; 0x48
 8000cde:	210f      	movs	r1, #15
 8000ce0:	4638      	mov	r0, r7
 8000ce2:	f029 0b01 	bic.w	fp, r9, #1
 8000ce6:	4493      	add	fp, r2
 8000ce8:	f7ff ff48 	bl	8000b7c <_Unwind_GetGR>
 8000cec:	4583      	cmp	fp, r0
 8000cee:	d839      	bhi.n	8000d64 <__gnu_unwind_pr_common+0x104>
 8000cf0:	f02a 0201 	bic.w	r2, sl, #1
 8000cf4:	445a      	add	r2, fp
 8000cf6:	4282      	cmp	r2, r0
 8000cf8:	bf94      	ite	ls
 8000cfa:	2000      	movls	r0, #0
 8000cfc:	2001      	movhi	r0, #1
 8000cfe:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8000d02:	f003 0302 	and.w	r3, r3, #2
 8000d06:	f00a 0a01 	and.w	sl, sl, #1
 8000d0a:	ea43 030a 	orr.w	r3, r3, sl
 8000d0e:	2b01      	cmp	r3, #1
 8000d10:	d049      	beq.n	8000da6 <__gnu_unwind_pr_common+0x146>
 8000d12:	2b02      	cmp	r3, #2
 8000d14:	d032      	beq.n	8000d7c <__gnu_unwind_pr_common+0x11c>
 8000d16:	2b00      	cmp	r3, #0
 8000d18:	d1cc      	bne.n	8000cb4 <__gnu_unwind_pr_common+0x54>
 8000d1a:	f1b8 0f00 	cmp.w	r8, #0
 8000d1e:	d002      	beq.n	8000d26 <__gnu_unwind_pr_common+0xc6>
 8000d20:	2800      	cmp	r0, #0
 8000d22:	f040 80ce 	bne.w	8000ec2 <__gnu_unwind_pr_common+0x262>
 8000d26:	3404      	adds	r4, #4
 8000d28:	f8d4 a000 	ldr.w	sl, [r4]
 8000d2c:	f1ba 0f00 	cmp.w	sl, #0
 8000d30:	d1cd      	bne.n	8000cce <__gnu_unwind_pr_common+0x6e>
 8000d32:	4638      	mov	r0, r7
 8000d34:	a905      	add	r1, sp, #20
 8000d36:	f000 fb29 	bl	800138c <__gnu_unwind_execute>
 8000d3a:	2800      	cmp	r0, #0
 8000d3c:	d1ba      	bne.n	8000cb4 <__gnu_unwind_pr_common+0x54>
 8000d3e:	9b01      	ldr	r3, [sp, #4]
 8000d40:	2b00      	cmp	r3, #0
 8000d42:	d0b3      	beq.n	8000cac <__gnu_unwind_pr_common+0x4c>
 8000d44:	210f      	movs	r1, #15
 8000d46:	4638      	mov	r0, r7
 8000d48:	f7ff ff18 	bl	8000b7c <_Unwind_GetGR>
 8000d4c:	210e      	movs	r1, #14
 8000d4e:	4602      	mov	r2, r0
 8000d50:	4638      	mov	r0, r7
 8000d52:	f7ff ff39 	bl	8000bc8 <_Unwind_SetGR>
 8000d56:	4638      	mov	r0, r7
 8000d58:	210f      	movs	r1, #15
 8000d5a:	4a6a      	ldr	r2, [pc, #424]	; (8000f04 <__gnu_unwind_pr_common+0x2a4>)
 8000d5c:	f7ff ff34 	bl	8000bc8 <_Unwind_SetGR>
 8000d60:	2007      	movs	r0, #7
 8000d62:	e7a8      	b.n	8000cb6 <__gnu_unwind_pr_common+0x56>
 8000d64:	2000      	movs	r0, #0
 8000d66:	e7ca      	b.n	8000cfe <__gnu_unwind_pr_common+0x9e>
 8000d68:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8000d6c:	3408      	adds	r4, #8
 8000d6e:	e7b5      	b.n	8000cdc <__gnu_unwind_pr_common+0x7c>
 8000d70:	021b      	lsls	r3, r3, #8
 8000d72:	9305      	str	r3, [sp, #20]
 8000d74:	2303      	movs	r3, #3
 8000d76:	f8ad 301c 	strh.w	r3, [sp, #28]
 8000d7a:	e78a      	b.n	8000c92 <__gnu_unwind_pr_common+0x32>
 8000d7c:	6823      	ldr	r3, [r4, #0]
 8000d7e:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 8000d82:	f1b8 0f00 	cmp.w	r8, #0
 8000d86:	d145      	bne.n	8000e14 <__gnu_unwind_pr_common+0x1b4>
 8000d88:	b128      	cbz	r0, 8000d96 <__gnu_unwind_pr_common+0x136>
 8000d8a:	9a02      	ldr	r2, [sp, #8]
 8000d8c:	2a00      	cmp	r2, #0
 8000d8e:	d05c      	beq.n	8000e4a <__gnu_unwind_pr_common+0x1ea>
 8000d90:	f1bb 0f00 	cmp.w	fp, #0
 8000d94:	d074      	beq.n	8000e80 <__gnu_unwind_pr_common+0x220>
 8000d96:	2b00      	cmp	r3, #0
 8000d98:	da00      	bge.n	8000d9c <__gnu_unwind_pr_common+0x13c>
 8000d9a:	3404      	adds	r4, #4
 8000d9c:	f10b 0b01 	add.w	fp, fp, #1
 8000da0:	eb04 048b 	add.w	r4, r4, fp, lsl #2
 8000da4:	e7c0      	b.n	8000d28 <__gnu_unwind_pr_common+0xc8>
 8000da6:	f1b8 0f00 	cmp.w	r8, #0
 8000daa:	d119      	bne.n	8000de0 <__gnu_unwind_pr_common+0x180>
 8000dac:	b1b0      	cbz	r0, 8000ddc <__gnu_unwind_pr_common+0x17c>
 8000dae:	6863      	ldr	r3, [r4, #4]
 8000db0:	6822      	ldr	r2, [r4, #0]
 8000db2:	1c99      	adds	r1, r3, #2
 8000db4:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8000db8:	f43f af7c 	beq.w	8000cb4 <__gnu_unwind_pr_common+0x54>
 8000dbc:	f105 0158 	add.w	r1, r5, #88	; 0x58
 8000dc0:	3301      	adds	r3, #1
 8000dc2:	9104      	str	r1, [sp, #16]
 8000dc4:	f000 8091 	beq.w	8000eea <__gnu_unwind_pr_common+0x28a>
 8000dc8:	1d20      	adds	r0, r4, #4
 8000dca:	f7ff fdb7 	bl	800093c <_Unwind_decode_typeinfo_ptr.constprop.0>
 8000dce:	ab04      	add	r3, sp, #16
 8000dd0:	4601      	mov	r1, r0
 8000dd2:	4628      	mov	r0, r5
 8000dd4:	f004 fa4a 	bl	800526c <__cxa_type_match>
 8000dd8:	2800      	cmp	r0, #0
 8000dda:	d15c      	bne.n	8000e96 <__gnu_unwind_pr_common+0x236>
 8000ddc:	3408      	adds	r4, #8
 8000dde:	e7a3      	b.n	8000d28 <__gnu_unwind_pr_common+0xc8>
 8000de0:	210d      	movs	r1, #13
 8000de2:	4638      	mov	r0, r7
 8000de4:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8000de8:	f7ff fec8 	bl	8000b7c <_Unwind_GetGR>
 8000dec:	4581      	cmp	r9, r0
 8000dee:	d1f5      	bne.n	8000ddc <__gnu_unwind_pr_common+0x17c>
 8000df0:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8000df2:	429c      	cmp	r4, r3
 8000df4:	d1f2      	bne.n	8000ddc <__gnu_unwind_pr_common+0x17c>
 8000df6:	4620      	mov	r0, r4
 8000df8:	f7ff fcd4 	bl	80007a4 <selfrel_offset31>
 8000dfc:	210f      	movs	r1, #15
 8000dfe:	4602      	mov	r2, r0
 8000e00:	4638      	mov	r0, r7
 8000e02:	f7ff fee1 	bl	8000bc8 <_Unwind_SetGR>
 8000e06:	4638      	mov	r0, r7
 8000e08:	462a      	mov	r2, r5
 8000e0a:	2100      	movs	r1, #0
 8000e0c:	f7ff fedc 	bl	8000bc8 <_Unwind_SetGR>
 8000e10:	2007      	movs	r0, #7
 8000e12:	e750      	b.n	8000cb6 <__gnu_unwind_pr_common+0x56>
 8000e14:	210d      	movs	r1, #13
 8000e16:	4638      	mov	r0, r7
 8000e18:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8000e1c:	f7ff feae 	bl	8000b7c <_Unwind_GetGR>
 8000e20:	4581      	cmp	r9, r0
 8000e22:	d001      	beq.n	8000e28 <__gnu_unwind_pr_common+0x1c8>
 8000e24:	6823      	ldr	r3, [r4, #0]
 8000e26:	e7b6      	b.n	8000d96 <__gnu_unwind_pr_common+0x136>
 8000e28:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8000e2a:	429c      	cmp	r4, r3
 8000e2c:	d1fa      	bne.n	8000e24 <__gnu_unwind_pr_common+0x1c4>
 8000e2e:	2304      	movs	r3, #4
 8000e30:	2200      	movs	r2, #0
 8000e32:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
 8000e36:	18e3      	adds	r3, r4, r3
 8000e38:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
 8000e3c:	636b      	str	r3, [r5, #52]	; 0x34
 8000e3e:	6823      	ldr	r3, [r4, #0]
 8000e40:	2b00      	cmp	r3, #0
 8000e42:	db5a      	blt.n	8000efa <__gnu_unwind_pr_common+0x29a>
 8000e44:	2301      	movs	r3, #1
 8000e46:	9301      	str	r3, [sp, #4]
 8000e48:	e7a8      	b.n	8000d9c <__gnu_unwind_pr_common+0x13c>
 8000e4a:	f105 0358 	add.w	r3, r5, #88	; 0x58
 8000e4e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e52:	4691      	mov	r9, r2
 8000e54:	46b0      	mov	r8, r6
 8000e56:	f104 0a04 	add.w	sl, r4, #4
 8000e5a:	461e      	mov	r6, r3
 8000e5c:	e00e      	b.n	8000e7c <__gnu_unwind_pr_common+0x21c>
 8000e5e:	4650      	mov	r0, sl
 8000e60:	9604      	str	r6, [sp, #16]
 8000e62:	f7ff fd6b 	bl	800093c <_Unwind_decode_typeinfo_ptr.constprop.0>
 8000e66:	2200      	movs	r2, #0
 8000e68:	4601      	mov	r1, r0
 8000e6a:	ab04      	add	r3, sp, #16
 8000e6c:	4628      	mov	r0, r5
 8000e6e:	f109 0901 	add.w	r9, r9, #1
 8000e72:	f10a 0a04 	add.w	sl, sl, #4
 8000e76:	f004 f9f9 	bl	800526c <__cxa_type_match>
 8000e7a:	b9e8      	cbnz	r0, 8000eb8 <__gnu_unwind_pr_common+0x258>
 8000e7c:	45d9      	cmp	r9, fp
 8000e7e:	d1ee      	bne.n	8000e5e <__gnu_unwind_pr_common+0x1fe>
 8000e80:	210d      	movs	r1, #13
 8000e82:	4638      	mov	r0, r7
 8000e84:	f7ff fe7a 	bl	8000b7c <_Unwind_GetGR>
 8000e88:	4603      	mov	r3, r0
 8000e8a:	9a04      	ldr	r2, [sp, #16]
 8000e8c:	2006      	movs	r0, #6
 8000e8e:	e9c5 2409 	strd	r2, r4, [r5, #36]	; 0x24
 8000e92:	622b      	str	r3, [r5, #32]
 8000e94:	e70f      	b.n	8000cb6 <__gnu_unwind_pr_common+0x56>
 8000e96:	4681      	mov	r9, r0
 8000e98:	210d      	movs	r1, #13
 8000e9a:	4638      	mov	r0, r7
 8000e9c:	f7ff fe6e 	bl	8000b7c <_Unwind_GetGR>
 8000ea0:	f1b9 0f02 	cmp.w	r9, #2
 8000ea4:	6228      	str	r0, [r5, #32]
 8000ea6:	d125      	bne.n	8000ef4 <__gnu_unwind_pr_common+0x294>
 8000ea8:	462b      	mov	r3, r5
 8000eaa:	9a04      	ldr	r2, [sp, #16]
 8000eac:	f843 2f2c 	str.w	r2, [r3, #44]!
 8000eb0:	626b      	str	r3, [r5, #36]	; 0x24
 8000eb2:	2006      	movs	r0, #6
 8000eb4:	62ac      	str	r4, [r5, #40]	; 0x28
 8000eb6:	e6fe      	b.n	8000cb6 <__gnu_unwind_pr_common+0x56>
 8000eb8:	4646      	mov	r6, r8
 8000eba:	6823      	ldr	r3, [r4, #0]
 8000ebc:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8000ec0:	e769      	b.n	8000d96 <__gnu_unwind_pr_common+0x136>
 8000ec2:	4620      	mov	r0, r4
 8000ec4:	f7ff fc6e 	bl	80007a4 <selfrel_offset31>
 8000ec8:	4602      	mov	r2, r0
 8000eca:	3404      	adds	r4, #4
 8000ecc:	63ac      	str	r4, [r5, #56]	; 0x38
 8000ece:	4628      	mov	r0, r5
 8000ed0:	4614      	mov	r4, r2
 8000ed2:	f004 fa29 	bl	8005328 <__cxa_begin_cleanup>
 8000ed6:	2800      	cmp	r0, #0
 8000ed8:	f43f aeec 	beq.w	8000cb4 <__gnu_unwind_pr_common+0x54>
 8000edc:	4638      	mov	r0, r7
 8000ede:	4622      	mov	r2, r4
 8000ee0:	210f      	movs	r1, #15
 8000ee2:	f7ff fe71 	bl	8000bc8 <_Unwind_SetGR>
 8000ee6:	2007      	movs	r0, #7
 8000ee8:	e6e5      	b.n	8000cb6 <__gnu_unwind_pr_common+0x56>
 8000eea:	210d      	movs	r1, #13
 8000eec:	4638      	mov	r0, r7
 8000eee:	f7ff fe45 	bl	8000b7c <_Unwind_GetGR>
 8000ef2:	6228      	str	r0, [r5, #32]
 8000ef4:	9b04      	ldr	r3, [sp, #16]
 8000ef6:	626b      	str	r3, [r5, #36]	; 0x24
 8000ef8:	e7db      	b.n	8000eb2 <__gnu_unwind_pr_common+0x252>
 8000efa:	f10b 0001 	add.w	r0, fp, #1
 8000efe:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8000f02:	e779      	b.n	8000df8 <__gnu_unwind_pr_common+0x198>
 8000f04:	08006161 	.word	0x08006161

08000f08 <__aeabi_unwind_cpp_pr0>:
 8000f08:	2300      	movs	r3, #0
 8000f0a:	e6a9      	b.n	8000c60 <__gnu_unwind_pr_common>

08000f0c <__aeabi_unwind_cpp_pr1>:
 8000f0c:	2301      	movs	r3, #1
 8000f0e:	e6a7      	b.n	8000c60 <__gnu_unwind_pr_common>

08000f10 <__aeabi_unwind_cpp_pr2>:
 8000f10:	2302      	movs	r3, #2
 8000f12:	e6a5      	b.n	8000c60 <__gnu_unwind_pr_common>

08000f14 <_Unwind_VRS_Pop>:
 8000f14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000f18:	4606      	mov	r6, r0
 8000f1a:	4615      	mov	r5, r2
 8000f1c:	461c      	mov	r4, r3
 8000f1e:	b0c3      	sub	sp, #268	; 0x10c
 8000f20:	2904      	cmp	r1, #4
 8000f22:	f200 80b8 	bhi.w	8001096 <_Unwind_VRS_Pop+0x182>
 8000f26:	e8df f001 	tbb	[pc, r1]
 8000f2a:	569c      	.short	0x569c
 8000f2c:	2db6      	.short	0x2db6
 8000f2e:	03          	.byte	0x03
 8000f2f:	00          	.byte	0x00
 8000f30:	2c00      	cmp	r4, #0
 8000f32:	f040 80b0 	bne.w	8001096 <_Unwind_VRS_Pop+0x182>
 8000f36:	2a10      	cmp	r2, #16
 8000f38:	f200 80ad 	bhi.w	8001096 <_Unwind_VRS_Pop+0x182>
 8000f3c:	6803      	ldr	r3, [r0, #0]
 8000f3e:	06d8      	lsls	r0, r3, #27
 8000f40:	f100 80f1 	bmi.w	8001126 <_Unwind_VRS_Pop+0x212>
 8000f44:	af20      	add	r7, sp, #128	; 0x80
 8000f46:	4638      	mov	r0, r7
 8000f48:	f000 f990 	bl	800126c <__gnu_Unwind_Save_WMMXC>
 8000f4c:	2401      	movs	r4, #1
 8000f4e:	4638      	mov	r0, r7
 8000f50:	2300      	movs	r3, #0
 8000f52:	6bb1      	ldr	r1, [r6, #56]	; 0x38
 8000f54:	fa04 f203 	lsl.w	r2, r4, r3
 8000f58:	422a      	tst	r2, r5
 8000f5a:	f103 0301 	add.w	r3, r3, #1
 8000f5e:	d005      	beq.n	8000f6c <_Unwind_VRS_Pop+0x58>
 8000f60:	460a      	mov	r2, r1
 8000f62:	f852 cb04 	ldr.w	ip, [r2], #4
 8000f66:	4611      	mov	r1, r2
 8000f68:	f8c0 c000 	str.w	ip, [r0]
 8000f6c:	2b04      	cmp	r3, #4
 8000f6e:	f100 0004 	add.w	r0, r0, #4
 8000f72:	d1ef      	bne.n	8000f54 <_Unwind_VRS_Pop+0x40>
 8000f74:	4638      	mov	r0, r7
 8000f76:	63b1      	str	r1, [r6, #56]	; 0x38
 8000f78:	f000 f96e 	bl	8001258 <__gnu_Unwind_Restore_WMMXC>
 8000f7c:	2000      	movs	r0, #0
 8000f7e:	b043      	add	sp, #268	; 0x10c
 8000f80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000f84:	2c03      	cmp	r4, #3
 8000f86:	f040 8086 	bne.w	8001096 <_Unwind_VRS_Pop+0x182>
 8000f8a:	b294      	uxth	r4, r2
 8000f8c:	eb04 4312 	add.w	r3, r4, r2, lsr #16
 8000f90:	2b10      	cmp	r3, #16
 8000f92:	ea4f 4512 	mov.w	r5, r2, lsr #16
 8000f96:	d87e      	bhi.n	8001096 <_Unwind_VRS_Pop+0x182>
 8000f98:	6803      	ldr	r3, [r0, #0]
 8000f9a:	071f      	lsls	r7, r3, #28
 8000f9c:	f100 80cb 	bmi.w	8001136 <_Unwind_VRS_Pop+0x222>
 8000fa0:	af20      	add	r7, sp, #128	; 0x80
 8000fa2:	4638      	mov	r0, r7
 8000fa4:	f000 f936 	bl	8001214 <__gnu_Unwind_Save_WMMXD>
 8000fa8:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8000faa:	eb07 01c5 	add.w	r1, r7, r5, lsl #3
 8000fae:	b154      	cbz	r4, 8000fc6 <_Unwind_VRS_Pop+0xb2>
 8000fb0:	460b      	mov	r3, r1
 8000fb2:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 8000fb6:	1ad0      	subs	r0, r2, r3
 8000fb8:	00e4      	lsls	r4, r4, #3
 8000fba:	581d      	ldr	r5, [r3, r0]
 8000fbc:	f843 5b04 	str.w	r5, [r3], #4
 8000fc0:	428b      	cmp	r3, r1
 8000fc2:	d1fa      	bne.n	8000fba <_Unwind_VRS_Pop+0xa6>
 8000fc4:	4422      	add	r2, r4
 8000fc6:	4638      	mov	r0, r7
 8000fc8:	63b2      	str	r2, [r6, #56]	; 0x38
 8000fca:	f000 f901 	bl	80011d0 <__gnu_Unwind_Restore_WMMXD>
 8000fce:	2000      	movs	r0, #0
 8000fd0:	b043      	add	sp, #268	; 0x10c
 8000fd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000fd6:	2c01      	cmp	r4, #1
 8000fd8:	ea4f 4812 	mov.w	r8, r2, lsr #16
 8000fdc:	b295      	uxth	r5, r2
 8000fde:	d056      	beq.n	800108e <_Unwind_VRS_Pop+0x17a>
 8000fe0:	2c05      	cmp	r4, #5
 8000fe2:	d158      	bne.n	8001096 <_Unwind_VRS_Pop+0x182>
 8000fe4:	eb08 0905 	add.w	r9, r8, r5
 8000fe8:	f1b9 0f20 	cmp.w	r9, #32
 8000fec:	d853      	bhi.n	8001096 <_Unwind_VRS_Pop+0x182>
 8000fee:	f1b8 0f0f 	cmp.w	r8, #15
 8000ff2:	d973      	bls.n	80010dc <_Unwind_VRS_Pop+0x1c8>
 8000ff4:	46a9      	mov	r9, r5
 8000ff6:	2d00      	cmp	r5, #0
 8000ff8:	f040 8084 	bne.w	8001104 <_Unwind_VRS_Pop+0x1f0>
 8000ffc:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8000ffe:	b365      	cbz	r5, 800105a <_Unwind_VRS_Pop+0x146>
 8001000:	af20      	add	r7, sp, #128	; 0x80
 8001002:	f04f 0900 	mov.w	r9, #0
 8001006:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
 800100a:	3f04      	subs	r7, #4
 800100c:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8001010:	f853 1b04 	ldr.w	r1, [r3], #4
 8001014:	42ab      	cmp	r3, r5
 8001016:	f847 1f04 	str.w	r1, [r7, #4]!
 800101a:	d1f9      	bne.n	8001010 <_Unwind_VRS_Pop+0xfc>
 800101c:	f1b9 0f00 	cmp.w	r9, #0
 8001020:	d00f      	beq.n	8001042 <_Unwind_VRS_Pop+0x12e>
 8001022:	466f      	mov	r7, sp
 8001024:	4641      	mov	r1, r8
 8001026:	2910      	cmp	r1, #16
 8001028:	bf38      	it	cc
 800102a:	2110      	movcc	r1, #16
 800102c:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
 8001030:	3984      	subs	r1, #132	; 0x84
 8001032:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
 8001036:	f853 0b04 	ldr.w	r0, [r3], #4
 800103a:	42ab      	cmp	r3, r5
 800103c:	f841 0f04 	str.w	r0, [r1, #4]!
 8001040:	d1f9      	bne.n	8001036 <_Unwind_VRS_Pop+0x122>
 8001042:	2c01      	cmp	r4, #1
 8001044:	d07f      	beq.n	8001146 <_Unwind_VRS_Pop+0x232>
 8001046:	f1b8 0f0f 	cmp.w	r8, #15
 800104a:	63b5      	str	r5, [r6, #56]	; 0x38
 800104c:	d942      	bls.n	80010d4 <_Unwind_VRS_Pop+0x1c0>
 800104e:	f1b9 0f00 	cmp.w	r9, #0
 8001052:	d002      	beq.n	800105a <_Unwind_VRS_Pop+0x146>
 8001054:	4668      	mov	r0, sp
 8001056:	f000 f8b3 	bl	80011c0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 800105a:	2000      	movs	r0, #0
 800105c:	b043      	add	sp, #268	; 0x10c
 800105e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001062:	b9c4      	cbnz	r4, 8001096 <_Unwind_VRS_Pop+0x182>
 8001064:	4623      	mov	r3, r4
 8001066:	2401      	movs	r4, #1
 8001068:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800106a:	1d37      	adds	r7, r6, #4
 800106c:	b2a8      	uxth	r0, r5
 800106e:	fa04 f103 	lsl.w	r1, r4, r3
 8001072:	4201      	tst	r1, r0
 8001074:	bf1c      	itt	ne
 8001076:	f852 1b04 	ldrne.w	r1, [r2], #4
 800107a:	f847 1023 	strne.w	r1, [r7, r3, lsl #2]
 800107e:	3301      	adds	r3, #1
 8001080:	2b10      	cmp	r3, #16
 8001082:	d1f4      	bne.n	800106e <_Unwind_VRS_Pop+0x15a>
 8001084:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
 8001088:	d1e7      	bne.n	800105a <_Unwind_VRS_Pop+0x146>
 800108a:	63b2      	str	r2, [r6, #56]	; 0x38
 800108c:	e004      	b.n	8001098 <_Unwind_VRS_Pop+0x184>
 800108e:	eb08 0305 	add.w	r3, r8, r5
 8001092:	2b10      	cmp	r3, #16
 8001094:	d903      	bls.n	800109e <_Unwind_VRS_Pop+0x18a>
 8001096:	2002      	movs	r0, #2
 8001098:	b043      	add	sp, #268	; 0x10c
 800109a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800109e:	f1b8 0f0f 	cmp.w	r8, #15
 80010a2:	d8f8      	bhi.n	8001096 <_Unwind_VRS_Pop+0x182>
 80010a4:	6833      	ldr	r3, [r6, #0]
 80010a6:	07da      	lsls	r2, r3, #31
 80010a8:	d506      	bpl.n	80010b8 <_Unwind_VRS_Pop+0x1a4>
 80010aa:	4630      	mov	r0, r6
 80010ac:	f023 0303 	bic.w	r3, r3, #3
 80010b0:	f840 3b48 	str.w	r3, [r0], #72
 80010b4:	f000 f878 	bl	80011a8 <__gnu_Unwind_Save_VFP>
 80010b8:	af20      	add	r7, sp, #128	; 0x80
 80010ba:	4638      	mov	r0, r7
 80010bc:	f000 f874 	bl	80011a8 <__gnu_Unwind_Save_VFP>
 80010c0:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 80010c2:	2d00      	cmp	r5, #0
 80010c4:	d19d      	bne.n	8001002 <_Unwind_VRS_Pop+0xee>
 80010c6:	461d      	mov	r5, r3
 80010c8:	3504      	adds	r5, #4
 80010ca:	4638      	mov	r0, r7
 80010cc:	63b5      	str	r5, [r6, #56]	; 0x38
 80010ce:	f000 f867 	bl	80011a0 <__gnu_Unwind_Restore_VFP>
 80010d2:	e7c2      	b.n	800105a <_Unwind_VRS_Pop+0x146>
 80010d4:	a820      	add	r0, sp, #128	; 0x80
 80010d6:	f000 f86b 	bl	80011b0 <__gnu_Unwind_Restore_VFP_D>
 80010da:	e7b8      	b.n	800104e <_Unwind_VRS_Pop+0x13a>
 80010dc:	f1b9 0f10 	cmp.w	r9, #16
 80010e0:	d93f      	bls.n	8001162 <_Unwind_VRS_Pop+0x24e>
 80010e2:	f1a9 0910 	sub.w	r9, r9, #16
 80010e6:	6833      	ldr	r3, [r6, #0]
 80010e8:	07d9      	lsls	r1, r3, #31
 80010ea:	d508      	bpl.n	80010fe <_Unwind_VRS_Pop+0x1ea>
 80010ec:	4630      	mov	r0, r6
 80010ee:	f023 0301 	bic.w	r3, r3, #1
 80010f2:	f043 0302 	orr.w	r3, r3, #2
 80010f6:	f840 3b48 	str.w	r3, [r0], #72
 80010fa:	f000 f85d 	bl	80011b8 <__gnu_Unwind_Save_VFP_D>
 80010fe:	f1b9 0f00 	cmp.w	r9, #0
 8001102:	d031      	beq.n	8001168 <_Unwind_VRS_Pop+0x254>
 8001104:	6833      	ldr	r3, [r6, #0]
 8001106:	075a      	lsls	r2, r3, #29
 8001108:	d41f      	bmi.n	800114a <_Unwind_VRS_Pop+0x236>
 800110a:	f1b8 0f0f 	cmp.w	r8, #15
 800110e:	d924      	bls.n	800115a <_Unwind_VRS_Pop+0x246>
 8001110:	466f      	mov	r7, sp
 8001112:	f1c8 0510 	rsb	r5, r8, #16
 8001116:	4638      	mov	r0, r7
 8001118:	f000 f856 	bl	80011c8 <__gnu_Unwind_Save_VFP_D_16_to_31>
 800111c:	2d00      	cmp	r5, #0
 800111e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001120:	dd80      	ble.n	8001024 <_Unwind_VRS_Pop+0x110>
 8001122:	af20      	add	r7, sp, #128	; 0x80
 8001124:	e76f      	b.n	8001006 <_Unwind_VRS_Pop+0xf2>
 8001126:	f023 0310 	bic.w	r3, r3, #16
 800112a:	6033      	str	r3, [r6, #0]
 800112c:	f506 70e8 	add.w	r0, r6, #464	; 0x1d0
 8001130:	f000 f89c 	bl	800126c <__gnu_Unwind_Save_WMMXC>
 8001134:	e706      	b.n	8000f44 <_Unwind_VRS_Pop+0x30>
 8001136:	f023 0308 	bic.w	r3, r3, #8
 800113a:	6003      	str	r3, [r0, #0]
 800113c:	f500 70a8 	add.w	r0, r0, #336	; 0x150
 8001140:	f000 f868 	bl	8001214 <__gnu_Unwind_Save_WMMXD>
 8001144:	e72c      	b.n	8000fa0 <_Unwind_VRS_Pop+0x8c>
 8001146:	af20      	add	r7, sp, #128	; 0x80
 8001148:	e7be      	b.n	80010c8 <_Unwind_VRS_Pop+0x1b4>
 800114a:	4630      	mov	r0, r6
 800114c:	f023 0304 	bic.w	r3, r3, #4
 8001150:	f840 3bd0 	str.w	r3, [r0], #208
 8001154:	f000 f838 	bl	80011c8 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8001158:	e7d7      	b.n	800110a <_Unwind_VRS_Pop+0x1f6>
 800115a:	a820      	add	r0, sp, #128	; 0x80
 800115c:	f000 f82c 	bl	80011b8 <__gnu_Unwind_Save_VFP_D>
 8001160:	e7d6      	b.n	8001110 <_Unwind_VRS_Pop+0x1fc>
 8001162:	f04f 0900 	mov.w	r9, #0
 8001166:	e7be      	b.n	80010e6 <_Unwind_VRS_Pop+0x1d2>
 8001168:	f1b8 0f0f 	cmp.w	r8, #15
 800116c:	f63f af46 	bhi.w	8000ffc <_Unwind_VRS_Pop+0xe8>
 8001170:	af20      	add	r7, sp, #128	; 0x80
 8001172:	4638      	mov	r0, r7
 8001174:	f000 f820 	bl	80011b8 <__gnu_Unwind_Save_VFP_D>
 8001178:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800117a:	2d00      	cmp	r5, #0
 800117c:	f47f af41 	bne.w	8001002 <_Unwind_VRS_Pop+0xee>
 8001180:	4638      	mov	r0, r7
 8001182:	f000 f815 	bl	80011b0 <__gnu_Unwind_Restore_VFP_D>
 8001186:	e768      	b.n	800105a <_Unwind_VRS_Pop+0x146>

08001188 <__restore_core_regs>:
 8001188:	f100 0134 	add.w	r1, r0, #52	; 0x34
 800118c:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8001190:	469c      	mov	ip, r3
 8001192:	46a6      	mov	lr, r4
 8001194:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8001198:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 800119c:	46e5      	mov	sp, ip
 800119e:	bd00      	pop	{pc}

080011a0 <__gnu_Unwind_Restore_VFP>:
 80011a0:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 80011a4:	4770      	bx	lr
 80011a6:	bf00      	nop

080011a8 <__gnu_Unwind_Save_VFP>:
 80011a8:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 80011ac:	4770      	bx	lr
 80011ae:	bf00      	nop

080011b0 <__gnu_Unwind_Restore_VFP_D>:
 80011b0:	ec90 0b20 	vldmia	r0, {d0-d15}
 80011b4:	4770      	bx	lr
 80011b6:	bf00      	nop

080011b8 <__gnu_Unwind_Save_VFP_D>:
 80011b8:	ec80 0b20 	vstmia	r0, {d0-d15}
 80011bc:	4770      	bx	lr
 80011be:	bf00      	nop

080011c0 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 80011c0:	ecd0 0b20 	vldmia	r0, {d16-d31}
 80011c4:	4770      	bx	lr
 80011c6:	bf00      	nop

080011c8 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 80011c8:	ecc0 0b20 	vstmia	r0, {d16-d31}
 80011cc:	4770      	bx	lr
 80011ce:	bf00      	nop

080011d0 <__gnu_Unwind_Restore_WMMXD>:
 80011d0:	ecf0 0102 	ldfe	f0, [r0], #8
 80011d4:	ecf0 1102 	ldfe	f1, [r0], #8
 80011d8:	ecf0 2102 	ldfe	f2, [r0], #8
 80011dc:	ecf0 3102 	ldfe	f3, [r0], #8
 80011e0:	ecf0 4102 	ldfe	f4, [r0], #8
 80011e4:	ecf0 5102 	ldfe	f5, [r0], #8
 80011e8:	ecf0 6102 	ldfe	f6, [r0], #8
 80011ec:	ecf0 7102 	ldfe	f7, [r0], #8
 80011f0:	ecf0 8102 	ldfp	f0, [r0], #8
 80011f4:	ecf0 9102 	ldfp	f1, [r0], #8
 80011f8:	ecf0 a102 	ldfp	f2, [r0], #8
 80011fc:	ecf0 b102 	ldfp	f3, [r0], #8
 8001200:	ecf0 c102 	ldfp	f4, [r0], #8
 8001204:	ecf0 d102 	ldfp	f5, [r0], #8
 8001208:	ecf0 e102 	ldfp	f6, [r0], #8
 800120c:	ecf0 f102 	ldfp	f7, [r0], #8
 8001210:	4770      	bx	lr
 8001212:	bf00      	nop

08001214 <__gnu_Unwind_Save_WMMXD>:
 8001214:	ece0 0102 	stfe	f0, [r0], #8
 8001218:	ece0 1102 	stfe	f1, [r0], #8
 800121c:	ece0 2102 	stfe	f2, [r0], #8
 8001220:	ece0 3102 	stfe	f3, [r0], #8
 8001224:	ece0 4102 	stfe	f4, [r0], #8
 8001228:	ece0 5102 	stfe	f5, [r0], #8
 800122c:	ece0 6102 	stfe	f6, [r0], #8
 8001230:	ece0 7102 	stfe	f7, [r0], #8
 8001234:	ece0 8102 	stfp	f0, [r0], #8
 8001238:	ece0 9102 	stfp	f1, [r0], #8
 800123c:	ece0 a102 	stfp	f2, [r0], #8
 8001240:	ece0 b102 	stfp	f3, [r0], #8
 8001244:	ece0 c102 	stfp	f4, [r0], #8
 8001248:	ece0 d102 	stfp	f5, [r0], #8
 800124c:	ece0 e102 	stfp	f6, [r0], #8
 8001250:	ece0 f102 	stfp	f7, [r0], #8
 8001254:	4770      	bx	lr
 8001256:	bf00      	nop

08001258 <__gnu_Unwind_Restore_WMMXC>:
 8001258:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 800125c:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 8001260:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8001264:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8001268:	4770      	bx	lr
 800126a:	bf00      	nop

0800126c <__gnu_Unwind_Save_WMMXC>:
 800126c:	fca0 8101 	stc2	1, cr8, [r0], #4
 8001270:	fca0 9101 	stc2	1, cr9, [r0], #4
 8001274:	fca0 a101 	stc2	1, cr10, [r0], #4
 8001278:	fca0 b101 	stc2	1, cr11, [r0], #4
 800127c:	4770      	bx	lr
 800127e:	bf00      	nop

08001280 <_Unwind_RaiseException>:
 8001280:	46ec      	mov	ip, sp
 8001282:	b500      	push	{lr}
 8001284:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001288:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 800128c:	f04f 0300 	mov.w	r3, #0
 8001290:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001294:	a901      	add	r1, sp, #4
 8001296:	f7ff fbe7 	bl	8000a68 <__gnu_Unwind_RaiseException>
 800129a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800129e:	b012      	add	sp, #72	; 0x48
 80012a0:	4770      	bx	lr
 80012a2:	bf00      	nop

080012a4 <_Unwind_Resume>:
 80012a4:	46ec      	mov	ip, sp
 80012a6:	b500      	push	{lr}
 80012a8:	e92d 5000 	stmdb	sp!, {ip, lr}
 80012ac:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80012b0:	f04f 0300 	mov.w	r3, #0
 80012b4:	e92d 000c 	stmdb	sp!, {r2, r3}
 80012b8:	a901      	add	r1, sp, #4
 80012ba:	f7ff fc13 	bl	8000ae4 <__gnu_Unwind_Resume>
 80012be:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80012c2:	b012      	add	sp, #72	; 0x48
 80012c4:	4770      	bx	lr
 80012c6:	bf00      	nop

080012c8 <_Unwind_Resume_or_Rethrow>:
 80012c8:	46ec      	mov	ip, sp
 80012ca:	b500      	push	{lr}
 80012cc:	e92d 5000 	stmdb	sp!, {ip, lr}
 80012d0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80012d4:	f04f 0300 	mov.w	r3, #0
 80012d8:	e92d 000c 	stmdb	sp!, {r2, r3}
 80012dc:	a901      	add	r1, sp, #4
 80012de:	f7ff fc23 	bl	8000b28 <__gnu_Unwind_Resume_or_Rethrow>
 80012e2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80012e6:	b012      	add	sp, #72	; 0x48
 80012e8:	4770      	bx	lr
 80012ea:	bf00      	nop

080012ec <_Unwind_ForcedUnwind>:
 80012ec:	46ec      	mov	ip, sp
 80012ee:	b500      	push	{lr}
 80012f0:	e92d 5000 	stmdb	sp!, {ip, lr}
 80012f4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80012f8:	f04f 0300 	mov.w	r3, #0
 80012fc:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001300:	ab01      	add	r3, sp, #4
 8001302:	f7ff fbe5 	bl	8000ad0 <__gnu_Unwind_ForcedUnwind>
 8001306:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800130a:	b012      	add	sp, #72	; 0x48
 800130c:	4770      	bx	lr
 800130e:	bf00      	nop

08001310 <_Unwind_Backtrace>:
 8001310:	46ec      	mov	ip, sp
 8001312:	b500      	push	{lr}
 8001314:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001318:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 800131c:	f04f 0300 	mov.w	r3, #0
 8001320:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001324:	aa01      	add	r2, sp, #4
 8001326:	f7ff fc5b 	bl	8000be0 <__gnu_Unwind_Backtrace>
 800132a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800132e:	b012      	add	sp, #72	; 0x48
 8001330:	4770      	bx	lr
 8001332:	bf00      	nop

08001334 <next_unwind_byte>:
 8001334:	7a02      	ldrb	r2, [r0, #8]
 8001336:	4603      	mov	r3, r0
 8001338:	b97a      	cbnz	r2, 800135a <next_unwind_byte+0x26>
 800133a:	7a42      	ldrb	r2, [r0, #9]
 800133c:	b1a2      	cbz	r2, 8001368 <next_unwind_byte+0x34>
 800133e:	f04f 0c03 	mov.w	ip, #3
 8001342:	6841      	ldr	r1, [r0, #4]
 8001344:	3a01      	subs	r2, #1
 8001346:	7242      	strb	r2, [r0, #9]
 8001348:	6808      	ldr	r0, [r1, #0]
 800134a:	1d0a      	adds	r2, r1, #4
 800134c:	605a      	str	r2, [r3, #4]
 800134e:	0202      	lsls	r2, r0, #8
 8001350:	f883 c008 	strb.w	ip, [r3, #8]
 8001354:	0e00      	lsrs	r0, r0, #24
 8001356:	601a      	str	r2, [r3, #0]
 8001358:	4770      	bx	lr
 800135a:	6800      	ldr	r0, [r0, #0]
 800135c:	3a01      	subs	r2, #1
 800135e:	721a      	strb	r2, [r3, #8]
 8001360:	0202      	lsls	r2, r0, #8
 8001362:	601a      	str	r2, [r3, #0]
 8001364:	0e00      	lsrs	r0, r0, #24
 8001366:	4770      	bx	lr
 8001368:	20b0      	movs	r0, #176	; 0xb0
 800136a:	4770      	bx	lr

0800136c <_Unwind_GetGR.constprop.0>:
 800136c:	2300      	movs	r3, #0
 800136e:	b500      	push	{lr}
 8001370:	b085      	sub	sp, #20
 8001372:	a903      	add	r1, sp, #12
 8001374:	9100      	str	r1, [sp, #0]
 8001376:	220c      	movs	r2, #12
 8001378:	4619      	mov	r1, r3
 800137a:	f7ff fbe7 	bl	8000b4c <_Unwind_VRS_Get>
 800137e:	9803      	ldr	r0, [sp, #12]
 8001380:	b005      	add	sp, #20
 8001382:	f85d fb04 	ldr.w	pc, [sp], #4
 8001386:	bf00      	nop

08001388 <unwind_UCB_from_context>:
 8001388:	e7f0      	b.n	800136c <_Unwind_GetGR.constprop.0>
 800138a:	bf00      	nop

0800138c <__gnu_unwind_execute>:
 800138c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001390:	f04f 0800 	mov.w	r8, #0
 8001394:	4605      	mov	r5, r0
 8001396:	460e      	mov	r6, r1
 8001398:	b085      	sub	sp, #20
 800139a:	4630      	mov	r0, r6
 800139c:	f7ff ffca 	bl	8001334 <next_unwind_byte>
 80013a0:	28b0      	cmp	r0, #176	; 0xb0
 80013a2:	4604      	mov	r4, r0
 80013a4:	f000 80ba 	beq.w	800151c <__gnu_unwind_execute+0x190>
 80013a8:	0607      	lsls	r7, r0, #24
 80013aa:	d520      	bpl.n	80013ee <__gnu_unwind_execute+0x62>
 80013ac:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 80013b0:	2b80      	cmp	r3, #128	; 0x80
 80013b2:	d04d      	beq.n	8001450 <__gnu_unwind_execute+0xc4>
 80013b4:	2b90      	cmp	r3, #144	; 0x90
 80013b6:	d036      	beq.n	8001426 <__gnu_unwind_execute+0x9a>
 80013b8:	2ba0      	cmp	r3, #160	; 0xa0
 80013ba:	d060      	beq.n	800147e <__gnu_unwind_execute+0xf2>
 80013bc:	2bb0      	cmp	r3, #176	; 0xb0
 80013be:	d073      	beq.n	80014a8 <__gnu_unwind_execute+0x11c>
 80013c0:	2bc0      	cmp	r3, #192	; 0xc0
 80013c2:	f000 808a 	beq.w	80014da <__gnu_unwind_execute+0x14e>
 80013c6:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 80013ca:	2bd0      	cmp	r3, #208	; 0xd0
 80013cc:	d10b      	bne.n	80013e6 <__gnu_unwind_execute+0x5a>
 80013ce:	f000 0207 	and.w	r2, r0, #7
 80013d2:	3201      	adds	r2, #1
 80013d4:	2305      	movs	r3, #5
 80013d6:	2101      	movs	r1, #1
 80013d8:	4628      	mov	r0, r5
 80013da:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80013de:	f7ff fd99 	bl	8000f14 <_Unwind_VRS_Pop>
 80013e2:	2800      	cmp	r0, #0
 80013e4:	d0d9      	beq.n	800139a <__gnu_unwind_execute+0xe>
 80013e6:	2009      	movs	r0, #9
 80013e8:	b005      	add	sp, #20
 80013ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80013ee:	0083      	lsls	r3, r0, #2
 80013f0:	b2db      	uxtb	r3, r3
 80013f2:	1d1f      	adds	r7, r3, #4
 80013f4:	2300      	movs	r3, #0
 80013f6:	f10d 090c 	add.w	r9, sp, #12
 80013fa:	4619      	mov	r1, r3
 80013fc:	220d      	movs	r2, #13
 80013fe:	4628      	mov	r0, r5
 8001400:	f8cd 9000 	str.w	r9, [sp]
 8001404:	f7ff fba2 	bl	8000b4c <_Unwind_VRS_Get>
 8001408:	9b03      	ldr	r3, [sp, #12]
 800140a:	0660      	lsls	r0, r4, #25
 800140c:	bf4c      	ite	mi
 800140e:	1bdf      	submi	r7, r3, r7
 8001410:	18ff      	addpl	r7, r7, r3
 8001412:	2300      	movs	r3, #0
 8001414:	220d      	movs	r2, #13
 8001416:	4628      	mov	r0, r5
 8001418:	4619      	mov	r1, r3
 800141a:	f8cd 9000 	str.w	r9, [sp]
 800141e:	9703      	str	r7, [sp, #12]
 8001420:	f7ff fbba 	bl	8000b98 <_Unwind_VRS_Set>
 8001424:	e7b9      	b.n	800139a <__gnu_unwind_execute+0xe>
 8001426:	f000 030d 	and.w	r3, r0, #13
 800142a:	2b0d      	cmp	r3, #13
 800142c:	d0db      	beq.n	80013e6 <__gnu_unwind_execute+0x5a>
 800142e:	2300      	movs	r3, #0
 8001430:	af03      	add	r7, sp, #12
 8001432:	4619      	mov	r1, r3
 8001434:	f000 020f 	and.w	r2, r0, #15
 8001438:	9700      	str	r7, [sp, #0]
 800143a:	4628      	mov	r0, r5
 800143c:	f7ff fb86 	bl	8000b4c <_Unwind_VRS_Get>
 8001440:	2300      	movs	r3, #0
 8001442:	220d      	movs	r2, #13
 8001444:	4628      	mov	r0, r5
 8001446:	4619      	mov	r1, r3
 8001448:	9700      	str	r7, [sp, #0]
 800144a:	f7ff fba5 	bl	8000b98 <_Unwind_VRS_Set>
 800144e:	e7a4      	b.n	800139a <__gnu_unwind_execute+0xe>
 8001450:	4630      	mov	r0, r6
 8001452:	f7ff ff6f 	bl	8001334 <next_unwind_byte>
 8001456:	0224      	lsls	r4, r4, #8
 8001458:	4320      	orrs	r0, r4
 800145a:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 800145e:	d0c2      	beq.n	80013e6 <__gnu_unwind_execute+0x5a>
 8001460:	2300      	movs	r3, #0
 8001462:	0104      	lsls	r4, r0, #4
 8001464:	4619      	mov	r1, r3
 8001466:	4628      	mov	r0, r5
 8001468:	b2a2      	uxth	r2, r4
 800146a:	f7ff fd53 	bl	8000f14 <_Unwind_VRS_Pop>
 800146e:	2800      	cmp	r0, #0
 8001470:	d1b9      	bne.n	80013e6 <__gnu_unwind_execute+0x5a>
 8001472:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8001476:	bf18      	it	ne
 8001478:	f04f 0801 	movne.w	r8, #1
 800147c:	e78d      	b.n	800139a <__gnu_unwind_execute+0xe>
 800147e:	43c3      	mvns	r3, r0
 8001480:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8001484:	f003 0307 	and.w	r3, r3, #7
 8001488:	411a      	asrs	r2, r3
 800148a:	2300      	movs	r3, #0
 800148c:	0701      	lsls	r1, r0, #28
 800148e:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 8001492:	bf48      	it	mi
 8001494:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 8001498:	4628      	mov	r0, r5
 800149a:	4619      	mov	r1, r3
 800149c:	f7ff fd3a 	bl	8000f14 <_Unwind_VRS_Pop>
 80014a0:	2800      	cmp	r0, #0
 80014a2:	f43f af7a 	beq.w	800139a <__gnu_unwind_execute+0xe>
 80014a6:	e79e      	b.n	80013e6 <__gnu_unwind_execute+0x5a>
 80014a8:	28b1      	cmp	r0, #177	; 0xb1
 80014aa:	d03c      	beq.n	8001526 <__gnu_unwind_execute+0x19a>
 80014ac:	28b2      	cmp	r0, #178	; 0xb2
 80014ae:	f000 80b0 	beq.w	8001612 <__gnu_unwind_execute+0x286>
 80014b2:	28b3      	cmp	r0, #179	; 0xb3
 80014b4:	d04a      	beq.n	800154c <__gnu_unwind_execute+0x1c0>
 80014b6:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 80014ba:	2bb4      	cmp	r3, #180	; 0xb4
 80014bc:	d093      	beq.n	80013e6 <__gnu_unwind_execute+0x5a>
 80014be:	2301      	movs	r3, #1
 80014c0:	f000 0207 	and.w	r2, r0, #7
 80014c4:	441a      	add	r2, r3
 80014c6:	4628      	mov	r0, r5
 80014c8:	4619      	mov	r1, r3
 80014ca:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80014ce:	f7ff fd21 	bl	8000f14 <_Unwind_VRS_Pop>
 80014d2:	2800      	cmp	r0, #0
 80014d4:	f43f af61 	beq.w	800139a <__gnu_unwind_execute+0xe>
 80014d8:	e785      	b.n	80013e6 <__gnu_unwind_execute+0x5a>
 80014da:	28c6      	cmp	r0, #198	; 0xc6
 80014dc:	d04f      	beq.n	800157e <__gnu_unwind_execute+0x1f2>
 80014de:	28c7      	cmp	r0, #199	; 0xc7
 80014e0:	d061      	beq.n	80015a6 <__gnu_unwind_execute+0x21a>
 80014e2:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 80014e6:	2bc0      	cmp	r3, #192	; 0xc0
 80014e8:	d070      	beq.n	80015cc <__gnu_unwind_execute+0x240>
 80014ea:	28c8      	cmp	r0, #200	; 0xc8
 80014ec:	d07c      	beq.n	80015e8 <__gnu_unwind_execute+0x25c>
 80014ee:	28c9      	cmp	r0, #201	; 0xc9
 80014f0:	f47f af79 	bne.w	80013e6 <__gnu_unwind_execute+0x5a>
 80014f4:	4630      	mov	r0, r6
 80014f6:	f7ff ff1d 	bl	8001334 <next_unwind_byte>
 80014fa:	2305      	movs	r3, #5
 80014fc:	4602      	mov	r2, r0
 80014fe:	2101      	movs	r1, #1
 8001500:	4628      	mov	r0, r5
 8001502:	0314      	lsls	r4, r2, #12
 8001504:	f002 020f 	and.w	r2, r2, #15
 8001508:	f404 2470 	and.w	r4, r4, #983040	; 0xf0000
 800150c:	440a      	add	r2, r1
 800150e:	4322      	orrs	r2, r4
 8001510:	f7ff fd00 	bl	8000f14 <_Unwind_VRS_Pop>
 8001514:	2800      	cmp	r0, #0
 8001516:	f43f af40 	beq.w	800139a <__gnu_unwind_execute+0xe>
 800151a:	e764      	b.n	80013e6 <__gnu_unwind_execute+0x5a>
 800151c:	f1b8 0f00 	cmp.w	r8, #0
 8001520:	d01c      	beq.n	800155c <__gnu_unwind_execute+0x1d0>
 8001522:	2000      	movs	r0, #0
 8001524:	e760      	b.n	80013e8 <__gnu_unwind_execute+0x5c>
 8001526:	4630      	mov	r0, r6
 8001528:	f7ff ff04 	bl	8001334 <next_unwind_byte>
 800152c:	4602      	mov	r2, r0
 800152e:	2800      	cmp	r0, #0
 8001530:	f43f af59 	beq.w	80013e6 <__gnu_unwind_execute+0x5a>
 8001534:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8001538:	f47f af55 	bne.w	80013e6 <__gnu_unwind_execute+0x5a>
 800153c:	4619      	mov	r1, r3
 800153e:	4628      	mov	r0, r5
 8001540:	f7ff fce8 	bl	8000f14 <_Unwind_VRS_Pop>
 8001544:	2800      	cmp	r0, #0
 8001546:	f43f af28 	beq.w	800139a <__gnu_unwind_execute+0xe>
 800154a:	e74c      	b.n	80013e6 <__gnu_unwind_execute+0x5a>
 800154c:	4630      	mov	r0, r6
 800154e:	f7ff fef1 	bl	8001334 <next_unwind_byte>
 8001552:	2301      	movs	r3, #1
 8001554:	4602      	mov	r2, r0
 8001556:	4619      	mov	r1, r3
 8001558:	4628      	mov	r0, r5
 800155a:	e7d2      	b.n	8001502 <__gnu_unwind_execute+0x176>
 800155c:	ac03      	add	r4, sp, #12
 800155e:	4643      	mov	r3, r8
 8001560:	220e      	movs	r2, #14
 8001562:	4641      	mov	r1, r8
 8001564:	4628      	mov	r0, r5
 8001566:	9400      	str	r4, [sp, #0]
 8001568:	f7ff faf0 	bl	8000b4c <_Unwind_VRS_Get>
 800156c:	4643      	mov	r3, r8
 800156e:	220f      	movs	r2, #15
 8001570:	4628      	mov	r0, r5
 8001572:	4641      	mov	r1, r8
 8001574:	9400      	str	r4, [sp, #0]
 8001576:	f7ff fb0f 	bl	8000b98 <_Unwind_VRS_Set>
 800157a:	4640      	mov	r0, r8
 800157c:	e734      	b.n	80013e8 <__gnu_unwind_execute+0x5c>
 800157e:	4630      	mov	r0, r6
 8001580:	f7ff fed8 	bl	8001334 <next_unwind_byte>
 8001584:	4602      	mov	r2, r0
 8001586:	2303      	movs	r3, #3
 8001588:	0314      	lsls	r4, r2, #12
 800158a:	f002 020f 	and.w	r2, r2, #15
 800158e:	f404 2470 	and.w	r4, r4, #983040	; 0xf0000
 8001592:	3201      	adds	r2, #1
 8001594:	4628      	mov	r0, r5
 8001596:	4619      	mov	r1, r3
 8001598:	4322      	orrs	r2, r4
 800159a:	f7ff fcbb 	bl	8000f14 <_Unwind_VRS_Pop>
 800159e:	2800      	cmp	r0, #0
 80015a0:	f43f aefb 	beq.w	800139a <__gnu_unwind_execute+0xe>
 80015a4:	e71f      	b.n	80013e6 <__gnu_unwind_execute+0x5a>
 80015a6:	4630      	mov	r0, r6
 80015a8:	f7ff fec4 	bl	8001334 <next_unwind_byte>
 80015ac:	4602      	mov	r2, r0
 80015ae:	2800      	cmp	r0, #0
 80015b0:	f43f af19 	beq.w	80013e6 <__gnu_unwind_execute+0x5a>
 80015b4:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 80015b8:	f47f af15 	bne.w	80013e6 <__gnu_unwind_execute+0x5a>
 80015bc:	2104      	movs	r1, #4
 80015be:	4628      	mov	r0, r5
 80015c0:	f7ff fca8 	bl	8000f14 <_Unwind_VRS_Pop>
 80015c4:	2800      	cmp	r0, #0
 80015c6:	f43f aee8 	beq.w	800139a <__gnu_unwind_execute+0xe>
 80015ca:	e70c      	b.n	80013e6 <__gnu_unwind_execute+0x5a>
 80015cc:	2303      	movs	r3, #3
 80015ce:	f000 020f 	and.w	r2, r0, #15
 80015d2:	3201      	adds	r2, #1
 80015d4:	4628      	mov	r0, r5
 80015d6:	4619      	mov	r1, r3
 80015d8:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 80015dc:	f7ff fc9a 	bl	8000f14 <_Unwind_VRS_Pop>
 80015e0:	2800      	cmp	r0, #0
 80015e2:	f43f aeda 	beq.w	800139a <__gnu_unwind_execute+0xe>
 80015e6:	e6fe      	b.n	80013e6 <__gnu_unwind_execute+0x5a>
 80015e8:	4630      	mov	r0, r6
 80015ea:	f7ff fea3 	bl	8001334 <next_unwind_byte>
 80015ee:	4602      	mov	r2, r0
 80015f0:	2101      	movs	r1, #1
 80015f2:	f002 04f0 	and.w	r4, r2, #240	; 0xf0
 80015f6:	f002 020f 	and.w	r2, r2, #15
 80015fa:	3410      	adds	r4, #16
 80015fc:	440a      	add	r2, r1
 80015fe:	2305      	movs	r3, #5
 8001600:	4628      	mov	r0, r5
 8001602:	ea42 3204 	orr.w	r2, r2, r4, lsl #12
 8001606:	f7ff fc85 	bl	8000f14 <_Unwind_VRS_Pop>
 800160a:	2800      	cmp	r0, #0
 800160c:	f43f aec5 	beq.w	800139a <__gnu_unwind_execute+0xe>
 8001610:	e6e9      	b.n	80013e6 <__gnu_unwind_execute+0x5a>
 8001612:	2300      	movs	r3, #0
 8001614:	f10d 090c 	add.w	r9, sp, #12
 8001618:	220d      	movs	r2, #13
 800161a:	4619      	mov	r1, r3
 800161c:	4628      	mov	r0, r5
 800161e:	f8cd 9000 	str.w	r9, [sp]
 8001622:	f7ff fa93 	bl	8000b4c <_Unwind_VRS_Get>
 8001626:	4630      	mov	r0, r6
 8001628:	f7ff fe84 	bl	8001334 <next_unwind_byte>
 800162c:	0602      	lsls	r2, r0, #24
 800162e:	f04f 0402 	mov.w	r4, #2
 8001632:	d50c      	bpl.n	800164e <__gnu_unwind_execute+0x2c2>
 8001634:	9b03      	ldr	r3, [sp, #12]
 8001636:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800163a:	40a0      	lsls	r0, r4
 800163c:	4418      	add	r0, r3
 800163e:	9003      	str	r0, [sp, #12]
 8001640:	4630      	mov	r0, r6
 8001642:	f7ff fe77 	bl	8001334 <next_unwind_byte>
 8001646:	0603      	lsls	r3, r0, #24
 8001648:	f104 0407 	add.w	r4, r4, #7
 800164c:	d4f2      	bmi.n	8001634 <__gnu_unwind_execute+0x2a8>
 800164e:	9b03      	ldr	r3, [sp, #12]
 8001650:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 8001654:	40a2      	lsls	r2, r4
 8001656:	f503 7301 	add.w	r3, r3, #516	; 0x204
 800165a:	441a      	add	r2, r3
 800165c:	2300      	movs	r3, #0
 800165e:	9203      	str	r2, [sp, #12]
 8001660:	4628      	mov	r0, r5
 8001662:	220d      	movs	r2, #13
 8001664:	4619      	mov	r1, r3
 8001666:	f8cd 9000 	str.w	r9, [sp]
 800166a:	f7ff fa95 	bl	8000b98 <_Unwind_VRS_Set>
 800166e:	e694      	b.n	800139a <__gnu_unwind_execute+0xe>

08001670 <__gnu_unwind_frame>:
 8001670:	460b      	mov	r3, r1
 8001672:	f04f 0c03 	mov.w	ip, #3
 8001676:	b500      	push	{lr}
 8001678:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800167a:	4618      	mov	r0, r3
 800167c:	6853      	ldr	r3, [r2, #4]
 800167e:	b085      	sub	sp, #20
 8001680:	3208      	adds	r2, #8
 8001682:	9202      	str	r2, [sp, #8]
 8001684:	a901      	add	r1, sp, #4
 8001686:	0e1a      	lsrs	r2, r3, #24
 8001688:	021b      	lsls	r3, r3, #8
 800168a:	f88d c00c 	strb.w	ip, [sp, #12]
 800168e:	9301      	str	r3, [sp, #4]
 8001690:	f88d 200d 	strb.w	r2, [sp, #13]
 8001694:	f7ff fe7a 	bl	800138c <__gnu_unwind_execute>
 8001698:	b005      	add	sp, #20
 800169a:	f85d fb04 	ldr.w	pc, [sp], #4
 800169e:	bf00      	nop

080016a0 <_Unwind_GetRegionStart>:
 80016a0:	b508      	push	{r3, lr}
 80016a2:	f7ff fe71 	bl	8001388 <unwind_UCB_from_context>
 80016a6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80016a8:	bd08      	pop	{r3, pc}
 80016aa:	bf00      	nop

080016ac <_Unwind_GetLanguageSpecificData>:
 80016ac:	b508      	push	{r3, lr}
 80016ae:	f7ff fe6b 	bl	8001388 <unwind_UCB_from_context>
 80016b2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80016b4:	79c3      	ldrb	r3, [r0, #7]
 80016b6:	3302      	adds	r3, #2
 80016b8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80016bc:	bd08      	pop	{r3, pc}
 80016be:	bf00      	nop

080016c0 <_ZSt13move_backwardIPhS0_ET0_T_S2_S1_.isra.0>:
 80016c0:	4613      	mov	r3, r2
 80016c2:	1a0a      	subs	r2, r1, r0
 80016c4:	d003      	beq.n	80016ce <_ZSt13move_backwardIPhS0_ET0_T_S2_S1_.isra.0+0xe>
 80016c6:	4601      	mov	r1, r0
 80016c8:	1a98      	subs	r0, r3, r2
 80016ca:	f004 bdfb 	b.w	80062c4 <memmove>
 80016ce:	4770      	bx	lr

080016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>:
 80016d0:	4281      	cmp	r1, r0
 80016d2:	bf94      	ite	ls
 80016d4:	2120      	movls	r1, #32
 80016d6:	2100      	movhi	r1, #0
 80016d8:	2a01      	cmp	r2, #1
 80016da:	bf0c      	ite	eq
 80016dc:	2310      	moveq	r3, #16
 80016de:	2300      	movne	r3, #0
 80016e0:	4308      	orrs	r0, r1
 80016e2:	4318      	orrs	r0, r3
 80016e4:	4770      	bx	lr

080016e6 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_>:
 80016e6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80016e8:	460e      	mov	r6, r1
 80016ea:	a902      	add	r1, sp, #8
 80016ec:	42b0      	cmp	r0, r6
 80016ee:	4604      	mov	r4, r0
 80016f0:	e901 000c 	stmdb	r1, {r2, r3}
 80016f4:	d018      	beq.n	8001728 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x42>
 80016f6:	1c41      	adds	r1, r0, #1
 80016f8:	42b1      	cmp	r1, r6
 80016fa:	d015      	beq.n	8001728 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x42>
 80016fc:	460d      	mov	r5, r1
 80016fe:	7823      	ldrb	r3, [r4, #0]
 8001700:	f815 7b01 	ldrb.w	r7, [r5], #1
 8001704:	42bb      	cmp	r3, r7
 8001706:	d906      	bls.n	8001716 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x30>
 8001708:	462a      	mov	r2, r5
 800170a:	4620      	mov	r0, r4
 800170c:	f7ff ffd8 	bl	80016c0 <_ZSt13move_backwardIPhS0_ET0_T_S2_S1_.isra.0>
 8001710:	7027      	strb	r7, [r4, #0]
 8001712:	4629      	mov	r1, r5
 8001714:	e7f0      	b.n	80016f8 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x12>
 8001716:	f811 3c01 	ldrb.w	r3, [r1, #-1]
 800171a:	429f      	cmp	r7, r3
 800171c:	d202      	bcs.n	8001724 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x3e>
 800171e:	f801 3901 	strb.w	r3, [r1], #-1
 8001722:	e7f8      	b.n	8001716 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x30>
 8001724:	700f      	strb	r7, [r1, #0]
 8001726:	e7f4      	b.n	8001712 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x2c>
 8001728:	b003      	add	sp, #12
 800172a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800172c <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_>:
 800172c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800172e:	460e      	mov	r6, r1
 8001730:	a902      	add	r1, sp, #8
 8001732:	42b0      	cmp	r0, r6
 8001734:	4604      	mov	r4, r0
 8001736:	e901 000c 	stmdb	r1, {r2, r3}
 800173a:	d01e      	beq.n	800177a <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x4e>
 800173c:	1c41      	adds	r1, r0, #1
 800173e:	42b1      	cmp	r1, r6
 8001740:	d01b      	beq.n	800177a <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x4e>
 8001742:	460d      	mov	r5, r1
 8001744:	7823      	ldrb	r3, [r4, #0]
 8001746:	f815 7b01 	ldrb.w	r7, [r5], #1
 800174a:	f003 0303 	and.w	r3, r3, #3
 800174e:	f007 0203 	and.w	r2, r7, #3
 8001752:	429a      	cmp	r2, r3
 8001754:	d206      	bcs.n	8001764 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x38>
 8001756:	462a      	mov	r2, r5
 8001758:	4620      	mov	r0, r4
 800175a:	f7ff ffb1 	bl	80016c0 <_ZSt13move_backwardIPhS0_ET0_T_S2_S1_.isra.0>
 800175e:	7027      	strb	r7, [r4, #0]
 8001760:	4629      	mov	r1, r5
 8001762:	e7ec      	b.n	800173e <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x12>
 8001764:	f811 3c01 	ldrb.w	r3, [r1, #-1]
 8001768:	f003 0003 	and.w	r0, r3, #3
 800176c:	4282      	cmp	r2, r0
 800176e:	d202      	bcs.n	8001776 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x4a>
 8001770:	f801 3901 	strb.w	r3, [r1], #-1
 8001774:	e7f6      	b.n	8001764 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x38>
 8001776:	700f      	strb	r7, [r1, #0]
 8001778:	e7f2      	b.n	8001760 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x34>
 800177a:	b003      	add	sp, #12
 800177c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800177e <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_>:
 800177e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001780:	1e54      	subs	r4, r2, #1
 8001782:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 8001786:	1065      	asrs	r5, r4, #1
 8001788:	460c      	mov	r4, r1
 800178a:	42a5      	cmp	r5, r4
 800178c:	dd0f      	ble.n	80017ae <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_+0x30>
 800178e:	1c67      	adds	r7, r4, #1
 8001790:	eb00 0c47 	add.w	ip, r0, r7, lsl #1
 8001794:	007e      	lsls	r6, r7, #1
 8001796:	f81c cc01 	ldrb.w	ip, [ip, #-1]
 800179a:	f810 7017 	ldrb.w	r7, [r0, r7, lsl #1]
 800179e:	45bc      	cmp	ip, r7
 80017a0:	bf88      	it	hi
 80017a2:	f106 36ff 	addhi.w	r6, r6, #4294967295
 80017a6:	5d87      	ldrb	r7, [r0, r6]
 80017a8:	5507      	strb	r7, [r0, r4]
 80017aa:	4634      	mov	r4, r6
 80017ac:	e7ed      	b.n	800178a <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_+0xc>
 80017ae:	07d5      	lsls	r5, r2, #31
 80017b0:	d40d      	bmi.n	80017ce <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_+0x50>
 80017b2:	3a02      	subs	r2, #2
 80017b4:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80017b8:	ebb4 0f62 	cmp.w	r4, r2, asr #1
 80017bc:	d107      	bne.n	80017ce <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_+0x50>
 80017be:	1c62      	adds	r2, r4, #1
 80017c0:	0055      	lsls	r5, r2, #1
 80017c2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80017c6:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 80017ca:	5502      	strb	r2, [r0, r4]
 80017cc:	1e6c      	subs	r4, r5, #1
 80017ce:	1e62      	subs	r2, r4, #1
 80017d0:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80017d4:	1052      	asrs	r2, r2, #1
 80017d6:	42a1      	cmp	r1, r4
 80017d8:	eb00 0504 	add.w	r5, r0, r4
 80017dc:	da09      	bge.n	80017f2 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_+0x74>
 80017de:	5c84      	ldrb	r4, [r0, r2]
 80017e0:	42a3      	cmp	r3, r4
 80017e2:	d906      	bls.n	80017f2 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_+0x74>
 80017e4:	702c      	strb	r4, [r5, #0]
 80017e6:	1e54      	subs	r4, r2, #1
 80017e8:	eb04 75d4 	add.w	r5, r4, r4, lsr #31
 80017ec:	4614      	mov	r4, r2
 80017ee:	106a      	asrs	r2, r5, #1
 80017f0:	e7f1      	b.n	80017d6 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_+0x58>
 80017f2:	702b      	strb	r3, [r5, #0]
 80017f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080017f6 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_>:
 80017f6:	b082      	sub	sp, #8
 80017f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80017fc:	4604      	mov	r4, r0
 80017fe:	460d      	mov	r5, r1
 8001800:	4617      	mov	r7, r2
 8001802:	b087      	sub	sp, #28
 8001804:	930f      	str	r3, [sp, #60]	; 0x3c
 8001806:	f100 0801 	add.w	r8, r0, #1
 800180a:	1b2e      	subs	r6, r5, r4
 800180c:	2e10      	cmp	r6, #16
 800180e:	dd29      	ble.n	8001864 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x6e>
 8001810:	bb6f      	cbnz	r7, 800186e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x78>
 8001812:	e9dd 010f 	ldrd	r0, r1, [sp, #60]	; 0x3c
 8001816:	f10d 0808 	add.w	r8, sp, #8
 800181a:	f10d 0910 	add.w	r9, sp, #16
 800181e:	e888 0003 	stmia.w	r8, {r0, r1}
 8001822:	e889 0003 	stmia.w	r9, {r0, r1}
 8001826:	1eb7      	subs	r7, r6, #2
 8001828:	107f      	asrs	r7, r7, #1
 800182a:	e899 0003 	ldmia.w	r9, {r0, r1}
 800182e:	4632      	mov	r2, r6
 8001830:	e88d 0003 	stmia.w	sp, {r0, r1}
 8001834:	5de3      	ldrb	r3, [r4, r7]
 8001836:	4639      	mov	r1, r7
 8001838:	4620      	mov	r0, r4
 800183a:	f7ff ffa0 	bl	800177e <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_>
 800183e:	b10f      	cbz	r7, 8001844 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x4e>
 8001840:	3f01      	subs	r7, #1
 8001842:	e7f2      	b.n	800182a <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x34>
 8001844:	f815 3d01 	ldrb.w	r3, [r5, #-1]!
 8001848:	7822      	ldrb	r2, [r4, #0]
 800184a:	1b2e      	subs	r6, r5, r4
 800184c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8001850:	702a      	strb	r2, [r5, #0]
 8001852:	e88d 0003 	stmia.w	sp, {r0, r1}
 8001856:	4632      	mov	r2, r6
 8001858:	2100      	movs	r1, #0
 800185a:	4620      	mov	r0, r4
 800185c:	f7ff ff8f 	bl	800177e <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_SB_SB_T1_T2_>
 8001860:	2e01      	cmp	r6, #1
 8001862:	dcef      	bgt.n	8001844 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x4e>
 8001864:	b007      	add	sp, #28
 8001866:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800186a:	b002      	add	sp, #8
 800186c:	4770      	bx	lr
 800186e:	1076      	asrs	r6, r6, #1
 8001870:	7860      	ldrb	r0, [r4, #1]
 8001872:	5da1      	ldrb	r1, [r4, r6]
 8001874:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8001878:	4288      	cmp	r0, r1
 800187a:	7823      	ldrb	r3, [r4, #0]
 800187c:	f107 37ff 	add.w	r7, r7, #4294967295
 8001880:	d224      	bcs.n	80018cc <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0xd6>
 8001882:	428a      	cmp	r2, r1
 8001884:	d91c      	bls.n	80018c0 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0xca>
 8001886:	7021      	strb	r1, [r4, #0]
 8001888:	55a3      	strb	r3, [r4, r6]
 800188a:	4642      	mov	r2, r8
 800188c:	462b      	mov	r3, r5
 800188e:	4616      	mov	r6, r2
 8001890:	f894 e000 	ldrb.w	lr, [r4]
 8001894:	f812 0b01 	ldrb.w	r0, [r2], #1
 8001898:	4570      	cmp	r0, lr
 800189a:	d3f8      	bcc.n	800188e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x98>
 800189c:	1e59      	subs	r1, r3, #1
 800189e:	460b      	mov	r3, r1
 80018a0:	f811 c901 	ldrb.w	ip, [r1], #-1
 80018a4:	45e6      	cmp	lr, ip
 80018a6:	d3fa      	bcc.n	800189e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0xa8>
 80018a8:	429e      	cmp	r6, r3
 80018aa:	d317      	bcc.n	80018dc <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0xe6>
 80018ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80018ae:	4629      	mov	r1, r5
 80018b0:	9300      	str	r3, [sp, #0]
 80018b2:	463a      	mov	r2, r7
 80018b4:	4630      	mov	r0, r6
 80018b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80018b8:	f7ff ff9d 	bl	80017f6 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_>
 80018bc:	4635      	mov	r5, r6
 80018be:	e7a4      	b.n	800180a <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x14>
 80018c0:	4282      	cmp	r2, r0
 80018c2:	d905      	bls.n	80018d0 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0xda>
 80018c4:	7022      	strb	r2, [r4, #0]
 80018c6:	f805 3c01 	strb.w	r3, [r5, #-1]
 80018ca:	e7de      	b.n	800188a <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x94>
 80018cc:	4282      	cmp	r2, r0
 80018ce:	d902      	bls.n	80018d6 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0xe0>
 80018d0:	7020      	strb	r0, [r4, #0]
 80018d2:	7063      	strb	r3, [r4, #1]
 80018d4:	e7d9      	b.n	800188a <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x94>
 80018d6:	428a      	cmp	r2, r1
 80018d8:	d9d5      	bls.n	8001886 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x90>
 80018da:	e7f3      	b.n	80018c4 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0xce>
 80018dc:	f802 cc01 	strb.w	ip, [r2, #-1]
 80018e0:	7018      	strb	r0, [r3, #0]
 80018e2:	e7d4      	b.n	800188e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_+0x98>

080018e4 <_ZSt6__sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_>:
 80018e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018e6:	b087      	sub	sp, #28
 80018e8:	ae02      	add	r6, sp, #8
 80018ea:	4288      	cmp	r0, r1
 80018ec:	4604      	mov	r4, r0
 80018ee:	460d      	mov	r5, r1
 80018f0:	e886 000c 	stmia.w	r6, {r2, r3}
 80018f4:	d02a      	beq.n	800194c <_ZSt6__sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x68>
 80018f6:	1a0f      	subs	r7, r1, r0
 80018f8:	fab7 f287 	clz	r2, r7
 80018fc:	f1c2 021f 	rsb	r2, r2, #31
 8001900:	9300      	str	r3, [sp, #0]
 8001902:	0052      	lsls	r2, r2, #1
 8001904:	9b02      	ldr	r3, [sp, #8]
 8001906:	f7ff ff76 	bl	80017f6 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_T1_>
 800190a:	e896 0003 	ldmia.w	r6, {r0, r1}
 800190e:	ab04      	add	r3, sp, #16
 8001910:	2f10      	cmp	r7, #16
 8001912:	e883 0003 	stmia.w	r3, {r0, r1}
 8001916:	dd14      	ble.n	8001942 <_ZSt6__sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x5e>
 8001918:	cb0c      	ldmia	r3, {r2, r3}
 800191a:	f104 0610 	add.w	r6, r4, #16
 800191e:	4631      	mov	r1, r6
 8001920:	4620      	mov	r0, r4
 8001922:	f7ff fee0 	bl	80016e6 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_>
 8001926:	42b5      	cmp	r5, r6
 8001928:	d010      	beq.n	800194c <_ZSt6__sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x68>
 800192a:	4633      	mov	r3, r6
 800192c:	7832      	ldrb	r2, [r6, #0]
 800192e:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 8001932:	428a      	cmp	r2, r1
 8001934:	d202      	bcs.n	800193c <_ZSt6__sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x58>
 8001936:	f803 1901 	strb.w	r1, [r3], #-1
 800193a:	e7f8      	b.n	800192e <_ZSt6__sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x4a>
 800193c:	701a      	strb	r2, [r3, #0]
 800193e:	3601      	adds	r6, #1
 8001940:	e7f1      	b.n	8001926 <_ZSt6__sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_+0x42>
 8001942:	4629      	mov	r1, r5
 8001944:	cb0c      	ldmia	r3, {r2, r3}
 8001946:	4620      	mov	r0, r4
 8001948:	f7ff fecd 	bl	80016e6 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_>
 800194c:	b007      	add	sp, #28
 800194e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08001950 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_>:
 8001950:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001952:	1e54      	subs	r4, r2, #1
 8001954:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 8001958:	1065      	asrs	r5, r4, #1
 800195a:	460c      	mov	r4, r1
 800195c:	42a5      	cmp	r5, r4
 800195e:	dd13      	ble.n	8001988 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x38>
 8001960:	1c67      	adds	r7, r4, #1
 8001962:	eb00 0c47 	add.w	ip, r0, r7, lsl #1
 8001966:	007e      	lsls	r6, r7, #1
 8001968:	f81c cc01 	ldrb.w	ip, [ip, #-1]
 800196c:	f810 7017 	ldrb.w	r7, [r0, r7, lsl #1]
 8001970:	f00c 0c03 	and.w	ip, ip, #3
 8001974:	f007 0703 	and.w	r7, r7, #3
 8001978:	45bc      	cmp	ip, r7
 800197a:	bf88      	it	hi
 800197c:	f106 36ff 	addhi.w	r6, r6, #4294967295
 8001980:	5d87      	ldrb	r7, [r0, r6]
 8001982:	5507      	strb	r7, [r0, r4]
 8001984:	4634      	mov	r4, r6
 8001986:	e7e9      	b.n	800195c <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0xc>
 8001988:	07d5      	lsls	r5, r2, #31
 800198a:	d40d      	bmi.n	80019a8 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x58>
 800198c:	3a02      	subs	r2, #2
 800198e:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8001992:	ebb4 0f62 	cmp.w	r4, r2, asr #1
 8001996:	d107      	bne.n	80019a8 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x58>
 8001998:	1c62      	adds	r2, r4, #1
 800199a:	0055      	lsls	r5, r2, #1
 800199c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80019a0:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 80019a4:	5502      	strb	r2, [r0, r4]
 80019a6:	1e6c      	subs	r4, r5, #1
 80019a8:	1e62      	subs	r2, r4, #1
 80019aa:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80019ae:	1052      	asrs	r2, r2, #1
 80019b0:	f003 0603 	and.w	r6, r3, #3
 80019b4:	42a1      	cmp	r1, r4
 80019b6:	eb00 0504 	add.w	r5, r0, r4
 80019ba:	da0b      	bge.n	80019d4 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x84>
 80019bc:	5c84      	ldrb	r4, [r0, r2]
 80019be:	f004 0703 	and.w	r7, r4, #3
 80019c2:	42b7      	cmp	r7, r6
 80019c4:	d206      	bcs.n	80019d4 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x84>
 80019c6:	702c      	strb	r4, [r5, #0]
 80019c8:	1e54      	subs	r4, r2, #1
 80019ca:	eb04 75d4 	add.w	r5, r4, r4, lsr #31
 80019ce:	4614      	mov	r4, r2
 80019d0:	106a      	asrs	r2, r5, #1
 80019d2:	e7ef      	b.n	80019b4 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x64>
 80019d4:	702b      	strb	r3, [r5, #0]
 80019d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080019d8 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_>:
 80019d8:	b082      	sub	sp, #8
 80019da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80019de:	4604      	mov	r4, r0
 80019e0:	460d      	mov	r5, r1
 80019e2:	4617      	mov	r7, r2
 80019e4:	b087      	sub	sp, #28
 80019e6:	930f      	str	r3, [sp, #60]	; 0x3c
 80019e8:	f100 0801 	add.w	r8, r0, #1
 80019ec:	1b2e      	subs	r6, r5, r4
 80019ee:	2e10      	cmp	r6, #16
 80019f0:	dd29      	ble.n	8001a46 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x6e>
 80019f2:	bb6f      	cbnz	r7, 8001a50 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x78>
 80019f4:	e9dd 010f 	ldrd	r0, r1, [sp, #60]	; 0x3c
 80019f8:	f10d 0808 	add.w	r8, sp, #8
 80019fc:	f10d 0910 	add.w	r9, sp, #16
 8001a00:	e888 0003 	stmia.w	r8, {r0, r1}
 8001a04:	e889 0003 	stmia.w	r9, {r0, r1}
 8001a08:	1eb7      	subs	r7, r6, #2
 8001a0a:	107f      	asrs	r7, r7, #1
 8001a0c:	e899 0003 	ldmia.w	r9, {r0, r1}
 8001a10:	4632      	mov	r2, r6
 8001a12:	e88d 0003 	stmia.w	sp, {r0, r1}
 8001a16:	5de3      	ldrb	r3, [r4, r7]
 8001a18:	4639      	mov	r1, r7
 8001a1a:	4620      	mov	r0, r4
 8001a1c:	f7ff ff98 	bl	8001950 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_>
 8001a20:	b10f      	cbz	r7, 8001a26 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x4e>
 8001a22:	3f01      	subs	r7, #1
 8001a24:	e7f2      	b.n	8001a0c <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x34>
 8001a26:	f815 3d01 	ldrb.w	r3, [r5, #-1]!
 8001a2a:	7822      	ldrb	r2, [r4, #0]
 8001a2c:	1b2e      	subs	r6, r5, r4
 8001a2e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8001a32:	702a      	strb	r2, [r5, #0]
 8001a34:	e88d 0003 	stmia.w	sp, {r0, r1}
 8001a38:	4632      	mov	r2, r6
 8001a3a:	2100      	movs	r1, #0
 8001a3c:	4620      	mov	r0, r4
 8001a3e:	f7ff ff87 	bl	8001950 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_>
 8001a42:	2e01      	cmp	r6, #1
 8001a44:	dcef      	bgt.n	8001a26 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x4e>
 8001a46:	b007      	add	sp, #28
 8001a48:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001a4c:	b002      	add	sp, #8
 8001a4e:	4770      	bx	lr
 8001a50:	1076      	asrs	r6, r6, #1
 8001a52:	f894 e001 	ldrb.w	lr, [r4, #1]
 8001a56:	5da1      	ldrb	r1, [r4, r6]
 8001a58:	f815 0c01 	ldrb.w	r0, [r5, #-1]
 8001a5c:	f00e 0903 	and.w	r9, lr, #3
 8001a60:	f001 0c03 	and.w	ip, r1, #3
 8001a64:	45e1      	cmp	r9, ip
 8001a66:	7823      	ldrb	r3, [r4, #0]
 8001a68:	f107 37ff 	add.w	r7, r7, #4294967295
 8001a6c:	f000 0203 	and.w	r2, r0, #3
 8001a70:	d229      	bcs.n	8001ac6 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xee>
 8001a72:	4594      	cmp	ip, r2
 8001a74:	d221      	bcs.n	8001aba <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xe2>
 8001a76:	7021      	strb	r1, [r4, #0]
 8001a78:	55a3      	strb	r3, [r4, r6]
 8001a7a:	4642      	mov	r2, r8
 8001a7c:	462b      	mov	r3, r5
 8001a7e:	4616      	mov	r6, r2
 8001a80:	7821      	ldrb	r1, [r4, #0]
 8001a82:	f812 cb01 	ldrb.w	ip, [r2], #1
 8001a86:	f001 0103 	and.w	r1, r1, #3
 8001a8a:	f00c 0003 	and.w	r0, ip, #3
 8001a8e:	4288      	cmp	r0, r1
 8001a90:	d3f5      	bcc.n	8001a7e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xa6>
 8001a92:	1e58      	subs	r0, r3, #1
 8001a94:	4603      	mov	r3, r0
 8001a96:	f810 e901 	ldrb.w	lr, [r0], #-1
 8001a9a:	f00e 0903 	and.w	r9, lr, #3
 8001a9e:	4549      	cmp	r1, r9
 8001aa0:	d3f8      	bcc.n	8001a94 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xbc>
 8001aa2:	429e      	cmp	r6, r3
 8001aa4:	d318      	bcc.n	8001ad8 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x100>
 8001aa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001aa8:	4629      	mov	r1, r5
 8001aaa:	9300      	str	r3, [sp, #0]
 8001aac:	463a      	mov	r2, r7
 8001aae:	4630      	mov	r0, r6
 8001ab0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001ab2:	f7ff ff91 	bl	80019d8 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_>
 8001ab6:	4635      	mov	r5, r6
 8001ab8:	e798      	b.n	80019ec <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x14>
 8001aba:	4591      	cmp	r9, r2
 8001abc:	d205      	bcs.n	8001aca <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xf2>
 8001abe:	7020      	strb	r0, [r4, #0]
 8001ac0:	f805 3c01 	strb.w	r3, [r5, #-1]
 8001ac4:	e7d9      	b.n	8001a7a <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xa2>
 8001ac6:	4591      	cmp	r9, r2
 8001ac8:	d203      	bcs.n	8001ad2 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xfa>
 8001aca:	f884 e000 	strb.w	lr, [r4]
 8001ace:	7063      	strb	r3, [r4, #1]
 8001ad0:	e7d3      	b.n	8001a7a <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xa2>
 8001ad2:	4594      	cmp	ip, r2
 8001ad4:	d2cf      	bcs.n	8001a76 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x9e>
 8001ad6:	e7f2      	b.n	8001abe <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xe6>
 8001ad8:	f802 ec01 	strb.w	lr, [r2, #-1]
 8001adc:	f883 c000 	strb.w	ip, [r3]
 8001ae0:	e7cd      	b.n	8001a7e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xa6>

08001ae2 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0EEJLNS0_10FilterModeE1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE>:
 8001ae2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001ae6:	4604      	mov	r4, r0
 8001ae8:	b099      	sub	sp, #100	; 0x64
 8001aea:	4617      	mov	r7, r2
 8001aec:	4688      	mov	r8, r1
 8001aee:	688a      	ldr	r2, [r1, #8]
 8001af0:	4601      	mov	r1, r0
 8001af2:	2000      	movs	r0, #0
 8001af4:	461e      	mov	r6, r3
 8001af6:	f7ff fdeb 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001afa:	68ba      	ldr	r2, [r7, #8]
 8001afc:	4621      	mov	r1, r4
 8001afe:	9003      	str	r0, [sp, #12]
 8001b00:	2001      	movs	r0, #1
 8001b02:	f7ff fde5 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b06:	68b2      	ldr	r2, [r6, #8]
 8001b08:	4621      	mov	r1, r4
 8001b0a:	9004      	str	r0, [sp, #16]
 8001b0c:	2002      	movs	r0, #2
 8001b0e:	f7ff fddf 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b12:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001b14:	4621      	mov	r1, r4
 8001b16:	689a      	ldr	r2, [r3, #8]
 8001b18:	9005      	str	r0, [sp, #20]
 8001b1a:	2003      	movs	r0, #3
 8001b1c:	f7ff fdd8 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b20:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001b22:	4621      	mov	r1, r4
 8001b24:	689a      	ldr	r2, [r3, #8]
 8001b26:	9006      	str	r0, [sp, #24]
 8001b28:	2004      	movs	r0, #4
 8001b2a:	f7ff fdd1 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8001b30:	4621      	mov	r1, r4
 8001b32:	689a      	ldr	r2, [r3, #8]
 8001b34:	9007      	str	r0, [sp, #28]
 8001b36:	2005      	movs	r0, #5
 8001b38:	f7ff fdca 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b3c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8001b3e:	4621      	mov	r1, r4
 8001b40:	689a      	ldr	r2, [r3, #8]
 8001b42:	900b      	str	r0, [sp, #44]	; 0x2c
 8001b44:	2006      	movs	r0, #6
 8001b46:	f7ff fdc3 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8001b4c:	4683      	mov	fp, r0
 8001b4e:	689a      	ldr	r2, [r3, #8]
 8001b50:	4621      	mov	r1, r4
 8001b52:	2007      	movs	r0, #7
 8001b54:	f7ff fdbc 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b58:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8001b5a:	4682      	mov	sl, r0
 8001b5c:	689a      	ldr	r2, [r3, #8]
 8001b5e:	4621      	mov	r1, r4
 8001b60:	2008      	movs	r0, #8
 8001b62:	f7ff fdb5 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8001b68:	4681      	mov	r9, r0
 8001b6a:	689a      	ldr	r2, [r3, #8]
 8001b6c:	4621      	mov	r1, r4
 8001b6e:	2009      	movs	r0, #9
 8001b70:	f7ff fdae 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8001b76:	4621      	mov	r1, r4
 8001b78:	689a      	ldr	r2, [r3, #8]
 8001b7a:	9008      	str	r0, [sp, #32]
 8001b7c:	200a      	movs	r0, #10
 8001b7e:	f7ff fda7 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b82:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8001b84:	4621      	mov	r1, r4
 8001b86:	9009      	str	r0, [sp, #36]	; 0x24
 8001b88:	689a      	ldr	r2, [r3, #8]
 8001b8a:	200b      	movs	r0, #11
 8001b8c:	f7ff fda0 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b90:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8001b92:	4621      	mov	r1, r4
 8001b94:	689a      	ldr	r2, [r3, #8]
 8001b96:	900a      	str	r0, [sp, #40]	; 0x28
 8001b98:	200c      	movs	r0, #12
 8001b9a:	f7ff fd99 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001b9e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8001ba0:	4605      	mov	r5, r0
 8001ba2:	689a      	ldr	r2, [r3, #8]
 8001ba4:	4621      	mov	r1, r4
 8001ba6:	200d      	movs	r0, #13
 8001ba8:	f7ff fd92 	bl	80016d0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp19convert_to_priorityILNS0_11FilterWidthE0ELNS0_10FilterModeE1EEEhhhRKNS2_15ConfigFilterArgIXT_EXT0_EEE.isra.0>
 8001bac:	9b03      	ldr	r3, [sp, #12]
 8001bae:	f88d 005d 	strb.w	r0, [sp, #93]	; 0x5d
 8001bb2:	f88d 3050 	strb.w	r3, [sp, #80]	; 0x50
 8001bb6:	9b04      	ldr	r3, [sp, #16]
 8001bb8:	f88d b056 	strb.w	fp, [sp, #86]	; 0x56
 8001bbc:	f88d 3051 	strb.w	r3, [sp, #81]	; 0x51
 8001bc0:	9b05      	ldr	r3, [sp, #20]
 8001bc2:	f88d a057 	strb.w	sl, [sp, #87]	; 0x57
 8001bc6:	f88d 3052 	strb.w	r3, [sp, #82]	; 0x52
 8001bca:	9b06      	ldr	r3, [sp, #24]
 8001bcc:	f88d 9058 	strb.w	r9, [sp, #88]	; 0x58
 8001bd0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001bd4:	9b07      	ldr	r3, [sp, #28]
 8001bd6:	f88d 505c 	strb.w	r5, [sp, #92]	; 0x5c
 8001bda:	f88d 3054 	strb.w	r3, [sp, #84]	; 0x54
 8001bde:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001be0:	f10d 015e 	add.w	r1, sp, #94	; 0x5e
 8001be4:	f88d 3055 	strb.w	r3, [sp, #85]	; 0x55
 8001be8:	9b08      	ldr	r3, [sp, #32]
 8001bea:	a814      	add	r0, sp, #80	; 0x50
 8001bec:	f88d 3059 	strb.w	r3, [sp, #89]	; 0x59
 8001bf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001bf2:	f88d 305a 	strb.w	r3, [sp, #90]	; 0x5a
 8001bf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001bf8:	f88d 305b 	strb.w	r3, [sp, #91]	; 0x5b
 8001bfc:	f04f 0300 	mov.w	r3, #0
 8001c00:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
 8001c04:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
 8001c08:	ab12      	add	r3, sp, #72	; 0x48
 8001c0a:	930e      	str	r3, [sp, #56]	; 0x38
 8001c0c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001c0e:	ab10      	add	r3, sp, #64	; 0x40
 8001c10:	930f      	str	r3, [sp, #60]	; 0x3c
 8001c12:	f7ff fe67 	bl	80018e4 <_ZSt6__sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_>
 8001c16:	2200      	movs	r2, #0
 8001c18:	2100      	movs	r1, #0
 8001c1a:	a814      	add	r0, sp, #80	; 0x50
 8001c1c:	7803      	ldrb	r3, [r0, #0]
 8001c1e:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8001c22:	b2db      	uxtb	r3, r3
 8001c24:	f800 3b01 	strb.w	r3, [r0], #1
 8001c28:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8001c2c:	4293      	cmp	r3, r2
 8001c2e:	f101 0101 	add.w	r1, r1, #1
 8001c32:	d001      	beq.n	8001c38 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0EEJLNS0_10FilterModeE1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x156>
 8001c34:	290e      	cmp	r1, #14
 8001c36:	d1f1      	bne.n	8001c1c <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0EEJLNS0_10FilterModeE1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x13a>
 8001c38:	3210      	adds	r2, #16
 8001c3a:	2a40      	cmp	r2, #64	; 0x40
 8001c3c:	d1ec      	bne.n	8001c18 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0EEJLNS0_10FilterModeE1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x136>
 8001c3e:	f04f 0300 	mov.w	r3, #0
 8001c42:	ad0d      	add	r5, sp, #52	; 0x34
 8001c44:	ac0c      	add	r4, sp, #48	; 0x30
 8001c46:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
 8001c4a:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8001c4e:	f10d 015e 	add.w	r1, sp, #94	; 0x5e
 8001c52:	462b      	mov	r3, r5
 8001c54:	a814      	add	r0, sp, #80	; 0x50
 8001c56:	2206      	movs	r2, #6
 8001c58:	9400      	str	r4, [sp, #0]
 8001c5a:	9510      	str	r5, [sp, #64]	; 0x40
 8001c5c:	9411      	str	r4, [sp, #68]	; 0x44
 8001c5e:	f7ff febb 	bl	80019d8 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_>
 8001c62:	4623      	mov	r3, r4
 8001c64:	462a      	mov	r2, r5
 8001c66:	f10d 015e 	add.w	r1, sp, #94	; 0x5e
 8001c6a:	a814      	add	r0, sp, #80	; 0x50
 8001c6c:	e9cd 5412 	strd	r5, r4, [sp, #72]	; 0x48
 8001c70:	f7ff fd5c 	bl	800172c <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0ELSF_0EEJLNS9_10FilterModeE1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1ELSG_1EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_>
 8001c74:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8001c78:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8001c7a:	099b      	lsrs	r3, r3, #6
 8001c7c:	f8c8 300c 	str.w	r3, [r8, #12]
 8001c80:	f89d 3051 	ldrb.w	r3, [sp, #81]	; 0x51
 8001c84:	099b      	lsrs	r3, r3, #6
 8001c86:	60fb      	str	r3, [r7, #12]
 8001c88:	f89d 3052 	ldrb.w	r3, [sp, #82]	; 0x52
 8001c8c:	099b      	lsrs	r3, r3, #6
 8001c8e:	60f3      	str	r3, [r6, #12]
 8001c90:	f89d 3053 	ldrb.w	r3, [sp, #83]	; 0x53
 8001c94:	099b      	lsrs	r3, r3, #6
 8001c96:	60d3      	str	r3, [r2, #12]
 8001c98:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8001c9c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8001c9e:	099b      	lsrs	r3, r3, #6
 8001ca0:	60d3      	str	r3, [r2, #12]
 8001ca2:	f89d 3055 	ldrb.w	r3, [sp, #85]	; 0x55
 8001ca6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8001ca8:	099b      	lsrs	r3, r3, #6
 8001caa:	60d3      	str	r3, [r2, #12]
 8001cac:	f89d 3056 	ldrb.w	r3, [sp, #86]	; 0x56
 8001cb0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8001cb2:	099b      	lsrs	r3, r3, #6
 8001cb4:	60d3      	str	r3, [r2, #12]
 8001cb6:	f89d 3057 	ldrb.w	r3, [sp, #87]	; 0x57
 8001cba:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8001cbc:	099b      	lsrs	r3, r3, #6
 8001cbe:	60d3      	str	r3, [r2, #12]
 8001cc0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8001cc4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8001cc6:	099b      	lsrs	r3, r3, #6
 8001cc8:	60d3      	str	r3, [r2, #12]
 8001cca:	f89d 3059 	ldrb.w	r3, [sp, #89]	; 0x59
 8001cce:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8001cd0:	099b      	lsrs	r3, r3, #6
 8001cd2:	60d3      	str	r3, [r2, #12]
 8001cd4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8001cd8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8001cda:	099b      	lsrs	r3, r3, #6
 8001cdc:	60d3      	str	r3, [r2, #12]
 8001cde:	f89d 305b 	ldrb.w	r3, [sp, #91]	; 0x5b
 8001ce2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8001ce4:	099b      	lsrs	r3, r3, #6
 8001ce6:	60d3      	str	r3, [r2, #12]
 8001ce8:	f89d 305c 	ldrb.w	r3, [sp, #92]	; 0x5c
 8001cec:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8001cee:	099b      	lsrs	r3, r3, #6
 8001cf0:	60d3      	str	r3, [r2, #12]
 8001cf2:	f89d 305d 	ldrb.w	r3, [sp, #93]	; 0x5d
 8001cf6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8001cf8:	099b      	lsrs	r3, r3, #6
 8001cfa:	60d3      	str	r3, [r2, #12]
 8001cfc:	b019      	add	sp, #100	; 0x64
 8001cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08001d04 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE>:
 8001d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d08:	460e      	mov	r6, r1
 8001d0a:	b091      	sub	sp, #68	; 0x44
 8001d0c:	f8dd c07c 	ldr.w	ip, [sp, #124]	; 0x7c
 8001d10:	9f24      	ldr	r7, [sp, #144]	; 0x90
 8001d12:	f8cd c014 	str.w	ip, [sp, #20]
 8001d16:	f8dd c078 	ldr.w	ip, [sp, #120]	; 0x78
 8001d1a:	e9dd ba20 	ldrd	fp, sl, [sp, #128]	; 0x80
 8001d1e:	f8cd c010 	str.w	ip, [sp, #16]
 8001d22:	f8dd c074 	ldr.w	ip, [sp, #116]	; 0x74
 8001d26:	e9dd 9822 	ldrd	r9, r8, [sp, #136]	; 0x88
 8001d2a:	f8cd c00c 	str.w	ip, [sp, #12]
 8001d2e:	f8dd c070 	ldr.w	ip, [sp, #112]	; 0x70
 8001d32:	e9cd a907 	strd	sl, r9, [sp, #28]
 8001d36:	f8cd c008 	str.w	ip, [sp, #8]
 8001d3a:	f8dd c06c 	ldr.w	ip, [sp, #108]	; 0x6c
 8001d3e:	f8cd b018 	str.w	fp, [sp, #24]
 8001d42:	f8cd c004 	str.w	ip, [sp, #4]
 8001d46:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
 8001d4a:	4615      	mov	r5, r2
 8001d4c:	f8cd c000 	str.w	ip, [sp]
 8001d50:	461c      	mov	r4, r3
 8001d52:	900d      	str	r0, [sp, #52]	; 0x34
 8001d54:	e9cd 8709 	strd	r8, r7, [sp, #36]	; 0x24
 8001d58:	f7ff fec3 	bl	8001ae2 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0ELS6_0EEJLNS0_10FilterModeE1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1ELS7_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE>
 8001d5c:	4bd1      	ldr	r3, [pc, #836]	; (80020a4 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a0>)
 8001d5e:	f8d3 2600 	ldr.w	r2, [r3, #1536]	; 0x600
 8001d62:	f042 0201 	orr.w	r2, r2, #1
 8001d66:	f8c3 2600 	str.w	r2, [r3, #1536]	; 0x600
 8001d6a:	f8d3 2600 	ldr.w	r2, [r3, #1536]	; 0x600
 8001d6e:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8001d72:	f8c3 2600 	str.w	r2, [r3, #1536]	; 0x600
 8001d76:	f8d3 0600 	ldr.w	r0, [r3, #1536]	; 0x600
 8001d7a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8001d7c:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8001d80:	f8c3 0600 	str.w	r0, [r3, #1536]	; 0x600
 8001d84:	6871      	ldr	r1, [r6, #4]
 8001d86:	6830      	ldr	r0, [r6, #0]
 8001d88:	aa0e      	add	r2, sp, #56	; 0x38
 8001d8a:	c203      	stmia	r2!, {r0, r1}
 8001d8c:	4ac6      	ldr	r2, [pc, #792]	; (80020a8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a4>)
 8001d8e:	f8c2 0240 	str.w	r0, [r2, #576]	; 0x240
 8001d92:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8001d94:	f8c2 1244 	str.w	r1, [r2, #580]	; 0x244
 8001d98:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8001d9c:	f042 0201 	orr.w	r2, r2, #1
 8001da0:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 8001da4:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8001da8:	f042 0201 	orr.w	r2, r2, #1
 8001dac:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8001db0:	68b2      	ldr	r2, [r6, #8]
 8001db2:	2a00      	cmp	r2, #0
 8001db4:	f040 827d 	bne.w	80022b2 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x5ae>
 8001db8:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8001dbc:	f022 0201 	bic.w	r2, r2, #1
 8001dc0:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8001dc4:	7c32      	ldrb	r2, [r6, #16]
 8001dc6:	2a00      	cmp	r2, #0
 8001dc8:	f000 8278 	beq.w	80022bc <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x5b8>
 8001dcc:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8001dd0:	f042 0201 	orr.w	r2, r2, #1
 8001dd4:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8001dd8:	6828      	ldr	r0, [r5, #0]
 8001dda:	6869      	ldr	r1, [r5, #4]
 8001ddc:	ab0e      	add	r3, sp, #56	; 0x38
 8001dde:	c303      	stmia	r3!, {r0, r1}
 8001de0:	4bb1      	ldr	r3, [pc, #708]	; (80020a8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a4>)
 8001de2:	f8c3 0248 	str.w	r0, [r3, #584]	; 0x248
 8001de6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001de8:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8001dec:	f8c3 264c 	str.w	r2, [r3, #1612]	; 0x64c
 8001df0:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8001df4:	f042 0202 	orr.w	r2, r2, #2
 8001df8:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 8001dfc:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8001e00:	f042 0202 	orr.w	r2, r2, #2
 8001e04:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8001e08:	68aa      	ldr	r2, [r5, #8]
 8001e0a:	2a00      	cmp	r2, #0
 8001e0c:	f040 825b 	bne.w	80022c6 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x5c2>
 8001e10:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8001e14:	f022 0202 	bic.w	r2, r2, #2
 8001e18:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8001e1c:	7c2a      	ldrb	r2, [r5, #16]
 8001e1e:	2a00      	cmp	r2, #0
 8001e20:	f000 8256 	beq.w	80022d0 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x5cc>
 8001e24:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8001e28:	f042 0202 	orr.w	r2, r2, #2
 8001e2c:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8001e30:	6820      	ldr	r0, [r4, #0]
 8001e32:	6861      	ldr	r1, [r4, #4]
 8001e34:	ab0e      	add	r3, sp, #56	; 0x38
 8001e36:	c303      	stmia	r3!, {r0, r1}
 8001e38:	4b9b      	ldr	r3, [pc, #620]	; (80020a8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a4>)
 8001e3a:	f8c3 0250 	str.w	r0, [r3, #592]	; 0x250
 8001e3e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001e40:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8001e44:	f8c3 2654 	str.w	r2, [r3, #1620]	; 0x654
 8001e48:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8001e4c:	f042 0204 	orr.w	r2, r2, #4
 8001e50:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 8001e54:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8001e58:	f042 0204 	orr.w	r2, r2, #4
 8001e5c:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8001e60:	68a2      	ldr	r2, [r4, #8]
 8001e62:	2a00      	cmp	r2, #0
 8001e64:	f040 8239 	bne.w	80022da <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x5d6>
 8001e68:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8001e6c:	f022 0204 	bic.w	r2, r2, #4
 8001e70:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8001e74:	7c22      	ldrb	r2, [r4, #16]
 8001e76:	2a00      	cmp	r2, #0
 8001e78:	f000 8234 	beq.w	80022e4 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x5e0>
 8001e7c:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8001e80:	f042 0204 	orr.w	r2, r2, #4
 8001e84:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8001e88:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8001e8a:	ab0e      	add	r3, sp, #56	; 0x38
 8001e8c:	6810      	ldr	r0, [r2, #0]
 8001e8e:	6851      	ldr	r1, [r2, #4]
 8001e90:	c303      	stmia	r3!, {r0, r1}
 8001e92:	4b85      	ldr	r3, [pc, #532]	; (80020a8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a4>)
 8001e94:	f8c3 0258 	str.w	r0, [r3, #600]	; 0x258
 8001e98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001e9a:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8001e9e:	f8c3 265c 	str.w	r2, [r3, #1628]	; 0x65c
 8001ea2:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8001ea6:	f042 0208 	orr.w	r2, r2, #8
 8001eaa:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 8001eae:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8001eb2:	f042 0208 	orr.w	r2, r2, #8
 8001eb6:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8001eba:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8001ebc:	6892      	ldr	r2, [r2, #8]
 8001ebe:	2a00      	cmp	r2, #0
 8001ec0:	f040 8215 	bne.w	80022ee <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x5ea>
 8001ec4:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8001ec8:	f022 0208 	bic.w	r2, r2, #8
 8001ecc:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8001ed0:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8001ed2:	7c12      	ldrb	r2, [r2, #16]
 8001ed4:	2a00      	cmp	r2, #0
 8001ed6:	f000 820f 	beq.w	80022f8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x5f4>
 8001eda:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8001ede:	f042 0208 	orr.w	r2, r2, #8
 8001ee2:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8001ee6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8001ee8:	ab0e      	add	r3, sp, #56	; 0x38
 8001eea:	6810      	ldr	r0, [r2, #0]
 8001eec:	6851      	ldr	r1, [r2, #4]
 8001eee:	c303      	stmia	r3!, {r0, r1}
 8001ef0:	4b6d      	ldr	r3, [pc, #436]	; (80020a8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a4>)
 8001ef2:	f8c3 0260 	str.w	r0, [r3, #608]	; 0x260
 8001ef6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001ef8:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8001efc:	f8c3 2664 	str.w	r2, [r3, #1636]	; 0x664
 8001f00:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8001f04:	f042 0210 	orr.w	r2, r2, #16
 8001f08:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 8001f0c:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8001f10:	f042 0210 	orr.w	r2, r2, #16
 8001f14:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8001f18:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8001f1a:	6892      	ldr	r2, [r2, #8]
 8001f1c:	2a00      	cmp	r2, #0
 8001f1e:	f040 81f0 	bne.w	8002302 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x5fe>
 8001f22:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8001f26:	f022 0210 	bic.w	r2, r2, #16
 8001f2a:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8001f2e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8001f30:	7c12      	ldrb	r2, [r2, #16]
 8001f32:	2a00      	cmp	r2, #0
 8001f34:	f000 81ea 	beq.w	800230c <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x608>
 8001f38:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8001f3c:	f042 0210 	orr.w	r2, r2, #16
 8001f40:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8001f44:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8001f46:	ab0e      	add	r3, sp, #56	; 0x38
 8001f48:	6810      	ldr	r0, [r2, #0]
 8001f4a:	6851      	ldr	r1, [r2, #4]
 8001f4c:	c303      	stmia	r3!, {r0, r1}
 8001f4e:	4b56      	ldr	r3, [pc, #344]	; (80020a8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a4>)
 8001f50:	f8c3 0268 	str.w	r0, [r3, #616]	; 0x268
 8001f54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001f56:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8001f5a:	f8c3 266c 	str.w	r2, [r3, #1644]	; 0x66c
 8001f5e:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8001f62:	f042 0220 	orr.w	r2, r2, #32
 8001f66:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 8001f6a:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8001f6e:	f042 0220 	orr.w	r2, r2, #32
 8001f72:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8001f76:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8001f78:	6892      	ldr	r2, [r2, #8]
 8001f7a:	2a00      	cmp	r2, #0
 8001f7c:	f040 81cb 	bne.w	8002316 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x612>
 8001f80:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8001f84:	f022 0220 	bic.w	r2, r2, #32
 8001f88:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8001f8c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8001f8e:	7c12      	ldrb	r2, [r2, #16]
 8001f90:	2a00      	cmp	r2, #0
 8001f92:	f000 81c5 	beq.w	8002320 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x61c>
 8001f96:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8001f9a:	f042 0220 	orr.w	r2, r2, #32
 8001f9e:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8001fa2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8001fa4:	ab0e      	add	r3, sp, #56	; 0x38
 8001fa6:	6810      	ldr	r0, [r2, #0]
 8001fa8:	6851      	ldr	r1, [r2, #4]
 8001faa:	c303      	stmia	r3!, {r0, r1}
 8001fac:	4b3e      	ldr	r3, [pc, #248]	; (80020a8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a4>)
 8001fae:	f8c3 0270 	str.w	r0, [r3, #624]	; 0x270
 8001fb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001fb4:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8001fb8:	f8c3 2674 	str.w	r2, [r3, #1652]	; 0x674
 8001fbc:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8001fc0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001fc4:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 8001fc8:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8001fcc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001fd0:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8001fd4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8001fd6:	6892      	ldr	r2, [r2, #8]
 8001fd8:	2a00      	cmp	r2, #0
 8001fda:	f040 81a6 	bne.w	800232a <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x626>
 8001fde:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8001fe2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8001fe6:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8001fea:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8001fec:	7c12      	ldrb	r2, [r2, #16]
 8001fee:	2a00      	cmp	r2, #0
 8001ff0:	f000 81a0 	beq.w	8002334 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x630>
 8001ff4:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8001ff8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001ffc:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8002000:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002002:	ab0e      	add	r3, sp, #56	; 0x38
 8002004:	6810      	ldr	r0, [r2, #0]
 8002006:	6851      	ldr	r1, [r2, #4]
 8002008:	c303      	stmia	r3!, {r0, r1}
 800200a:	4b27      	ldr	r3, [pc, #156]	; (80020a8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a4>)
 800200c:	f8c3 0278 	str.w	r0, [r3, #632]	; 0x278
 8002010:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8002012:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8002016:	f8c3 267c 	str.w	r2, [r3, #1660]	; 0x67c
 800201a:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 800201e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002022:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 8002026:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 800202a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800202e:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8002032:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002034:	6892      	ldr	r2, [r2, #8]
 8002036:	2a00      	cmp	r2, #0
 8002038:	f040 8181 	bne.w	800233e <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x63a>
 800203c:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8002040:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002044:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8002048:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800204a:	7c12      	ldrb	r2, [r2, #16]
 800204c:	2a00      	cmp	r2, #0
 800204e:	f000 817b 	beq.w	8002348 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x644>
 8002052:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8002056:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800205a:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 800205e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8002060:	ab0e      	add	r3, sp, #56	; 0x38
 8002062:	6810      	ldr	r0, [r2, #0]
 8002064:	6851      	ldr	r1, [r2, #4]
 8002066:	c303      	stmia	r3!, {r0, r1}
 8002068:	4b0f      	ldr	r3, [pc, #60]	; (80020a8 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a4>)
 800206a:	f8c3 0280 	str.w	r0, [r3, #640]	; 0x280
 800206e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8002070:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8002074:	f8c3 2684 	str.w	r2, [r3, #1668]	; 0x684
 8002078:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 800207c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002080:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 8002084:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8002088:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800208c:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8002090:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8002092:	6892      	ldr	r2, [r2, #8]
 8002094:	2a00      	cmp	r2, #0
 8002096:	f040 815c 	bne.w	8002352 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x64e>
 800209a:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 800209e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80020a2:	e003      	b.n	80020ac <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a8>
 80020a4:	40006000 	.word	0x40006000
 80020a8:	40006400 	.word	0x40006400
 80020ac:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 80020b0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80020b2:	7c12      	ldrb	r2, [r2, #16]
 80020b4:	2a00      	cmp	r2, #0
 80020b6:	f000 8151 	beq.w	800235c <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x658>
 80020ba:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 80020be:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80020c2:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 80020c6:	f8db 0000 	ldr.w	r0, [fp]
 80020ca:	f8db 1004 	ldr.w	r1, [fp, #4]
 80020ce:	ab0e      	add	r3, sp, #56	; 0x38
 80020d0:	c303      	stmia	r3!, {r0, r1}
 80020d2:	4bbe      	ldr	r3, [pc, #760]	; (80023cc <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x6c8>)
 80020d4:	f8c3 0288 	str.w	r0, [r3, #648]	; 0x288
 80020d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80020da:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80020de:	f8c3 268c 	str.w	r2, [r3, #1676]	; 0x68c
 80020e2:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 80020e6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80020ea:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 80020ee:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 80020f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80020f6:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 80020fa:	f8db 2008 	ldr.w	r2, [fp, #8]
 80020fe:	2a00      	cmp	r2, #0
 8002100:	f040 8131 	bne.w	8002366 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x662>
 8002104:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8002108:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800210c:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8002110:	f89b 2010 	ldrb.w	r2, [fp, #16]
 8002114:	2a00      	cmp	r2, #0
 8002116:	f000 812b 	beq.w	8002370 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x66c>
 800211a:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 800211e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002122:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8002126:	f8da 0000 	ldr.w	r0, [sl]
 800212a:	f8da 1004 	ldr.w	r1, [sl, #4]
 800212e:	ab0e      	add	r3, sp, #56	; 0x38
 8002130:	c303      	stmia	r3!, {r0, r1}
 8002132:	4ba6      	ldr	r3, [pc, #664]	; (80023cc <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x6c8>)
 8002134:	f8c3 0290 	str.w	r0, [r3, #656]	; 0x290
 8002138:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800213a:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800213e:	f8c3 2694 	str.w	r2, [r3, #1684]	; 0x694
 8002142:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8002146:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800214a:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 800214e:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8002152:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002156:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 800215a:	f8da 2008 	ldr.w	r2, [sl, #8]
 800215e:	2a00      	cmp	r2, #0
 8002160:	f040 810b 	bne.w	800237a <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x676>
 8002164:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8002168:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800216c:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8002170:	f89a 2010 	ldrb.w	r2, [sl, #16]
 8002174:	2a00      	cmp	r2, #0
 8002176:	f000 8105 	beq.w	8002384 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x680>
 800217a:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 800217e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002182:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8002186:	f8d9 0000 	ldr.w	r0, [r9]
 800218a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800218e:	ab0e      	add	r3, sp, #56	; 0x38
 8002190:	c303      	stmia	r3!, {r0, r1}
 8002192:	4b8e      	ldr	r3, [pc, #568]	; (80023cc <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x6c8>)
 8002194:	f8c3 0298 	str.w	r0, [r3, #664]	; 0x298
 8002198:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800219a:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800219e:	f8c3 269c 	str.w	r2, [r3, #1692]	; 0x69c
 80021a2:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 80021a6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80021aa:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 80021ae:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 80021b2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80021b6:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 80021ba:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80021be:	2a00      	cmp	r2, #0
 80021c0:	f040 80e5 	bne.w	800238e <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x68a>
 80021c4:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 80021c8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80021cc:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 80021d0:	f899 2010 	ldrb.w	r2, [r9, #16]
 80021d4:	2a00      	cmp	r2, #0
 80021d6:	f000 80df 	beq.w	8002398 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x694>
 80021da:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 80021de:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80021e2:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 80021e6:	f8d8 0000 	ldr.w	r0, [r8]
 80021ea:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80021ee:	ab0e      	add	r3, sp, #56	; 0x38
 80021f0:	c303      	stmia	r3!, {r0, r1}
 80021f2:	4b76      	ldr	r3, [pc, #472]	; (80023cc <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x6c8>)
 80021f4:	f8c3 02a0 	str.w	r0, [r3, #672]	; 0x2a0
 80021f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80021fa:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80021fe:	f8c3 26a4 	str.w	r2, [r3, #1700]	; 0x6a4
 8002202:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8002206:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800220a:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 800220e:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 8002212:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002216:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 800221a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800221e:	2a00      	cmp	r2, #0
 8002220:	f040 80bf 	bne.w	80023a2 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x69e>
 8002224:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8002228:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800222c:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 8002230:	f898 2010 	ldrb.w	r2, [r8, #16]
 8002234:	2a00      	cmp	r2, #0
 8002236:	f000 80b9 	beq.w	80023ac <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x6a8>
 800223a:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 800223e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002242:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 8002246:	6838      	ldr	r0, [r7, #0]
 8002248:	6879      	ldr	r1, [r7, #4]
 800224a:	ab0e      	add	r3, sp, #56	; 0x38
 800224c:	c303      	stmia	r3!, {r0, r1}
 800224e:	4b5f      	ldr	r3, [pc, #380]	; (80023cc <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x6c8>)
 8002250:	f8c3 02a8 	str.w	r0, [r3, #680]	; 0x2a8
 8002254:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8002256:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800225a:	f8c3 26ac 	str.w	r2, [r3, #1708]	; 0x6ac
 800225e:	f8d3 260c 	ldr.w	r2, [r3, #1548]	; 0x60c
 8002262:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002266:	f8c3 260c 	str.w	r2, [r3, #1548]	; 0x60c
 800226a:	f8d3 2604 	ldr.w	r2, [r3, #1540]	; 0x604
 800226e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002272:	f8c3 2604 	str.w	r2, [r3, #1540]	; 0x604
 8002276:	68ba      	ldr	r2, [r7, #8]
 8002278:	2a00      	cmp	r2, #0
 800227a:	f040 809c 	bne.w	80023b6 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x6b2>
 800227e:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8002282:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002286:	f8c3 2614 	str.w	r2, [r3, #1556]	; 0x614
 800228a:	7c3a      	ldrb	r2, [r7, #16]
 800228c:	2a00      	cmp	r2, #0
 800228e:	f000 8097 	beq.w	80023c0 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x6bc>
 8002292:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8002296:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800229a:	f8c3 261c 	str.w	r2, [r3, #1564]	; 0x61c
 800229e:	4a4c      	ldr	r2, [pc, #304]	; (80023d0 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x6cc>)
 80022a0:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 80022a4:	f023 0301 	bic.w	r3, r3, #1
 80022a8:	f8c2 3600 	str.w	r3, [r2, #1536]	; 0x600
 80022ac:	b011      	add	sp, #68	; 0x44
 80022ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80022b2:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 80022b6:	f042 0201 	orr.w	r2, r2, #1
 80022ba:	e581      	b.n	8001dc0 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0xbc>
 80022bc:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 80022c0:	f022 0201 	bic.w	r2, r2, #1
 80022c4:	e586      	b.n	8001dd4 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0xd0>
 80022c6:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 80022ca:	f042 0202 	orr.w	r2, r2, #2
 80022ce:	e5a3      	b.n	8001e18 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x114>
 80022d0:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 80022d4:	f022 0202 	bic.w	r2, r2, #2
 80022d8:	e5a8      	b.n	8001e2c <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x128>
 80022da:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 80022de:	f042 0204 	orr.w	r2, r2, #4
 80022e2:	e5c5      	b.n	8001e70 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x16c>
 80022e4:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 80022e8:	f022 0204 	bic.w	r2, r2, #4
 80022ec:	e5ca      	b.n	8001e84 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x180>
 80022ee:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 80022f2:	f042 0208 	orr.w	r2, r2, #8
 80022f6:	e5e9      	b.n	8001ecc <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x1c8>
 80022f8:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 80022fc:	f022 0208 	bic.w	r2, r2, #8
 8002300:	e5ef      	b.n	8001ee2 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x1de>
 8002302:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8002306:	f042 0210 	orr.w	r2, r2, #16
 800230a:	e60e      	b.n	8001f2a <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x226>
 800230c:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8002310:	f022 0210 	bic.w	r2, r2, #16
 8002314:	e614      	b.n	8001f40 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x23c>
 8002316:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 800231a:	f042 0220 	orr.w	r2, r2, #32
 800231e:	e633      	b.n	8001f88 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x284>
 8002320:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8002324:	f022 0220 	bic.w	r2, r2, #32
 8002328:	e639      	b.n	8001f9e <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x29a>
 800232a:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 800232e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002332:	e658      	b.n	8001fe6 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x2e2>
 8002334:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8002338:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800233c:	e65e      	b.n	8001ffc <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x2f8>
 800233e:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8002342:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002346:	e67d      	b.n	8002044 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x340>
 8002348:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 800234c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002350:	e683      	b.n	800205a <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x356>
 8002352:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8002356:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800235a:	e6a7      	b.n	80020ac <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3a8>
 800235c:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8002360:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002364:	e6ad      	b.n	80020c2 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x3be>
 8002366:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 800236a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800236e:	e6cd      	b.n	800210c <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x408>
 8002370:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8002374:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8002378:	e6d3      	b.n	8002122 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x41e>
 800237a:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 800237e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002382:	e6f3      	b.n	800216c <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x468>
 8002384:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 8002388:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800238c:	e6f9      	b.n	8002182 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x47e>
 800238e:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 8002392:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002396:	e719      	b.n	80021cc <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x4c8>
 8002398:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 800239c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80023a0:	e71f      	b.n	80021e2 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x4de>
 80023a2:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 80023a6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80023aa:	e73f      	b.n	800222c <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x528>
 80023ac:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 80023b0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80023b4:	e745      	b.n	8002242 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x53e>
 80023b6:	f8d3 2614 	ldr.w	r2, [r3, #1556]	; 0x614
 80023ba:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80023be:	e762      	b.n	8002286 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x582>
 80023c0:	f8d3 261c 	ldr.w	r2, [r3, #1564]	; 0x61c
 80023c4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80023c8:	e767      	b.n	800229a <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x596>
 80023ca:	bf00      	nop
 80023cc:	40006400 	.word	0x40006400
 80023d0:	40006000 	.word	0x40006000

080023d4 <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087TxFrameELj10EE4pushERKS3_>:
 80023d4:	b530      	push	{r4, r5, lr}
 80023d6:	e9d0 231d 	ldrd	r2, r3, [r0, #116]	; 0x74
 80023da:	240b      	movs	r4, #11
 80023dc:	2b0a      	cmp	r3, #10
 80023de:	bf08      	it	eq
 80023e0:	6782      	streq	r2, [r0, #120]	; 0x78
 80023e2:	6f83      	ldr	r3, [r0, #120]	; 0x78
 80023e4:	680d      	ldr	r5, [r1, #0]
 80023e6:	2b09      	cmp	r3, #9
 80023e8:	fb04 0403 	mla	r4, r4, r3, r0
 80023ec:	bf08      	it	eq
 80023ee:	2300      	moveq	r3, #0
 80023f0:	6065      	str	r5, [r4, #4]
 80023f2:	684d      	ldr	r5, [r1, #4]
 80023f4:	bf18      	it	ne
 80023f6:	3301      	addne	r3, #1
 80023f8:	60a5      	str	r5, [r4, #8]
 80023fa:	890d      	ldrh	r5, [r1, #8]
 80023fc:	429a      	cmp	r2, r3
 80023fe:	81a5      	strh	r5, [r4, #12]
 8002400:	7a89      	ldrb	r1, [r1, #10]
 8002402:	73a1      	strb	r1, [r4, #14]
 8002404:	6783      	str	r3, [r0, #120]	; 0x78
 8002406:	d105      	bne.n	8002414 <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087TxFrameELj10EE4pushERKS3_+0x40>
 8002408:	2a09      	cmp	r2, #9
 800240a:	bf0b      	itete	eq
 800240c:	2300      	moveq	r3, #0
 800240e:	3201      	addne	r2, #1
 8002410:	6743      	streq	r3, [r0, #116]	; 0x74
 8002412:	6742      	strne	r2, [r0, #116]	; 0x74
 8002414:	bd30      	pop	{r4, r5, pc}

08002416 <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087RxFrameELj20EE4pushERKS3_>:
 8002416:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002418:	e9d0 c379 	ldrd	ip, r3, [r0, #484]	; 0x1e4
 800241c:	2418      	movs	r4, #24
 800241e:	2b14      	cmp	r3, #20
 8002420:	bf08      	it	eq
 8002422:	f8c0 c1e8 	streq.w	ip, [r0, #488]	; 0x1e8
 8002426:	460d      	mov	r5, r1
 8002428:	f8d0 71e8 	ldr.w	r7, [r0, #488]	; 0x1e8
 800242c:	4606      	mov	r6, r0
 800242e:	2f13      	cmp	r7, #19
 8002430:	fb04 0407 	mla	r4, r4, r7, r0
 8002434:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002436:	bf08      	it	eq
 8002438:	2700      	moveq	r7, #0
 800243a:	f104 0404 	add.w	r4, r4, #4
 800243e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002440:	bf18      	it	ne
 8002442:	3701      	addne	r7, #1
 8002444:	45bc      	cmp	ip, r7
 8002446:	e895 0003 	ldmia.w	r5, {r0, r1}
 800244a:	e884 0003 	stmia.w	r4, {r0, r1}
 800244e:	f8c6 71e8 	str.w	r7, [r6, #488]	; 0x1e8
 8002452:	d107      	bne.n	8002464 <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087RxFrameELj20EE4pushERKS3_+0x4e>
 8002454:	f1bc 0f13 	cmp.w	ip, #19
 8002458:	bf0c      	ite	eq
 800245a:	2300      	moveq	r3, #0
 800245c:	f10c 0301 	addne.w	r3, ip, #1
 8002460:	f8c6 31e4 	str.w	r3, [r6, #484]	; 0x1e4
 8002464:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002466 <_ZNK6CRSLib17SafeCircularQueueINS_3Can6RM00087RxFrameELj20EE4sizeEv>:
 8002466:	f8d0 31e8 	ldr.w	r3, [r0, #488]	; 0x1e8
 800246a:	2b14      	cmp	r3, #20
 800246c:	d00c      	beq.n	8002488 <_ZNK6CRSLib17SafeCircularQueueINS_3Can6RM00087RxFrameELj20EE4sizeEv+0x22>
 800246e:	f8d0 01e4 	ldr.w	r0, [r0, #484]	; 0x1e4
 8002472:	3314      	adds	r3, #20
 8002474:	1a18      	subs	r0, r3, r0
 8002476:	2314      	movs	r3, #20
 8002478:	fbb0 f2f3 	udiv	r2, r0, r3
 800247c:	fb03 0012 	mls	r0, r3, r2, r0
 8002480:	2800      	cmp	r0, #0
 8002482:	bf08      	it	eq
 8002484:	4618      	moveq	r0, r3
 8002486:	4770      	bx	lr
 8002488:	2000      	movs	r0, #0
 800248a:	4770      	bx	lr

0800248c <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087RxFrameELj20EE5clearEv>:
 800248c:	2200      	movs	r2, #0
 800248e:	2314      	movs	r3, #20
 8002490:	e9c0 2379 	strd	r2, r3, [r0, #484]	; 0x1e4
 8002494:	4770      	bx	lr

08002496 <_ZNK6CRSLib17SafeCircularQueueINS_3Can6RM00087TxFrameELj10EE4sizeEv>:
 8002496:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8002498:	2b0a      	cmp	r3, #10
 800249a:	d00b      	beq.n	80024b4 <_ZNK6CRSLib17SafeCircularQueueINS_3Can6RM00087TxFrameELj10EE4sizeEv+0x1e>
 800249c:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800249e:	330a      	adds	r3, #10
 80024a0:	1a18      	subs	r0, r3, r0
 80024a2:	230a      	movs	r3, #10
 80024a4:	fbb0 f2f3 	udiv	r2, r0, r3
 80024a8:	fb03 0012 	mls	r0, r3, r2, r0
 80024ac:	2800      	cmp	r0, #0
 80024ae:	bf08      	it	eq
 80024b0:	4618      	moveq	r0, r3
 80024b2:	4770      	bx	lr
 80024b4:	2000      	movs	r0, #0
 80024b6:	4770      	bx	lr

080024b8 <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087TxFrameELj10EE5clearEv>:
 80024b8:	2200      	movs	r2, #0
 80024ba:	230a      	movs	r3, #10
 80024bc:	e9c0 231d 	strd	r2, r3, [r0, #116]	; 0x74
 80024c0:	4770      	bx	lr

080024c2 <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087RxFrameELj20EE3popEv>:
 80024c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024c4:	f8d1 e1e8 	ldr.w	lr, [r1, #488]	; 0x1e8
 80024c8:	4684      	mov	ip, r0
 80024ca:	f1be 0f14 	cmp.w	lr, #20
 80024ce:	460e      	mov	r6, r1
 80024d0:	b087      	sub	sp, #28
 80024d2:	d105      	bne.n	80024e0 <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087RxFrameELj20EE3popEv+0x1e>
 80024d4:	2300      	movs	r3, #0
 80024d6:	4660      	mov	r0, ip
 80024d8:	f88c 3018 	strb.w	r3, [ip, #24]
 80024dc:	b007      	add	sp, #28
 80024de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80024e0:	2418      	movs	r4, #24
 80024e2:	466d      	mov	r5, sp
 80024e4:	f8d1 71e4 	ldr.w	r7, [r1, #484]	; 0x1e4
 80024e8:	2f13      	cmp	r7, #19
 80024ea:	fb04 1407 	mla	r4, r4, r7, r1
 80024ee:	bf08      	it	eq
 80024f0:	2700      	moveq	r7, #0
 80024f2:	f104 0404 	add.w	r4, r4, #4
 80024f6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80024f8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80024fa:	e894 0003 	ldmia.w	r4, {r0, r1}
 80024fe:	bf18      	it	ne
 8002500:	3701      	addne	r7, #1
 8002502:	45be      	cmp	lr, r7
 8002504:	e885 0003 	stmia.w	r5, {r0, r1}
 8002508:	bf08      	it	eq
 800250a:	2314      	moveq	r3, #20
 800250c:	4664      	mov	r4, ip
 800250e:	466d      	mov	r5, sp
 8002510:	bf08      	it	eq
 8002512:	f8c6 31e8 	streq.w	r3, [r6, #488]	; 0x1e8
 8002516:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002518:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800251a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800251e:	2301      	movs	r3, #1
 8002520:	e884 0003 	stmia.w	r4, {r0, r1}
 8002524:	f8c6 71e4 	str.w	r7, [r6, #484]	; 0x1e4
 8002528:	e7d5      	b.n	80024d6 <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087RxFrameELj20EE3popEv+0x14>

0800252a <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087TxFrameELj10EE3popEv>:
 800252a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800252c:	6f8f      	ldr	r7, [r1, #120]	; 0x78
 800252e:	4603      	mov	r3, r0
 8002530:	2f0a      	cmp	r7, #10
 8002532:	460a      	mov	r2, r1
 8002534:	b085      	sub	sp, #20
 8002536:	d104      	bne.n	8002542 <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087TxFrameELj10EE3popEv+0x18>
 8002538:	2200      	movs	r2, #0
 800253a:	4618      	mov	r0, r3
 800253c:	72da      	strb	r2, [r3, #11]
 800253e:	b005      	add	sp, #20
 8002540:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002542:	260b      	movs	r6, #11
 8002544:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 8002546:	ad01      	add	r5, sp, #4
 8002548:	2c09      	cmp	r4, #9
 800254a:	fb06 1604 	mla	r6, r6, r4, r1
 800254e:	bf08      	it	eq
 8002550:	2400      	moveq	r4, #0
 8002552:	6870      	ldr	r0, [r6, #4]
 8002554:	68b1      	ldr	r1, [r6, #8]
 8002556:	bf18      	it	ne
 8002558:	3401      	addne	r4, #1
 800255a:	c503      	stmia	r5!, {r0, r1}
 800255c:	7bb1      	ldrb	r1, [r6, #14]
 800255e:	42a7      	cmp	r7, r4
 8002560:	70a9      	strb	r1, [r5, #2]
 8002562:	bf08      	it	eq
 8002564:	210a      	moveq	r1, #10
 8002566:	89b0      	ldrh	r0, [r6, #12]
 8002568:	bf08      	it	eq
 800256a:	6791      	streq	r1, [r2, #120]	; 0x78
 800256c:	8028      	strh	r0, [r5, #0]
 800256e:	6754      	str	r4, [r2, #116]	; 0x74
 8002570:	aa01      	add	r2, sp, #4
 8002572:	ca03      	ldmia	r2!, {r0, r1}
 8002574:	6059      	str	r1, [r3, #4]
 8002576:	8811      	ldrh	r1, [r2, #0]
 8002578:	7892      	ldrb	r2, [r2, #2]
 800257a:	6018      	str	r0, [r3, #0]
 800257c:	729a      	strb	r2, [r3, #10]
 800257e:	8119      	strh	r1, [r3, #8]
 8002580:	2201      	movs	r2, #1
 8002582:	e7da      	b.n	800253a <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087TxFrameELj10EE3popEv+0x10>

08002584 <_ZN6CRSLib3Can9Implement6TxUnitIN13Chibarobo20228SampleTxEE8transmitERNS0_6RM00089PillarboxE>:
 8002584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002588:	6885      	ldr	r5, [r0, #8]
 800258a:	460e      	mov	r6, r1
 800258c:	ea5f 28d5 	movs.w	r8, r5, lsr #11
 8002590:	bf14      	ite	ne
 8002592:	2704      	movne	r7, #4
 8002594:	2700      	moveq	r7, #0
 8002596:	b08a      	sub	sp, #40	; 0x28
 8002598:	f100 040c 	add.w	r4, r0, #12
 800259c:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80025a0:	6830      	ldr	r0, [r6, #0]
 80025a2:	f001 fdd2 	bl	800414a <HAL_CAN_GetTxMailboxesFreeLevel>
 80025a6:	b308      	cbz	r0, 80025ec <_ZN6CRSLib3Can9Implement6TxUnitIN13Chibarobo20228SampleTxEE8transmitERNS0_6RM00089PillarboxE+0x68>
 80025a8:	4621      	mov	r1, r4
 80025aa:	a801      	add	r0, sp, #4
 80025ac:	f7ff ffbd 	bl	800252a <_ZN6CRSLib17SafeCircularQueueINS_3Can6RM00087TxFrameELj10EE3popEv>
 80025b0:	f89d 300f 	ldrb.w	r3, [sp, #15]
 80025b4:	b1d3      	cbz	r3, 80025ec <_ZN6CRSLib3Can9Implement6TxUnitIN13Chibarobo20228SampleTxEE8transmitERNS0_6RM00089PillarboxE+0x68>
 80025b6:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80025ba:	6830      	ldr	r0, [r6, #0]
 80025bc:	2b00      	cmp	r3, #0
 80025be:	bf14      	ite	ne
 80025c0:	2302      	movne	r3, #2
 80025c2:	2300      	moveq	r3, #0
 80025c4:	9307      	str	r3, [sp, #28]
 80025c6:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80025ca:	f10d 0207 	add.w	r2, sp, #7
 80025ce:	9308      	str	r3, [sp, #32]
 80025d0:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80025d4:	a904      	add	r1, sp, #16
 80025d6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80025da:	2300      	movs	r3, #0
 80025dc:	9300      	str	r3, [sp, #0]
 80025de:	466b      	mov	r3, sp
 80025e0:	e9cd 5804 	strd	r5, r8, [sp, #16]
 80025e4:	9706      	str	r7, [sp, #24]
 80025e6:	f001 fd62 	bl	80040ae <HAL_CAN_AddTxMessage>
 80025ea:	e7d9      	b.n	80025a0 <_ZN6CRSLib3Can9Implement6TxUnitIN13Chibarobo20228SampleTxEE8transmitERNS0_6RM00089PillarboxE+0x1c>
 80025ec:	b00a      	add	sp, #40	; 0x28
 80025ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080025f2 <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_>:
 80025f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80025f4:	460e      	mov	r6, r1
 80025f6:	a902      	add	r1, sp, #8
 80025f8:	42b0      	cmp	r0, r6
 80025fa:	4604      	mov	r4, r0
 80025fc:	e901 000c 	stmdb	r1, {r2, r3}
 8002600:	d01d      	beq.n	800263e <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_+0x4c>
 8002602:	1d05      	adds	r5, r0, #4
 8002604:	42b5      	cmp	r5, r6
 8002606:	d01a      	beq.n	800263e <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_+0x4c>
 8002608:	682f      	ldr	r7, [r5, #0]
 800260a:	6823      	ldr	r3, [r4, #0]
 800260c:	68b9      	ldr	r1, [r7, #8]
 800260e:	689b      	ldr	r3, [r3, #8]
 8002610:	4299      	cmp	r1, r3
 8002612:	d209      	bcs.n	8002628 <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_+0x36>
 8002614:	42a5      	cmp	r5, r4
 8002616:	d004      	beq.n	8002622 <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_+0x30>
 8002618:	4621      	mov	r1, r4
 800261a:	1b2a      	subs	r2, r5, r4
 800261c:	1d20      	adds	r0, r4, #4
 800261e:	f003 fe51 	bl	80062c4 <memmove>
 8002622:	6027      	str	r7, [r4, #0]
 8002624:	3504      	adds	r5, #4
 8002626:	e7ed      	b.n	8002604 <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_+0x12>
 8002628:	462b      	mov	r3, r5
 800262a:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800262e:	6890      	ldr	r0, [r2, #8]
 8002630:	4281      	cmp	r1, r0
 8002632:	d202      	bcs.n	800263a <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_+0x48>
 8002634:	f843 2904 	str.w	r2, [r3], #-4
 8002638:	e7f7      	b.n	800262a <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_+0x38>
 800263a:	601f      	str	r7, [r3, #0]
 800263c:	e7f2      	b.n	8002624 <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_+0x32>
 800263e:	b003      	add	sp, #12
 8002640:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002642 <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_>:
 8002642:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002644:	1e54      	subs	r4, r2, #1
 8002646:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 800264a:	1066      	asrs	r6, r4, #1
 800264c:	f06f 4c40 	mvn.w	ip, #3221225472	; 0xc0000000
 8002650:	460c      	mov	r4, r1
 8002652:	42a6      	cmp	r6, r4
 8002654:	dd14      	ble.n	8002680 <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_+0x3e>
 8002656:	1c65      	adds	r5, r4, #1
 8002658:	006f      	lsls	r7, r5, #1
 800265a:	eb0c 0545 	add.w	r5, ip, r5, lsl #1
 800265e:	f850 5025 	ldr.w	r5, [r0, r5, lsl #2]
 8002662:	f8d5 e008 	ldr.w	lr, [r5, #8]
 8002666:	f850 5027 	ldr.w	r5, [r0, r7, lsl #2]
 800266a:	68ad      	ldr	r5, [r5, #8]
 800266c:	45ae      	cmp	lr, r5
 800266e:	bf88      	it	hi
 8002670:	f107 37ff 	addhi.w	r7, r7, #4294967295
 8002674:	f850 5027 	ldr.w	r5, [r0, r7, lsl #2]
 8002678:	f840 5024 	str.w	r5, [r0, r4, lsl #2]
 800267c:	463c      	mov	r4, r7
 800267e:	e7e8      	b.n	8002652 <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_+0x10>
 8002680:	07d5      	lsls	r5, r2, #31
 8002682:	d40e      	bmi.n	80026a2 <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_+0x60>
 8002684:	3a02      	subs	r2, #2
 8002686:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 800268a:	ebb4 0f62 	cmp.w	r4, r2, asr #1
 800268e:	d108      	bne.n	80026a2 <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_+0x60>
 8002690:	1c62      	adds	r2, r4, #1
 8002692:	0055      	lsls	r5, r2, #1
 8002694:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8002698:	f852 2c04 	ldr.w	r2, [r2, #-4]
 800269c:	f840 2024 	str.w	r2, [r0, r4, lsl #2]
 80026a0:	1e6c      	subs	r4, r5, #1
 80026a2:	1e62      	subs	r2, r4, #1
 80026a4:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80026a8:	1052      	asrs	r2, r2, #1
 80026aa:	42a1      	cmp	r1, r4
 80026ac:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 80026b0:	eb00 0584 	add.w	r5, r0, r4, lsl #2
 80026b4:	da0d      	bge.n	80026d2 <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_+0x90>
 80026b6:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
 80026ba:	689e      	ldr	r6, [r3, #8]
 80026bc:	68a7      	ldr	r7, [r4, #8]
 80026be:	42b7      	cmp	r7, r6
 80026c0:	d207      	bcs.n	80026d2 <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_+0x90>
 80026c2:	f840 400c 	str.w	r4, [r0, ip]
 80026c6:	1e54      	subs	r4, r2, #1
 80026c8:	eb04 75d4 	add.w	r5, r4, r4, lsr #31
 80026cc:	4614      	mov	r4, r2
 80026ce:	106a      	asrs	r2, r5, #1
 80026d0:	e7eb      	b.n	80026aa <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_+0x68>
 80026d2:	602b      	str	r3, [r5, #0]
 80026d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080026d6 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_>:
 80026d6:	b082      	sub	sp, #8
 80026d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80026dc:	4604      	mov	r4, r0
 80026de:	460d      	mov	r5, r1
 80026e0:	4616      	mov	r6, r2
 80026e2:	b087      	sub	sp, #28
 80026e4:	930f      	str	r3, [sp, #60]	; 0x3c
 80026e6:	1d07      	adds	r7, r0, #4
 80026e8:	1b2b      	subs	r3, r5, r4
 80026ea:	2b40      	cmp	r3, #64	; 0x40
 80026ec:	dd2c      	ble.n	8002748 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0x72>
 80026ee:	ea4f 08a3 	mov.w	r8, r3, asr #2
 80026f2:	bb76      	cbnz	r6, 8002752 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0x7c>
 80026f4:	e9dd 010f 	ldrd	r0, r1, [sp, #60]	; 0x3c
 80026f8:	af02      	add	r7, sp, #8
 80026fa:	f10d 0910 	add.w	r9, sp, #16
 80026fe:	e887 0003 	stmia.w	r7, {r0, r1}
 8002702:	e889 0003 	stmia.w	r9, {r0, r1}
 8002706:	f1a8 0602 	sub.w	r6, r8, #2
 800270a:	1076      	asrs	r6, r6, #1
 800270c:	e899 0003 	ldmia.w	r9, {r0, r1}
 8002710:	4642      	mov	r2, r8
 8002712:	e88d 0003 	stmia.w	sp, {r0, r1}
 8002716:	f854 3026 	ldr.w	r3, [r4, r6, lsl #2]
 800271a:	4631      	mov	r1, r6
 800271c:	4620      	mov	r0, r4
 800271e:	f7ff ff90 	bl	8002642 <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_>
 8002722:	b10e      	cbz	r6, 8002728 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0x52>
 8002724:	3e01      	subs	r6, #1
 8002726:	e7f1      	b.n	800270c <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0x36>
 8002728:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800272c:	6822      	ldr	r2, [r4, #0]
 800272e:	1b2e      	subs	r6, r5, r4
 8002730:	e897 0003 	ldmia.w	r7, {r0, r1}
 8002734:	602a      	str	r2, [r5, #0]
 8002736:	e88d 0003 	stmia.w	sp, {r0, r1}
 800273a:	10b2      	asrs	r2, r6, #2
 800273c:	2100      	movs	r1, #0
 800273e:	4620      	mov	r0, r4
 8002740:	f7ff ff7f 	bl	8002642 <_ZSt13__adjust_heapIPPN6CRSLib3Can9Implement10TxUnitBaseEiS4_N9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SM_SM_T1_T2_>
 8002744:	2e04      	cmp	r6, #4
 8002746:	dcef      	bgt.n	8002728 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0x52>
 8002748:	b007      	add	sp, #28
 800274a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800274e:	b002      	add	sp, #8
 8002750:	4770      	bx	lr
 8002752:	10db      	asrs	r3, r3, #3
 8002754:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8002758:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800275c:	f8d8 9008 	ldr.w	r9, [r8, #8]
 8002760:	f8d0 e008 	ldr.w	lr, [r0, #8]
 8002764:	f855 cc04 	ldr.w	ip, [r5, #-4]
 8002768:	45f1      	cmp	r9, lr
 800276a:	f8dc 1008 	ldr.w	r1, [ip, #8]
 800276e:	6822      	ldr	r2, [r4, #0]
 8002770:	f106 36ff 	add.w	r6, r6, #4294967295
 8002774:	d22a      	bcs.n	80027cc <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xf6>
 8002776:	458e      	cmp	lr, r1
 8002778:	d221      	bcs.n	80027be <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xe8>
 800277a:	6020      	str	r0, [r4, #0]
 800277c:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8002780:	463a      	mov	r2, r7
 8002782:	462b      	mov	r3, r5
 8002784:	6820      	ldr	r0, [r4, #0]
 8002786:	4690      	mov	r8, r2
 8002788:	f852 1b04 	ldr.w	r1, [r2], #4
 800278c:	f8d0 9008 	ldr.w	r9, [r0, #8]
 8002790:	6888      	ldr	r0, [r1, #8]
 8002792:	4548      	cmp	r0, r9
 8002794:	d3f6      	bcc.n	8002784 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xae>
 8002796:	1f18      	subs	r0, r3, #4
 8002798:	4603      	mov	r3, r0
 800279a:	f850 e904 	ldr.w	lr, [r0], #-4
 800279e:	f8de c008 	ldr.w	ip, [lr, #8]
 80027a2:	45e1      	cmp	r9, ip
 80027a4:	d3f8      	bcc.n	8002798 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xc2>
 80027a6:	4598      	cmp	r8, r3
 80027a8:	d318      	bcc.n	80027dc <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0x106>
 80027aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80027ac:	4629      	mov	r1, r5
 80027ae:	9300      	str	r3, [sp, #0]
 80027b0:	4632      	mov	r2, r6
 80027b2:	4640      	mov	r0, r8
 80027b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80027b6:	f7ff ff8e 	bl	80026d6 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_>
 80027ba:	4645      	mov	r5, r8
 80027bc:	e794      	b.n	80026e8 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0x12>
 80027be:	4589      	cmp	r9, r1
 80027c0:	d206      	bcs.n	80027d0 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xfa>
 80027c2:	f8c4 c000 	str.w	ip, [r4]
 80027c6:	f845 2c04 	str.w	r2, [r5, #-4]
 80027ca:	e7d9      	b.n	8002780 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xaa>
 80027cc:	4589      	cmp	r9, r1
 80027ce:	d202      	bcs.n	80027d6 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0x100>
 80027d0:	e9c4 8200 	strd	r8, r2, [r4]
 80027d4:	e7d4      	b.n	8002780 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xaa>
 80027d6:	458e      	cmp	lr, r1
 80027d8:	d2cf      	bcs.n	800277a <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xa4>
 80027da:	e7f2      	b.n	80027c2 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xec>
 80027dc:	f842 ec04 	str.w	lr, [r2, #-4]
 80027e0:	6019      	str	r1, [r3, #0]
 80027e2:	e7cf      	b.n	8002784 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_+0xae>

080027e4 <_ZN6CRSLib3Can11TransmitterIJN13Chibarobo20228SampleTxEEEC1IJmEEEDpKT_>:
 80027e4:	2301      	movs	r3, #1
 80027e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80027ea:	4604      	mov	r4, r0
 80027ec:	e9c0 3101 	strd	r3, r1, [r0, #4]
 80027f0:	4b2e      	ldr	r3, [pc, #184]	; (80028ac <_ZN6CRSLib3Can11TransmitterIJN13Chibarobo20228SampleTxEEEC1IJmEEEDpKT_+0xc8>)
 80027f2:	b089      	sub	sp, #36	; 0x24
 80027f4:	227c      	movs	r2, #124	; 0x7c
 80027f6:	2100      	movs	r1, #0
 80027f8:	f840 3b0c 	str.w	r3, [r0], #12
 80027fc:	f003 fd7c 	bl	80062f8 <memset>
 8002800:	4b2b      	ldr	r3, [pc, #172]	; (80028b0 <_ZN6CRSLib3Can11TransmitterIJN13Chibarobo20228SampleTxEEEC1IJmEEEDpKT_+0xcc>)
 8002802:	226e      	movs	r2, #110	; 0x6e
 8002804:	2100      	movs	r1, #0
 8002806:	60e3      	str	r3, [r4, #12]
 8002808:	f104 0010 	add.w	r0, r4, #16
 800280c:	f003 fd74 	bl	80062f8 <memset>
 8002810:	230a      	movs	r3, #10
 8002812:	f104 0688 	add.w	r6, r4, #136	; 0x88
 8002816:	f104 078c 	add.w	r7, r4, #140	; 0x8c
 800281a:	eba7 0806 	sub.w	r8, r7, r6
 800281e:	ea4f 02a8 	mov.w	r2, r8, asr #2
 8002822:	fab2 f282 	clz	r2, r2
 8002826:	e9c4 3421 	strd	r3, r4, [r4, #132]	; 0x84
 800282a:	2300      	movs	r3, #0
 800282c:	ad03      	add	r5, sp, #12
 800282e:	f10d 0908 	add.w	r9, sp, #8
 8002832:	f1c2 021f 	rsb	r2, r2, #31
 8002836:	f884 308c 	strb.w	r3, [r4, #140]	; 0x8c
 800283a:	f88d 300c 	strb.w	r3, [sp, #12]
 800283e:	f88d 3008 	strb.w	r3, [sp, #8]
 8002842:	4639      	mov	r1, r7
 8002844:	462b      	mov	r3, r5
 8002846:	4630      	mov	r0, r6
 8002848:	f8cd 9000 	str.w	r9, [sp]
 800284c:	0052      	lsls	r2, r2, #1
 800284e:	9504      	str	r5, [sp, #16]
 8002850:	f8cd 9014 	str.w	r9, [sp, #20]
 8002854:	f7ff ff3f 	bl	80026d6 <_ZSt16__introsort_loopIPPN6CRSLib3Can9Implement10TxUnitBaseEiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_T1_>
 8002858:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
 800285c:	e9cd 5906 	strd	r5, r9, [sp, #24]
 8002860:	ab06      	add	r3, sp, #24
 8002862:	dd16      	ble.n	8002892 <_ZN6CRSLib3Can11TransmitterIJN13Chibarobo20228SampleTxEEEC1IJmEEEDpKT_+0xae>
 8002864:	cb0c      	ldmia	r3, {r2, r3}
 8002866:	f104 05c8 	add.w	r5, r4, #200	; 0xc8
 800286a:	4629      	mov	r1, r5
 800286c:	4630      	mov	r0, r6
 800286e:	f7ff fec0 	bl	80025f2 <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_>
 8002872:	42bd      	cmp	r5, r7
 8002874:	d012      	beq.n	800289c <_ZN6CRSLib3Can11TransmitterIJN13Chibarobo20228SampleTxEEEC1IJmEEEDpKT_+0xb8>
 8002876:	462b      	mov	r3, r5
 8002878:	682a      	ldr	r2, [r5, #0]
 800287a:	6890      	ldr	r0, [r2, #8]
 800287c:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8002880:	688e      	ldr	r6, [r1, #8]
 8002882:	42b0      	cmp	r0, r6
 8002884:	d202      	bcs.n	800288c <_ZN6CRSLib3Can11TransmitterIJN13Chibarobo20228SampleTxEEEC1IJmEEEDpKT_+0xa8>
 8002886:	f843 1904 	str.w	r1, [r3], #-4
 800288a:	e7f7      	b.n	800287c <_ZN6CRSLib3Can11TransmitterIJN13Chibarobo20228SampleTxEEEC1IJmEEEDpKT_+0x98>
 800288c:	601a      	str	r2, [r3, #0]
 800288e:	3504      	adds	r5, #4
 8002890:	e7ef      	b.n	8002872 <_ZN6CRSLib3Can11TransmitterIJN13Chibarobo20228SampleTxEEEC1IJmEEEDpKT_+0x8e>
 8002892:	4639      	mov	r1, r7
 8002894:	cb0c      	ldmia	r3, {r2, r3}
 8002896:	4630      	mov	r0, r6
 8002898:	f7ff feab 	bl	80025f2 <_ZSt16__insertion_sortIPPN6CRSLib3Can9Implement10TxUnitBaseEN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS9_4lessEZNS1_11TransmitterIJN13Chibarobo20228SampleTxEEE12sort_tx_unitEvEUlPKS3_E_EEDaRT_RT0_EUlOSK_OSM_E_EEEvSK_SK_SM_>
 800289c:	2301      	movs	r3, #1
 800289e:	4620      	mov	r0, r4
 80028a0:	f884 308c 	strb.w	r3, [r4, #140]	; 0x8c
 80028a4:	b009      	add	sp, #36	; 0x24
 80028a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80028aa:	bf00      	nop
 80028ac:	080067b0 	.word	0x080067b0
 80028b0:	08006798 	.word	0x08006798

080028b4 <_GLOBAL__sub_I__ZN13Chibarobo20228executorE>:
 80028b4:	4a15      	ldr	r2, [pc, #84]	; (800290c <_GLOBAL__sub_I__ZN13Chibarobo20228executorE+0x58>)
 80028b6:	b510      	push	{r4, lr}
 80028b8:	6813      	ldr	r3, [r2, #0]
 80028ba:	3301      	adds	r3, #1
 80028bc:	2b01      	cmp	r3, #1
 80028be:	6013      	str	r3, [r2, #0]
 80028c0:	d104      	bne.n	80028cc <_GLOBAL__sub_I__ZN13Chibarobo20228executorE+0x18>
 80028c2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80028c6:	4812      	ldr	r0, [pc, #72]	; (8002910 <_GLOBAL__sub_I__ZN13Chibarobo20228executorE+0x5c>)
 80028c8:	f7ff ff8c 	bl	80027e4 <_ZN6CRSLib3Can11TransmitterIJN13Chibarobo20228SampleTxEEEC1IJmEEEDpKT_>
 80028cc:	4a11      	ldr	r2, [pc, #68]	; (8002914 <_GLOBAL__sub_I__ZN13Chibarobo20228executorE+0x60>)
 80028ce:	6813      	ldr	r3, [r2, #0]
 80028d0:	3301      	adds	r3, #1
 80028d2:	2b01      	cmp	r3, #1
 80028d4:	6013      	str	r3, [r2, #0]
 80028d6:	d117      	bne.n	8002908 <_GLOBAL__sub_I__ZN13Chibarobo20228executorE+0x54>
 80028d8:	4c0f      	ldr	r4, [pc, #60]	; (8002918 <_GLOBAL__sub_I__ZN13Chibarobo20228executorE+0x64>)
 80028da:	f44f 72f6 	mov.w	r2, #492	; 0x1ec
 80028de:	6023      	str	r3, [r4, #0]
 80028e0:	f240 1301 	movw	r3, #257	; 0x101
 80028e4:	2100      	movs	r1, #0
 80028e6:	f104 0008 	add.w	r0, r4, #8
 80028ea:	6063      	str	r3, [r4, #4]
 80028ec:	f003 fd04 	bl	80062f8 <memset>
 80028f0:	4b0a      	ldr	r3, [pc, #40]	; (800291c <_GLOBAL__sub_I__ZN13Chibarobo20228executorE+0x68>)
 80028f2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80028f6:	2100      	movs	r1, #0
 80028f8:	f104 000c 	add.w	r0, r4, #12
 80028fc:	60a3      	str	r3, [r4, #8]
 80028fe:	f003 fcfb 	bl	80062f8 <memset>
 8002902:	2314      	movs	r3, #20
 8002904:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8002908:	bd10      	pop	{r4, pc}
 800290a:	bf00      	nop
 800290c:	20000098 	.word	0x20000098
 8002910:	20000290 	.word	0x20000290
 8002914:	20000094 	.word	0x20000094
 8002918:	2000009c 	.word	0x2000009c
 800291c:	080067bc 	.word	0x080067bc

08002920 <_ZN11stepping_md18CanController_Base6updateEv>:
			static inline void trigger_update(void){
				for(CanController_Base instance : instances){
					instance.update();
				}
			}
			virtual void update(void){throw std::logic_error("update is not implemented");}
 8002920:	b510      	push	{r4, lr}
 8002922:	2008      	movs	r0, #8
 8002924:	f002 fc44 	bl	80051b0 <__cxa_allocate_exception>
 8002928:	4906      	ldr	r1, [pc, #24]	; (8002944 <_ZN11stepping_md18CanController_Base6updateEv+0x24>)
 800292a:	4604      	mov	r4, r0
 800292c:	f003 fb72 	bl	8006014 <_ZNSt11logic_errorC1EPKc>
 8002930:	4620      	mov	r0, r4
 8002932:	4a05      	ldr	r2, [pc, #20]	; (8002948 <_ZN11stepping_md18CanController_Base6updateEv+0x28>)
 8002934:	4905      	ldr	r1, [pc, #20]	; (800294c <_ZN11stepping_md18CanController_Base6updateEv+0x2c>)
 8002936:	f003 f81f 	bl	8005978 <__cxa_throw>
 800293a:	4620      	mov	r0, r4
 800293c:	f002 fc4e 	bl	80051dc <__cxa_free_exception>
 8002940:	f002 fc70 	bl	8005224 <__cxa_end_cleanup>
 8002944:	080067cc 	.word	0x080067cc
 8002948:	08005f85 	.word	0x08005f85
 800294c:	08006bc4 	.word	0x08006bc4

08002950 <_ZNSt14_Function_baseD1Ev>:

    _Function_base() : _M_manager(nullptr) { }

    ~_Function_base()
    {
      if (_M_manager)
 8002950:	6883      	ldr	r3, [r0, #8]
    ~_Function_base()
 8002952:	b510      	push	{r4, lr}
 8002954:	4604      	mov	r4, r0
      if (_M_manager)
 8002956:	b113      	cbz	r3, 800295e <_ZNSt14_Function_baseD1Ev+0xe>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8002958:	2203      	movs	r2, #3
 800295a:	4601      	mov	r1, r0
 800295c:	4798      	blx	r3
    }
 800295e:	4620      	mov	r0, r4
 8002960:	bd10      	pop	{r4, pc}

08002962 <_ZN6CRSLib3Can6RM00089Letterbox7receiveERNS1_7RxFrameE>:
		Letterbox(CAN_HandleTypeDef *const hcan, const FifoIndex fifo_index) noexcept:
			hcan{hcan},
			fifo_index{fifo_index}
		{}

		void receive(RxFrame& frame) noexcept
 8002962:	b530      	push	{r4, r5, lr}
 8002964:	460c      	mov	r4, r1
 8002966:	4605      	mov	r5, r0
 8002968:	b089      	sub	sp, #36	; 0x24
		{
			CAN_RxHeaderTypeDef rx_header{};
 800296a:	221c      	movs	r2, #28
 800296c:	2100      	movs	r1, #0
 800296e:	a801      	add	r0, sp, #4
 8002970:	f003 fcc2 	bl	80062f8 <memset>

			HAL_CAN_GetRxMessage(hcan, to_underlying(fifo_index), &rx_header, frame.data.data());
 8002974:	e9d5 0100 	ldrd	r0, r1, [r5]
 8002978:	f104 0310 	add.w	r3, r4, #16
 800297c:	aa01      	add	r2, sp, #4
 800297e:	f001 fbf8 	bl	8004172 <HAL_CAN_GetRxMessage>
			{
				.id = (rx_header.ExtId << (u32)11) | rx_header.StdId,
				.time_stamp = rx_header.Timestamp,
				.filter_match_index = rx_header.FilterMatchIndex,
				.dlc = static_cast<u8>(rx_header.DLC),
				.rtr = rx_header.RTR == CAN_RTR_REMOTE
 8002982:	9b04      	ldr	r3, [sp, #16]
			frame.header =
 8002984:	f89d 1014 	ldrb.w	r1, [sp, #20]
				.rtr = rx_header.RTR == CAN_RTR_REMOTE
 8002988:	1e9a      	subs	r2, r3, #2
 800298a:	4253      	negs	r3, r2
 800298c:	4153      	adcs	r3, r2
				.id = (rx_header.ExtId << (u32)11) | rx_header.StdId,
 800298e:	e9dd 2001 	ldrd	r2, r0, [sp, #4]
 8002992:	ea42 22c0 	orr.w	r2, r2, r0, lsl #11
			frame.header =
 8002996:	6022      	str	r2, [r4, #0]
 8002998:	9a06      	ldr	r2, [sp, #24]
 800299a:	7321      	strb	r1, [r4, #12]
 800299c:	6062      	str	r2, [r4, #4]
 800299e:	9a07      	ldr	r2, [sp, #28]
 80029a0:	7363      	strb	r3, [r4, #13]
 80029a2:	60a2      	str	r2, [r4, #8]
			};
		}
 80029a4:	b009      	add	sp, #36	; 0x24
 80029a6:	bd30      	pop	{r4, r5, pc}

080029a8 <_ZNK6CRSLib3Can6RM00089Letterbox5emptyEv>:

		bool empty() const noexcept
 80029a8:	b508      	push	{r3, lr}
		{
			return HAL_CAN_GetRxFifoFillLevel(hcan, to_underlying(fifo_index)) == 0;
 80029aa:	c803      	ldmia	r0, {r0, r1}
 80029ac:	f001 fc58 	bl	8004260 <HAL_CAN_GetRxFifoFillLevel>
		}
 80029b0:	fab0 f080 	clz	r0, r0
 80029b4:	0940      	lsrs	r0, r0, #5
 80029b6:	bd08      	pop	{r3, pc}

080029b8 <_ZN11stepping_md18CanController_BaseC1Ev>:
			explicit CanController_Base(){instances.push_back(*this);}
 80029b8:	b538      	push	{r3, r4, r5, lr}
 80029ba:	4d08      	ldr	r5, [pc, #32]	; (80029dc <_ZN11stepping_md18CanController_BaseC1Ev+0x24>)
 80029bc:	4604      	mov	r4, r0
 80029be:	6005      	str	r5, [r0, #0]
	  {
	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
	  }
#endif
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80029c0:	200c      	movs	r0, #12
 80029c2:	f002 fff3 	bl	80059ac <_Znwj>
	class CanController_Base{
 80029c6:	6085      	str	r5, [r0, #8]
     template<typename... _Args>
       void
       _M_insert(iterator __position, _Args&&... __args)
       {
	 _Node* __tmp = _M_create_node(std::forward<_Args>(__args)...);
	 __tmp->_M_hook(__position._M_node);
 80029c8:	4d05      	ldr	r5, [pc, #20]	; (80029e0 <_ZN11stepping_md18CanController_BaseC1Ev+0x28>)
 80029ca:	4629      	mov	r1, r5
 80029cc:	f003 fad0 	bl	8005f70 <_ZNSt8__detail15_List_node_base7_M_hookEPS0_>
      void _M_inc_size(size_t __n) { _M_impl._M_node._M_size += __n; }
 80029d0:	68ab      	ldr	r3, [r5, #8]
			explicit CanController_Base(){instances.push_back(*this);}
 80029d2:	4620      	mov	r0, r4
 80029d4:	3301      	adds	r3, #1
 80029d6:	60ab      	str	r3, [r5, #8]
 80029d8:	bd38      	pop	{r3, r4, r5, pc}
 80029da:	bf00      	nop
 80029dc:	08006834 	.word	0x08006834
 80029e0:	20000350 	.word	0x20000350

080029e4 <_ZN11stepping_md13CanControllerImEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>:
	//以下定義
	template<typename T>
	std::vector<CRSLib::Can::RM0008::RxFrame> CanController<T>::rx_frames;

	template<typename T>
	CanController<T>::CanController(RM0008::CanManager& can_manager, Parameters& params, uint32_t offset_from_bid): can_manager(can_manager), params(params), offset_from_bid(offset_from_bid){}
 80029e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80029e6:	4604      	mov	r4, r0
 80029e8:	460f      	mov	r7, r1
 80029ea:	461d      	mov	r5, r3
 80029ec:	4616      	mov	r6, r2
 80029ee:	f7ff ffe3 	bl	80029b8 <_ZN11stepping_md18CanController_BaseC1Ev>
 80029f2:	4b04      	ldr	r3, [pc, #16]	; (8002a04 <_ZN11stepping_md13CanControllerImEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm+0x20>)
 80029f4:	4620      	mov	r0, r4
 80029f6:	e9c4 3700 	strd	r3, r7, [r4]
    _Function_base() : _M_manager(nullptr) { }
 80029fa:	2300      	movs	r3, #0
 80029fc:	e9c4 6506 	strd	r6, r5, [r4, #24]
 8002a00:	6123      	str	r3, [r4, #16]
 8002a02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a04:	08006840 	.word	0x08006840

08002a08 <_ZN11stepping_md13CanControllerIfEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>:
 8002a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a0a:	4604      	mov	r4, r0
 8002a0c:	460f      	mov	r7, r1
 8002a0e:	461d      	mov	r5, r3
 8002a10:	4616      	mov	r6, r2
 8002a12:	f7ff ffd1 	bl	80029b8 <_ZN11stepping_md18CanController_BaseC1Ev>
 8002a16:	4b04      	ldr	r3, [pc, #16]	; (8002a28 <_ZN11stepping_md13CanControllerIfEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm+0x20>)
 8002a18:	4620      	mov	r0, r4
 8002a1a:	e9c4 3700 	strd	r3, r7, [r4]
 8002a1e:	2300      	movs	r3, #0
 8002a20:	e9c4 6506 	strd	r6, r5, [r4, #24]
 8002a24:	6123      	str	r3, [r4, #16]
 8002a26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a28:	0800684c 	.word	0x0800684c

08002a2c <_ZN11stepping_md13CanControllerIhEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>:
 8002a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a2e:	4604      	mov	r4, r0
 8002a30:	460f      	mov	r7, r1
 8002a32:	461d      	mov	r5, r3
 8002a34:	4616      	mov	r6, r2
 8002a36:	f7ff ffbf 	bl	80029b8 <_ZN11stepping_md18CanController_BaseC1Ev>
 8002a3a:	4b04      	ldr	r3, [pc, #16]	; (8002a4c <_ZN11stepping_md13CanControllerIhEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm+0x20>)
 8002a3c:	4620      	mov	r0, r4
 8002a3e:	e9c4 3700 	strd	r3, r7, [r4]
 8002a42:	2300      	movs	r3, #0
 8002a44:	e9c4 6506 	strd	r6, r5, [r4, #24]
 8002a48:	6123      	str	r3, [r4, #16]
 8002a4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a4c:	08006858 	.word	0x08006858

08002a50 <_ZNSt12_Vector_baseIN6CRSLib3Can6RM00087RxFrameESaIS3_EED1Ev>:
      _Vector_base(const allocator_type& __a, _Vector_base&& __x)
      : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
      { }
#endif

      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8002a50:	b510      	push	{r4, lr}
 8002a52:	4604      	mov	r4, r0
      {
	_M_deallocate(_M_impl._M_start,
 8002a54:	6800      	ldr	r0, [r0, #0]

      void
      _M_deallocate(pointer __p, size_t __n)
      {
	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
	if (__p)
 8002a56:	b118      	cbz	r0, 8002a60 <_ZNSt12_Vector_baseIN6CRSLib3Can6RM00087RxFrameESaIS3_EED1Ev+0x10>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8002a58:	68a1      	ldr	r1, [r4, #8]
# endif
			      std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	::operator delete(__p
 8002a5a:	1a09      	subs	r1, r1, r0
 8002a5c:	f002 fb4c 	bl	80050f8 <_ZdlPvj>
      }
 8002a60:	4620      	mov	r0, r4
 8002a62:	bd10      	pop	{r4, pc}

08002a64 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE>:
      _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
      : _M_current(_Iterator()) { }

      explicit _GLIBCXX20_CONSTEXPR
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
      : _M_current(__i) { }
 8002a64:	6842      	ldr	r2, [r0, #4]
       *  the pointed-to memory is not touched in any way.  Managing
       *  the pointer is the user's responsibility.
       */
      iterator
#if __cplusplus >= 201103L
      erase(const_iterator __position)
 8002a66:	460b      	mov	r3, r1
      { _M_current += __n; return *this; }

      _GLIBCXX20_CONSTEXPR
      __normal_iterator
      operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
      { return __normal_iterator(_M_current + __n); }
 8002a68:	3118      	adds	r1, #24
  template<typename _Tp, typename _Alloc>
    typename vector<_Tp, _Alloc>::iterator
    vector<_Tp, _Alloc>::
    _M_erase(iterator __position)
    {
      if (__position + 1 != end())
 8002a6a:	4291      	cmp	r1, r2
 8002a6c:	b510      	push	{r4, lr}
 8002a6e:	4604      	mov	r4, r0
 8002a70:	d004      	beq.n	8002a7c <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE+0x18>
	  // trivial types can have deleted assignment
	  static_assert( __assignable::type::value, "type is not assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
	  if (_Num)
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8002a72:	4618      	mov	r0, r3
 8002a74:	1a52      	subs	r2, r2, r1
 8002a76:	f003 fc25 	bl	80062c4 <memmove>
 8002a7a:	4603      	mov	r3, r0
	_GLIBCXX_MOVE3(__position + 1, end(), __position);
      --this->_M_impl._M_finish;
 8002a7c:	6862      	ldr	r2, [r4, #4]
      { return _M_erase(begin() + (__position - cbegin())); }
 8002a7e:	4618      	mov	r0, r3
 8002a80:	3a18      	subs	r2, #24
 8002a82:	6062      	str	r2, [r4, #4]
 8002a84:	bd10      	pop	{r4, pc}
	...

08002a88 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
 8002a88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8002a8c:	6843      	ldr	r3, [r0, #4]
 8002a8e:	f8d0 8000 	ldr.w	r8, [r0]
 8002a92:	4c41      	ldr	r4, [pc, #260]	; (8002b98 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x110>)
 8002a94:	9301      	str	r3, [sp, #4]
 8002a96:	eba3 0308 	sub.w	r3, r3, r8
 8002a9a:	10db      	asrs	r3, r3, #3
 8002a9c:	4363      	muls	r3, r4
 8002a9e:	4692      	mov	sl, r2

      // Called by _M_fill_insert, _M_insert_aux etc.
      size_type
      _M_check_len(size_type __n, const char* __s) const
      {
	if (max_size() - size() < __n)
 8002aa0:	4a3e      	ldr	r2, [pc, #248]	; (8002b9c <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x114>)
 8002aa2:	4607      	mov	r7, r0
 8002aa4:	4293      	cmp	r3, r2
 8002aa6:	4689      	mov	r9, r1
 8002aa8:	d102      	bne.n	8002ab0 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x28>
	  __throw_length_error(__N(__s));
 8002aaa:	483d      	ldr	r0, [pc, #244]	; (8002ba0 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x118>)
 8002aac:	f003 fb24 	bl	80060f8 <_ZSt20__throw_length_errorPKc>
 8002ab0:	2b01      	cmp	r3, #1
 8002ab2:	461c      	mov	r4, r3
 8002ab4:	bf38      	it	cc
 8002ab6:	2401      	movcc	r4, #1
 8002ab8:	18e4      	adds	r4, r4, r3
    _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
 8002aba:	eba1 0508 	sub.w	r5, r1, r8

	const size_type __len = size() + (std::max)(size(), __n);
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8002abe:	d23b      	bcs.n	8002b38 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb0>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8002ac0:	b3e4      	cbz	r4, 8002b3c <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb4>
 8002ac2:	4294      	cmp	r4, r2
 8002ac4:	bf28      	it	cs
 8002ac6:	4614      	movcs	r4, r2
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8002ac8:	2018      	movs	r0, #24
 8002aca:	4360      	muls	r0, r4
 8002acc:	f002 ff6e 	bl	80059ac <_Znwj>
 8002ad0:	4606      	mov	r6, r0
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8002ad2:	46d4      	mov	ip, sl
	_ValueType;
      typedef typename iterator_traits<_ForwardIterator>::value_type
	_ValueType2;
      static_assert(std::is_same<_ValueType, _ValueType2>::value,
	  "relocation is only possible for values of the same type");
      _ForwardIterator __cur = __result;
 8002ad4:	46b3      	mov	fp, r6
 8002ad6:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8002ada:	46c2      	mov	sl, r8
 8002adc:	eb06 0e05 	add.w	lr, r6, r5
 8002ae0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8002ae4:	e89c 0003 	ldmia.w	ip, {r0, r1}
 8002ae8:	e88e 0003 	stmia.w	lr, {r0, r1}
      for (; __first != __last; ++__first, (void)++__cur)
 8002aec:	45d1      	cmp	r9, sl
 8002aee:	f10b 0b18 	add.w	fp, fp, #24
 8002af2:	d125      	bne.n	8002b40 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb8>
 8002af4:	2318      	movs	r3, #24
 8002af6:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 8002ba4 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x11c>
 8002afa:	08ed      	lsrs	r5, r5, #3
 8002afc:	fb0a f505 	mul.w	r5, sl, r5
 8002b00:	f025 4560 	bic.w	r5, r5, #3758096384	; 0xe0000000
 8002b04:	fb03 8b05 	mla	fp, r3, r5, r8
 8002b08:	fb05 3303 	mla	r3, r5, r3, r3
 8002b0c:	18f3      	adds	r3, r6, r3
 8002b0e:	4699      	mov	r9, r3
 8002b10:	465d      	mov	r5, fp
 8002b12:	9300      	str	r3, [sp, #0]
 8002b14:	9b01      	ldr	r3, [sp, #4]
 8002b16:	f109 0918 	add.w	r9, r9, #24
 8002b1a:	429d      	cmp	r5, r3
 8002b1c:	d01e      	beq.n	8002b5c <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd4>
 8002b1e:	46ae      	mov	lr, r5
 8002b20:	f1a9 0c18 	sub.w	ip, r9, #24
 8002b24:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8002b28:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8002b2c:	3518      	adds	r5, #24
 8002b2e:	e89e 0003 	ldmia.w	lr, {r0, r1}
 8002b32:	e88c 0003 	stmia.w	ip, {r0, r1}
 8002b36:	e7ed      	b.n	8002b14 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x8c>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8002b38:	4614      	mov	r4, r2
 8002b3a:	e7c5      	b.n	8002ac8 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x40>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8002b3c:	4626      	mov	r6, r4
 8002b3e:	e7c8      	b.n	8002ad2 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x4a>
 8002b40:	46d6      	mov	lr, sl
 8002b42:	f1ab 0c18 	sub.w	ip, fp, #24
 8002b46:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8002b4a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8002b4e:	f10a 0a18 	add.w	sl, sl, #24
 8002b52:	e89e 0003 	ldmia.w	lr, {r0, r1}
 8002b56:	e88c 0003 	stmia.w	ip, {r0, r1}
 8002b5a:	e7c7      	b.n	8002aec <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x64>
 8002b5c:	eba5 050b 	sub.w	r5, r5, fp
 8002b60:	08ed      	lsrs	r5, r5, #3
 8002b62:	fb0a fa05 	mul.w	sl, sl, r5
 8002b66:	2518      	movs	r5, #24
 8002b68:	9b00      	ldr	r3, [sp, #0]
 8002b6a:	f02a 4a60 	bic.w	sl, sl, #3758096384	; 0xe0000000
 8002b6e:	fb05 350a 	mla	r5, r5, sl, r3
	if (__p)
 8002b72:	f1b8 0f00 	cmp.w	r8, #0
 8002b76:	d005      	beq.n	8002b84 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xfc>
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
		    this->_M_impl._M_end_of_storage - __old_start);
 8002b78:	68b9      	ldr	r1, [r7, #8]
	::operator delete(__p
 8002b7a:	4640      	mov	r0, r8
 8002b7c:	eba1 0108 	sub.w	r1, r1, r8
 8002b80:	f002 faba 	bl	80050f8 <_ZdlPvj>
      this->_M_impl._M_start = __new_start;
      this->_M_impl._M_finish = __new_finish;
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8002b84:	2018      	movs	r0, #24
 8002b86:	fb00 6404 	mla	r4, r0, r4, r6
      this->_M_impl._M_finish = __new_finish;
 8002b8a:	e9c7 6500 	strd	r6, r5, [r7]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8002b8e:	60bc      	str	r4, [r7, #8]
    }
 8002b90:	b003      	add	sp, #12
 8002b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b96:	bf00      	nop
 8002b98:	aaaaaaab 	.word	0xaaaaaaab
 8002b9c:	05555555 	.word	0x05555555
 8002ba0:	080067e6 	.word	0x080067e6
 8002ba4:	0aaaaaab 	.word	0x0aaaaaab

08002ba8 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE9push_backERKS3_>:
      push_back(const value_type& __x)
 8002ba8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8002baa:	e9d0 6301 	ldrd	r6, r3, [r0, #4]
 8002bae:	429e      	cmp	r6, r3
      push_back(const value_type& __x)
 8002bb0:	4607      	mov	r7, r0
 8002bb2:	460a      	mov	r2, r1
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8002bb4:	d00a      	beq.n	8002bcc <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE9push_backERKS3_+0x24>
 8002bb6:	4635      	mov	r5, r6
 8002bb8:	460c      	mov	r4, r1
 8002bba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002bbc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
	    ++this->_M_impl._M_finish;
 8002bbe:	3618      	adds	r6, #24
 8002bc0:	e894 0003 	ldmia.w	r4, {r0, r1}
 8002bc4:	e885 0003 	stmia.w	r5, {r0, r1}
 8002bc8:	607e      	str	r6, [r7, #4]
      }
 8002bca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	  _M_realloc_insert(end(), __x);
 8002bcc:	4631      	mov	r1, r6
 8002bce:	f7ff ff5b 	bl	8002a88 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
      }
 8002bd2:	e7fa      	b.n	8002bca <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE9push_backERKS3_+0x22>

08002bd4 <_ZN11stepping_md13CanControllerImE6updateEv>:
		can_manager.pillarbox.post(params.get_BID() + offset_from_bid, tx_frame);
	}
	*/

	template<typename T>
	void CanController<T>::update(void){
 8002bd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002bd6:	4605      	mov	r5, r0
		if(!can_manager.letterbox0.empty()){
 8002bd8:	6840      	ldr	r0, [r0, #4]
	void CanController<T>::update(void){
 8002bda:	b089      	sub	sp, #36	; 0x24
		if(!can_manager.letterbox0.empty()){
 8002bdc:	3004      	adds	r0, #4
 8002bde:	f7ff fee3 	bl	80029a8 <_ZNK6CRSLib3Can6RM00089Letterbox5emptyEv>
 8002be2:	4601      	mov	r1, r0
 8002be4:	b960      	cbnz	r0, 8002c00 <_ZN11stepping_md13CanControllerImE6updateEv+0x2c>
			RM0008::RxFrame rx_frame;
 8002be6:	2218      	movs	r2, #24
 8002be8:	a802      	add	r0, sp, #8
 8002bea:	f003 fb85 	bl	80062f8 <memset>
			can_manager.letterbox0.receive(rx_frame);
 8002bee:	6868      	ldr	r0, [r5, #4]
 8002bf0:	a902      	add	r1, sp, #8
 8002bf2:	3004      	adds	r0, #4
 8002bf4:	f7ff feb5 	bl	8002962 <_ZN6CRSLib3Can6RM00089Letterbox7receiveERNS1_7RxFrameE>
			rx_frames.push_back(rx_frame);
 8002bf8:	4814      	ldr	r0, [pc, #80]	; (8002c4c <_ZN11stepping_md13CanControllerImE6updateEv+0x78>)
 8002bfa:	a902      	add	r1, sp, #8
 8002bfc:	f7ff ffd4 	bl	8002ba8 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE9push_backERKS3_>
      : _M_current(__i) { }
 8002c00:	4e12      	ldr	r6, [pc, #72]	; (8002c4c <_ZN11stepping_md13CanControllerImE6updateEv+0x78>)
 8002c02:	6834      	ldr	r4, [r6, #0]
			rx_frames.push_back(rx_frame);
		}
		*/

		auto ite = rx_frames.begin();
		while(ite != rx_frames.end()){
 8002c04:	6873      	ldr	r3, [r6, #4]
 8002c06:	429c      	cmp	r4, r3
 8002c08:	d01d      	beq.n	8002c46 <_ZN11stepping_md13CanControllerImE6updateEv+0x72>
			if(ite->header.get_id() == (params.get_BID() + offset_from_bid)){
 8002c0a:	69a8      	ldr	r0, [r5, #24]
			return id;
 8002c0c:	6827      	ldr	r7, [r4, #0]
 8002c0e:	f000 fa54 	bl	80030ba <_ZN11stepping_md10Parameters7get_BIDEv>
 8002c12:	69eb      	ldr	r3, [r5, #28]
 8002c14:	4403      	add	r3, r0
 8002c16:	42bb      	cmp	r3, r7
 8002c18:	d113      	bne.n	8002c42 <_ZN11stepping_md13CanControllerImE6updateEv+0x6e>
 8002c1a:	6823      	ldr	r3, [r4, #0]
 8002c1c:	6922      	ldr	r2, [r4, #16]
 8002c1e:	e9cd 2301 	strd	r2, r3, [sp, #4]
  template<typename _Res, typename... _ArgTypes>
    _Res
    function<_Res(_ArgTypes...)>::
    operator()(_ArgTypes... __args) const
    {
      if (_M_empty())
 8002c22:	692b      	ldr	r3, [r5, #16]
 8002c24:	b90b      	cbnz	r3, 8002c2a <_ZN11stepping_md13CanControllerImE6updateEv+0x56>
	__throw_bad_function_call();
 8002c26:	f003 fa6a 	bl	80060fe <_ZSt25__throw_bad_function_callv>
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
 8002c2a:	696b      	ldr	r3, [r5, #20]
 8002c2c:	aa02      	add	r2, sp, #8
 8002c2e:	a901      	add	r1, sp, #4
 8002c30:	f105 0008 	add.w	r0, r5, #8
 8002c34:	4798      	blx	r3
				callback(unpack<std::endian::native, T>(ite->data), ite->header.get_id());
				ite = rx_frames.erase(ite);
 8002c36:	4621      	mov	r1, r4
 8002c38:	4630      	mov	r0, r6
 8002c3a:	f7ff ff13 	bl	8002a64 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE>
 8002c3e:	4604      	mov	r4, r0
				continue;
 8002c40:	e7e0      	b.n	8002c04 <_ZN11stepping_md13CanControllerImE6updateEv+0x30>
      { return __normal_iterator(_M_current++); }
 8002c42:	3418      	adds	r4, #24
 8002c44:	e7de      	b.n	8002c04 <_ZN11stepping_md13CanControllerImE6updateEv+0x30>
			}
			ite++;
		}
	}
 8002c46:	b009      	add	sp, #36	; 0x24
 8002c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002c4a:	bf00      	nop
 8002c4c:	20000344 	.word	0x20000344

08002c50 <_ZN11stepping_md13CanControllerIfE6updateEv>:
	void CanController<T>::update(void){
 8002c50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002c52:	4605      	mov	r5, r0
		if(!can_manager.letterbox0.empty()){
 8002c54:	6840      	ldr	r0, [r0, #4]
	void CanController<T>::update(void){
 8002c56:	b089      	sub	sp, #36	; 0x24
		if(!can_manager.letterbox0.empty()){
 8002c58:	3004      	adds	r0, #4
 8002c5a:	f7ff fea5 	bl	80029a8 <_ZNK6CRSLib3Can6RM00089Letterbox5emptyEv>
 8002c5e:	4601      	mov	r1, r0
 8002c60:	b960      	cbnz	r0, 8002c7c <_ZN11stepping_md13CanControllerIfE6updateEv+0x2c>
			RM0008::RxFrame rx_frame;
 8002c62:	2218      	movs	r2, #24
 8002c64:	a802      	add	r0, sp, #8
 8002c66:	f003 fb47 	bl	80062f8 <memset>
			can_manager.letterbox0.receive(rx_frame);
 8002c6a:	6868      	ldr	r0, [r5, #4]
 8002c6c:	a902      	add	r1, sp, #8
 8002c6e:	3004      	adds	r0, #4
 8002c70:	f7ff fe77 	bl	8002962 <_ZN6CRSLib3Can6RM00089Letterbox7receiveERNS1_7RxFrameE>
			rx_frames.push_back(rx_frame);
 8002c74:	4814      	ldr	r0, [pc, #80]	; (8002cc8 <_ZN11stepping_md13CanControllerIfE6updateEv+0x78>)
 8002c76:	a902      	add	r1, sp, #8
 8002c78:	f7ff ff96 	bl	8002ba8 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE9push_backERKS3_>
      : _M_current(__i) { }
 8002c7c:	4e12      	ldr	r6, [pc, #72]	; (8002cc8 <_ZN11stepping_md13CanControllerIfE6updateEv+0x78>)
 8002c7e:	6834      	ldr	r4, [r6, #0]
		while(ite != rx_frames.end()){
 8002c80:	6873      	ldr	r3, [r6, #4]
 8002c82:	429c      	cmp	r4, r3
 8002c84:	d01d      	beq.n	8002cc2 <_ZN11stepping_md13CanControllerIfE6updateEv+0x72>
			if(ite->header.get_id() == (params.get_BID() + offset_from_bid)){
 8002c86:	69a8      	ldr	r0, [r5, #24]
 8002c88:	6827      	ldr	r7, [r4, #0]
 8002c8a:	f000 fa16 	bl	80030ba <_ZN11stepping_md10Parameters7get_BIDEv>
 8002c8e:	69eb      	ldr	r3, [r5, #28]
 8002c90:	4403      	add	r3, r0
 8002c92:	42bb      	cmp	r3, r7
 8002c94:	d113      	bne.n	8002cbe <_ZN11stepping_md13CanControllerIfE6updateEv+0x6e>
 8002c96:	6823      	ldr	r3, [r4, #0]
 8002c98:	6922      	ldr	r2, [r4, #16]
 8002c9a:	9302      	str	r3, [sp, #8]
      if (_M_empty())
 8002c9c:	692b      	ldr	r3, [r5, #16]
 8002c9e:	9201      	str	r2, [sp, #4]
 8002ca0:	b90b      	cbnz	r3, 8002ca6 <_ZN11stepping_md13CanControllerIfE6updateEv+0x56>
	__throw_bad_function_call();
 8002ca2:	f003 fa2c 	bl	80060fe <_ZSt25__throw_bad_function_callv>
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
 8002ca6:	696b      	ldr	r3, [r5, #20]
 8002ca8:	aa02      	add	r2, sp, #8
 8002caa:	a901      	add	r1, sp, #4
 8002cac:	f105 0008 	add.w	r0, r5, #8
 8002cb0:	4798      	blx	r3
				ite = rx_frames.erase(ite);
 8002cb2:	4621      	mov	r1, r4
 8002cb4:	4630      	mov	r0, r6
 8002cb6:	f7ff fed5 	bl	8002a64 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE>
 8002cba:	4604      	mov	r4, r0
				continue;
 8002cbc:	e7e0      	b.n	8002c80 <_ZN11stepping_md13CanControllerIfE6updateEv+0x30>
      { return __normal_iterator(_M_current++); }
 8002cbe:	3418      	adds	r4, #24
 8002cc0:	e7de      	b.n	8002c80 <_ZN11stepping_md13CanControllerIfE6updateEv+0x30>
	}
 8002cc2:	b009      	add	sp, #36	; 0x24
 8002cc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002cc6:	bf00      	nop
 8002cc8:	20000338 	.word	0x20000338

08002ccc <_ZN11stepping_md13CanControllerIhE6updateEv>:
	void CanController<T>::update(void){
 8002ccc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002cce:	4605      	mov	r5, r0
		if(!can_manager.letterbox0.empty()){
 8002cd0:	6840      	ldr	r0, [r0, #4]
	void CanController<T>::update(void){
 8002cd2:	b089      	sub	sp, #36	; 0x24
		if(!can_manager.letterbox0.empty()){
 8002cd4:	3004      	adds	r0, #4
 8002cd6:	f7ff fe67 	bl	80029a8 <_ZNK6CRSLib3Can6RM00089Letterbox5emptyEv>
 8002cda:	4601      	mov	r1, r0
 8002cdc:	b960      	cbnz	r0, 8002cf8 <_ZN11stepping_md13CanControllerIhE6updateEv+0x2c>
			RM0008::RxFrame rx_frame;
 8002cde:	2218      	movs	r2, #24
 8002ce0:	a802      	add	r0, sp, #8
 8002ce2:	f003 fb09 	bl	80062f8 <memset>
			can_manager.letterbox0.receive(rx_frame);
 8002ce6:	6868      	ldr	r0, [r5, #4]
 8002ce8:	a902      	add	r1, sp, #8
 8002cea:	3004      	adds	r0, #4
 8002cec:	f7ff fe39 	bl	8002962 <_ZN6CRSLib3Can6RM00089Letterbox7receiveERNS1_7RxFrameE>
			rx_frames.push_back(rx_frame);
 8002cf0:	4815      	ldr	r0, [pc, #84]	; (8002d48 <_ZN11stepping_md13CanControllerIhE6updateEv+0x7c>)
 8002cf2:	a902      	add	r1, sp, #8
 8002cf4:	f7ff ff58 	bl	8002ba8 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE9push_backERKS3_>
      : _M_current(__i) { }
 8002cf8:	4e13      	ldr	r6, [pc, #76]	; (8002d48 <_ZN11stepping_md13CanControllerIhE6updateEv+0x7c>)
 8002cfa:	6834      	ldr	r4, [r6, #0]
		while(ite != rx_frames.end()){
 8002cfc:	6873      	ldr	r3, [r6, #4]
 8002cfe:	429c      	cmp	r4, r3
 8002d00:	d01f      	beq.n	8002d42 <_ZN11stepping_md13CanControllerIhE6updateEv+0x76>
			if(ite->header.get_id() == (params.get_BID() + offset_from_bid)){
 8002d02:	69a8      	ldr	r0, [r5, #24]
 8002d04:	6827      	ldr	r7, [r4, #0]
 8002d06:	f000 f9d8 	bl	80030ba <_ZN11stepping_md10Parameters7get_BIDEv>
 8002d0a:	69eb      	ldr	r3, [r5, #28]
 8002d0c:	4403      	add	r3, r0
 8002d0e:	42bb      	cmp	r3, r7
 8002d10:	d115      	bne.n	8002d3e <_ZN11stepping_md13CanControllerIhE6updateEv+0x72>
 8002d12:	6823      	ldr	r3, [r4, #0]
 8002d14:	7c22      	ldrb	r2, [r4, #16]
 8002d16:	9302      	str	r3, [sp, #8]
      if (_M_empty())
 8002d18:	692b      	ldr	r3, [r5, #16]
 8002d1a:	f88d 2007 	strb.w	r2, [sp, #7]
 8002d1e:	b90b      	cbnz	r3, 8002d24 <_ZN11stepping_md13CanControllerIhE6updateEv+0x58>
	__throw_bad_function_call();
 8002d20:	f003 f9ed 	bl	80060fe <_ZSt25__throw_bad_function_callv>
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
 8002d24:	696b      	ldr	r3, [r5, #20]
 8002d26:	aa02      	add	r2, sp, #8
 8002d28:	f10d 0107 	add.w	r1, sp, #7
 8002d2c:	f105 0008 	add.w	r0, r5, #8
 8002d30:	4798      	blx	r3
				ite = rx_frames.erase(ite);
 8002d32:	4621      	mov	r1, r4
 8002d34:	4630      	mov	r0, r6
 8002d36:	f7ff fe95 	bl	8002a64 <_ZNSt6vectorIN6CRSLib3Can6RM00087RxFrameESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE>
 8002d3a:	4604      	mov	r4, r0
				continue;
 8002d3c:	e7de      	b.n	8002cfc <_ZN11stepping_md13CanControllerIhE6updateEv+0x30>
      { return __normal_iterator(_M_current++); }
 8002d3e:	3418      	adds	r4, #24
 8002d40:	e7dc      	b.n	8002cfc <_ZN11stepping_md13CanControllerIhE6updateEv+0x30>
	}
 8002d42:	b009      	add	sp, #36	; 0x24
 8002d44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002d46:	bf00      	nop
 8002d48:	2000032c 	.word	0x2000032c

08002d4c <_GLOBAL__sub_I__ZN11stepping_md18CanController_Base9instancesB5cxx11E>:
	this->_M_size = 0;
 8002d4c:	2200      	movs	r2, #0
	this->_M_next = this->_M_prev = this;
 8002d4e:	4b12      	ldr	r3, [pc, #72]	; (8002d98 <_GLOBAL__sub_I__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x4c>)
	std::vector<CRSLib::Can::RM0008::RxFrame> CanController<T>::rx_frames;
 8002d50:	4912      	ldr	r1, [pc, #72]	; (8002d9c <_GLOBAL__sub_I__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x50>)
	this->_M_size = 0;
 8002d52:	609a      	str	r2, [r3, #8]
	this->_M_next = this->_M_prev = this;
 8002d54:	e9c3 3300 	strd	r3, r3, [r3]
 8002d58:	680b      	ldr	r3, [r1, #0]
 8002d5a:	3301      	adds	r3, #1
 8002d5c:	2b01      	cmp	r3, #1
 8002d5e:	600b      	str	r3, [r1, #0]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8002d60:	bf02      	ittt	eq
 8002d62:	4b0f      	ldreq	r3, [pc, #60]	; (8002da0 <_GLOBAL__sub_I__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x54>)
 8002d64:	e9c3 2200 	strdeq	r2, r2, [r3]
 8002d68:	609a      	streq	r2, [r3, #8]
 8002d6a:	4a0e      	ldr	r2, [pc, #56]	; (8002da4 <_GLOBAL__sub_I__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x58>)
 8002d6c:	6813      	ldr	r3, [r2, #0]
 8002d6e:	3301      	adds	r3, #1
 8002d70:	2b01      	cmp	r3, #1
 8002d72:	6013      	str	r3, [r2, #0]
 8002d74:	bf01      	itttt	eq
 8002d76:	2200      	moveq	r2, #0
 8002d78:	4b0b      	ldreq	r3, [pc, #44]	; (8002da8 <_GLOBAL__sub_I__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x5c>)
 8002d7a:	e9c3 2200 	strdeq	r2, r2, [r3]
 8002d7e:	609a      	streq	r2, [r3, #8]
 8002d80:	4a0a      	ldr	r2, [pc, #40]	; (8002dac <_GLOBAL__sub_I__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x60>)
 8002d82:	6813      	ldr	r3, [r2, #0]
 8002d84:	3301      	adds	r3, #1
 8002d86:	2b01      	cmp	r3, #1
 8002d88:	6013      	str	r3, [r2, #0]
 8002d8a:	bf01      	itttt	eq
 8002d8c:	2200      	moveq	r2, #0
 8002d8e:	4b08      	ldreq	r3, [pc, #32]	; (8002db0 <_GLOBAL__sub_I__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x64>)
 8002d90:	e9c3 2200 	strdeq	r2, r2, [r3]
 8002d94:	609a      	streq	r2, [r3, #8]
			}
			ite++;
		}
	}
	*/
}
 8002d96:	4770      	bx	lr
 8002d98:	20000350 	.word	0x20000350
 8002d9c:	20000328 	.word	0x20000328
 8002da0:	20000344 	.word	0x20000344
 8002da4:	20000324 	.word	0x20000324
 8002da8:	20000338 	.word	0x20000338
 8002dac:	20000320 	.word	0x20000320
 8002db0:	2000032c 	.word	0x2000032c

08002db4 <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E>:
	std::vector<CRSLib::Can::RM0008::RxFrame> CanController<T>::rx_frames;
 8002db4:	4a11      	ldr	r2, [pc, #68]	; (8002dfc <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x48>)
}
 8002db6:	b538      	push	{r3, r4, r5, lr}
	std::vector<CRSLib::Can::RM0008::RxFrame> CanController<T>::rx_frames;
 8002db8:	6813      	ldr	r3, [r2, #0]
 8002dba:	3b01      	subs	r3, #1
 8002dbc:	6013      	str	r3, [r2, #0]
 8002dbe:	b913      	cbnz	r3, 8002dc6 <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x12>
      }
 8002dc0:	480f      	ldr	r0, [pc, #60]	; (8002e00 <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x4c>)
 8002dc2:	f7ff fe45 	bl	8002a50 <_ZNSt12_Vector_baseIN6CRSLib3Can6RM00087RxFrameESaIS3_EED1Ev>
 8002dc6:	4a0f      	ldr	r2, [pc, #60]	; (8002e04 <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x50>)
 8002dc8:	6813      	ldr	r3, [r2, #0]
 8002dca:	3b01      	subs	r3, #1
 8002dcc:	6013      	str	r3, [r2, #0]
 8002dce:	b913      	cbnz	r3, 8002dd6 <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x22>
 8002dd0:	480d      	ldr	r0, [pc, #52]	; (8002e08 <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x54>)
 8002dd2:	f7ff fe3d 	bl	8002a50 <_ZNSt12_Vector_baseIN6CRSLib3Can6RM00087RxFrameESaIS3_EED1Ev>
 8002dd6:	4a0d      	ldr	r2, [pc, #52]	; (8002e0c <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x58>)
 8002dd8:	6813      	ldr	r3, [r2, #0]
 8002dda:	3b01      	subs	r3, #1
 8002ddc:	6013      	str	r3, [r2, #0]
 8002dde:	b913      	cbnz	r3, 8002de6 <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x32>
 8002de0:	480b      	ldr	r0, [pc, #44]	; (8002e10 <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x5c>)
 8002de2:	f7ff fe35 	bl	8002a50 <_ZNSt12_Vector_baseIN6CRSLib3Can6RM00087RxFrameESaIS3_EED1Ev>
    void
    _List_base<_Tp, _Alloc>::
    _M_clear() _GLIBCXX_NOEXCEPT
    {
      typedef _List_node<_Tp>  _Node;
      __detail::_List_node_base* __cur = _M_impl._M_node._M_next;
 8002de6:	4c0b      	ldr	r4, [pc, #44]	; (8002e14 <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x60>)
 8002de8:	6820      	ldr	r0, [r4, #0]
      while (__cur != &_M_impl._M_node)
 8002dea:	42a0      	cmp	r0, r4
 8002dec:	d005      	beq.n	8002dfa <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x46>
	{
	  _Node* __tmp = static_cast<_Node*>(__cur);
	  __cur = __tmp->_M_next;
 8002dee:	6805      	ldr	r5, [r0, #0]
 8002df0:	210c      	movs	r1, #12
 8002df2:	f002 f981 	bl	80050f8 <_ZdlPvj>
 8002df6:	4628      	mov	r0, r5
 8002df8:	e7f7      	b.n	8002dea <_GLOBAL__sub_D__ZN11stepping_md18CanController_Base9instancesB5cxx11E+0x36>
}
 8002dfa:	bd38      	pop	{r3, r4, r5, pc}
 8002dfc:	20000320 	.word	0x20000320
 8002e00:	2000032c 	.word	0x2000032c
 8002e04:	20000324 	.word	0x20000324
 8002e08:	20000338 	.word	0x20000338
 8002e0c:	20000328 	.word	0x20000328
 8002e10:	20000344 	.word	0x20000344
 8002e14:	20000350 	.word	0x20000350

08002e18 <_ZN11stepping_md20MotorController_Base6updateEv>:
				for(MotorController_Base controller : MotorController_Base::instances){
					controller.update();
				}
			}
			virtual void emergency_callback(void){throw std::logic_error("emergency_callback is not implemented");}
			virtual void update(void){throw std::logic_error("update is not implemented");}
 8002e18:	b510      	push	{r4, lr}
 8002e1a:	2008      	movs	r0, #8
 8002e1c:	f002 f9c8 	bl	80051b0 <__cxa_allocate_exception>
 8002e20:	4906      	ldr	r1, [pc, #24]	; (8002e3c <_ZN11stepping_md20MotorController_Base6updateEv+0x24>)
 8002e22:	4604      	mov	r4, r0
 8002e24:	f003 f8f6 	bl	8006014 <_ZNSt11logic_errorC1EPKc>
 8002e28:	4620      	mov	r0, r4
 8002e2a:	4a05      	ldr	r2, [pc, #20]	; (8002e40 <_ZN11stepping_md20MotorController_Base6updateEv+0x28>)
 8002e2c:	4905      	ldr	r1, [pc, #20]	; (8002e44 <_ZN11stepping_md20MotorController_Base6updateEv+0x2c>)
 8002e2e:	f002 fda3 	bl	8005978 <__cxa_throw>
 8002e32:	4620      	mov	r0, r4
 8002e34:	f002 f9d2 	bl	80051dc <__cxa_free_exception>
 8002e38:	f002 f9f4 	bl	8005224 <__cxa_end_cleanup>
 8002e3c:	080067cc 	.word	0x080067cc
 8002e40:	08005f85 	.word	0x08005f85
 8002e44:	08006bc4 	.word	0x08006bc4

08002e48 <_ZN11stepping_md20MotorController_Base18emergency_callbackEv>:
			virtual void emergency_callback(void){throw std::logic_error("emergency_callback is not implemented");}
 8002e48:	b510      	push	{r4, lr}
 8002e4a:	2008      	movs	r0, #8
 8002e4c:	f002 f9b0 	bl	80051b0 <__cxa_allocate_exception>
 8002e50:	4906      	ldr	r1, [pc, #24]	; (8002e6c <_ZN11stepping_md20MotorController_Base18emergency_callbackEv+0x24>)
 8002e52:	4604      	mov	r4, r0
 8002e54:	f003 f8de 	bl	8006014 <_ZNSt11logic_errorC1EPKc>
 8002e58:	4620      	mov	r0, r4
 8002e5a:	4a05      	ldr	r2, [pc, #20]	; (8002e70 <_ZN11stepping_md20MotorController_Base18emergency_callbackEv+0x28>)
 8002e5c:	4905      	ldr	r1, [pc, #20]	; (8002e74 <_ZN11stepping_md20MotorController_Base18emergency_callbackEv+0x2c>)
 8002e5e:	f002 fd8b 	bl	8005978 <__cxa_throw>
 8002e62:	4620      	mov	r0, r4
 8002e64:	f002 f9ba 	bl	80051dc <__cxa_free_exception>
 8002e68:	f002 f9dc 	bl	8005224 <__cxa_end_cleanup>
 8002e6c:	080068e6 	.word	0x080068e6
 8002e70:	08005f85 	.word	0x08005f85
 8002e74:	08006bc4 	.word	0x08006bc4

08002e78 <_ZN11stepping_md15MotorController15update_positionEv>:

namespace stepping_md
{
	std::list<MotorController_Base> MotorController_Base::instances;

    void MotorController::update_position(){
 8002e78:	b538      	push	{r3, r4, r5, lr}
 8002e7a:	4604      	mov	r4, r0
        //現在の位置を更新する
        //開始時間から計算する
        int time_diff = HAL_GetTick() - start_time;//ms
 8002e7c:	f001 f868 	bl	8003f50 <HAL_GetTick>
 8002e80:	6a25      	ldr	r5, [r4, #32]
 8002e82:	1b45      	subs	r5, r0, r5
        start_time = HAL_GetTick();
 8002e84:	f001 f864 	bl	8003f50 <HAL_GetTick>
 8002e88:	6220      	str	r0, [r4, #32]
        constexpr float rpm_to_rad_per_ms = 2 * std::numbers::pi / 60000;
        positon +=direction * time_diff * current_speed * rpm_to_rad_per_ms;
 8002e8a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8002e8c:	4368      	muls	r0, r5
 8002e8e:	f7fd fa29 	bl	80002e4 <__aeabi_i2f>
 8002e92:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002e94:	f7fd fa7a 	bl	800038c <__aeabi_fmul>
 8002e98:	4904      	ldr	r1, [pc, #16]	; (8002eac <_ZN11stepping_md15MotorController15update_positionEv+0x34>)
 8002e9a:	f7fd fa77 	bl	800038c <__aeabi_fmul>
 8002e9e:	4601      	mov	r1, r0
 8002ea0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002ea2:	f7fd f96b 	bl	800017c <__addsf3>
 8002ea6:	6320      	str	r0, [r4, #48]	; 0x30
    }
 8002ea8:	bd38      	pop	{r3, r4, r5, pc}
 8002eaa:	bf00      	nop
 8002eac:	38db9cfe 	.word	0x38db9cfe

08002eb0 <_ZN11stepping_md15MotorController13set_directionEi>:

    //方向を設定する。引数が正のとき正転、負のとき逆転
    void MotorController::set_direction(int _direction){
 8002eb0:	b538      	push	{r3, r4, r5, lr}
 8002eb2:	460d      	mov	r5, r1
 8002eb4:	4604      	mov	r4, r0
        //変更前に現在の位置を更新する
        update_position();
 8002eb6:	f7ff ffdf 	bl	8002e78 <_ZN11stepping_md15MotorController15update_positionEv>
        //設定の取得
        if(_direction > 0){
 8002eba:	2d00      	cmp	r5, #0
            direction = 1;
            HAL_GPIO_WritePin(dir_port, dir_pin, GPIO_PIN_SET);
        }else{
            direction = -1;
 8002ebc:	bfd4      	ite	le
 8002ebe:	f04f 33ff 	movle.w	r3, #4294967295
            direction = 1;
 8002ec2:	2201      	movgt	r2, #1
 8002ec4:	89a1      	ldrh	r1, [r4, #12]
            HAL_GPIO_WritePin(dir_port, dir_pin, GPIO_PIN_RESET);
 8002ec6:	6920      	ldr	r0, [r4, #16]
            direction = 1;
 8002ec8:	bfce      	itee	gt
 8002eca:	6262      	strgt	r2, [r4, #36]	; 0x24
            direction = -1;
 8002ecc:	6263      	strle	r3, [r4, #36]	; 0x24
            HAL_GPIO_WritePin(dir_port, dir_pin, GPIO_PIN_RESET);
 8002ece:	2200      	movle	r2, #0
        }
    }
 8002ed0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            HAL_GPIO_WritePin(dir_port, dir_pin, GPIO_PIN_RESET);
 8002ed4:	f001 bb02 	b.w	80044dc <HAL_GPIO_WritePin>

08002ed8 <_ZN11stepping_md15MotorController5startEv>:
    void MotorController::disable(){
        update_position();
        stop();
        HAL_GPIO_WritePin(ena_port, ena_pin, GPIO_PIN_RESET);
    }
    void MotorController::start(){
 8002ed8:	b510      	push	{r4, lr}
 8002eda:	4604      	mov	r4, r0
        update_position();
 8002edc:	f7ff ffcc 	bl	8002e78 <_ZN11stepping_md15MotorController15update_positionEv>
        HAL_TIM_PWM_Start(pwm_tim, TIM_CHANNEL_1);
 8002ee0:	2100      	movs	r1, #0
 8002ee2:	69a0      	ldr	r0, [r4, #24]
 8002ee4:	f002 f804 	bl	8004ef0 <HAL_TIM_PWM_Start>
        current_speed = speed;
 8002ee8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8002eea:	62e3      	str	r3, [r4, #44]	; 0x2c
    }
 8002eec:	bd10      	pop	{r4, pc}

08002eee <_ZN11stepping_md15MotorController4stopEv>:
    void MotorController::stop(){
 8002eee:	b510      	push	{r4, lr}
 8002ef0:	4604      	mov	r4, r0
        update_position();
 8002ef2:	f7ff ffc1 	bl	8002e78 <_ZN11stepping_md15MotorController15update_positionEv>
        HAL_TIM_PWM_Stop(pwm_tim, TIM_CHANNEL_1);
 8002ef6:	2100      	movs	r1, #0
 8002ef8:	69a0      	ldr	r0, [r4, #24]
 8002efa:	f002 f837 	bl	8004f6c <HAL_TIM_PWM_Stop>
        current_speed = 0;
 8002efe:	2300      	movs	r3, #0
 8002f00:	62e3      	str	r3, [r4, #44]	; 0x2c
    }
 8002f02:	bd10      	pop	{r4, pc}

08002f04 <_ZN11stepping_md15MotorController6enableEv>:
    void MotorController::enable(){
 8002f04:	b510      	push	{r4, lr}
 8002f06:	4604      	mov	r4, r0
        update_position();
 8002f08:	f7ff ffb6 	bl	8002e78 <_ZN11stepping_md15MotorController15update_positionEv>
        stop();
 8002f0c:	4620      	mov	r0, r4
 8002f0e:	f7ff ffee 	bl	8002eee <_ZN11stepping_md15MotorController4stopEv>
        HAL_GPIO_WritePin(ena_port, ena_pin, GPIO_PIN_SET);
 8002f12:	88a1      	ldrh	r1, [r4, #4]
 8002f14:	68a0      	ldr	r0, [r4, #8]
 8002f16:	2201      	movs	r2, #1
    }
 8002f18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        HAL_GPIO_WritePin(ena_port, ena_pin, GPIO_PIN_SET);
 8002f1c:	f001 bade 	b.w	80044dc <HAL_GPIO_WritePin>

08002f20 <_ZN11stepping_md15MotorController7disableEv>:
    void MotorController::disable(){
 8002f20:	b510      	push	{r4, lr}
 8002f22:	4604      	mov	r4, r0
        update_position();
 8002f24:	f7ff ffa8 	bl	8002e78 <_ZN11stepping_md15MotorController15update_positionEv>
        stop();
 8002f28:	4620      	mov	r0, r4
 8002f2a:	f7ff ffe0 	bl	8002eee <_ZN11stepping_md15MotorController4stopEv>
        HAL_GPIO_WritePin(ena_port, ena_pin, GPIO_PIN_RESET);
 8002f2e:	88a1      	ldrh	r1, [r4, #4]
 8002f30:	68a0      	ldr	r0, [r4, #8]
 8002f32:	2200      	movs	r2, #0
    }
 8002f34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        HAL_GPIO_WritePin(ena_port, ena_pin, GPIO_PIN_RESET);
 8002f38:	f001 bad0 	b.w	80044dc <HAL_GPIO_WritePin>

08002f3c <_ZN11stepping_md15MotorController18emergency_callbackEv>:

			//モーターの回転速度を設定する関数
			//引数はrpm
			void set_speed(float speed);
			//Emergencyスイッチが扱われたとき呼ばれるコールバック関数
		    void emergency_callback() override{
 8002f3c:	b510      	push	{r4, lr}
 8002f3e:	4604      	mov	r4, r0
		        stop();
 8002f40:	f7ff ffd5 	bl	8002eee <_ZN11stepping_md15MotorController4stopEv>
		        disable();
 8002f44:	4620      	mov	r0, r4
		    }
 8002f46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		        disable();
 8002f4a:	f7ff bfe9 	b.w	8002f20 <_ZN11stepping_md15MotorController7disableEv>

08002f4e <_ZN11stepping_md15MotorController14move_to_targetEf>:
    void MotorController::move_to_target(float target){
 8002f4e:	b510      	push	{r4, lr}
 8002f50:	4604      	mov	r4, r0
 8002f52:	4608      	mov	r0, r1
        //方向を決める
        set_direction(target - positon);
 8002f54:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8002f56:	f7fd f90f 	bl	8000178 <__aeabi_fsub>
 8002f5a:	f7fd fbdd 	bl	8000718 <__aeabi_f2iz>
 8002f5e:	4601      	mov	r1, r0
 8002f60:	4620      	mov	r0, r4
 8002f62:	f7ff ffa5 	bl	8002eb0 <_ZN11stepping_md15MotorController13set_directionEi>
        start();
 8002f66:	4620      	mov	r0, r4
    }
 8002f68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        start();
 8002f6c:	f7ff bfb4 	b.w	8002ed8 <_ZN11stepping_md15MotorController5startEv>

08002f70 <_ZN11stepping_md15MotorController6updateEv>:

        //pwmの周期を設定する
        pwm_tim->Instance->ARR = (uint32_t)(HAL_RCC_GetPCLK1Freq()/speed/motor_param.ppr);
    }

    void MotorController::update(){
 8002f70:	b530      	push	{r4, r5, lr}
 8002f72:	4604      	mov	r4, r0
 8002f74:	b085      	sub	sp, #20
        //現在の位置を更新する
        update_position();
 8002f76:	f7ff ff7f 	bl	8002e78 <_ZN11stepping_md15MotorController15update_positionEv>

        stepping_md::MotorParam motor_param = params.get_motor_param();
 8002f7a:	69e1      	ldr	r1, [r4, #28]
 8002f7c:	a801      	add	r0, sp, #4
 8002f7e:	f000 f88f 	bl	80030a0 <_ZN11stepping_md10Parameters15get_motor_paramEv>
 8002f82:	9d03      	ldr	r5, [sp, #12]
        //目標位置に到達しているか確認する
        if(abs(motor_param.target - positon) < error_threshold){
 8002f84:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8002f86:	4628      	mov	r0, r5
 8002f88:	f7fd f8f6 	bl	8000178 <__aeabi_fsub>
 8002f8c:	f7fd fbc4 	bl	8000718 <__aeabi_f2iz>
 8002f90:	2800      	cmp	r0, #0
 8002f92:	bfb8      	it	lt
 8002f94:	4240      	neglt	r0, r0
 8002f96:	f7fd f9a5 	bl	80002e4 <__aeabi_i2f>
 8002f9a:	6961      	ldr	r1, [r4, #20]
 8002f9c:	f7fd fb94 	bl	80006c8 <__aeabi_fcmplt>
 8002fa0:	b128      	cbz	r0, 8002fae <_ZN11stepping_md15MotorController6updateEv+0x3e>
            //目標位置に到達している場合は停止する
            stop();
 8002fa2:	4620      	mov	r0, r4
        }
        else{
            //目標位置に到達していない場合は、目標位置に向かって動かす
            move_to_target(motor_param.target);
        }
    }      
 8002fa4:	b005      	add	sp, #20
 8002fa6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            stop();
 8002faa:	f7ff bfa0 	b.w	8002eee <_ZN11stepping_md15MotorController4stopEv>
            move_to_target(motor_param.target);
 8002fae:	4629      	mov	r1, r5
 8002fb0:	4620      	mov	r0, r4
    }      
 8002fb2:	b005      	add	sp, #20
 8002fb4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            move_to_target(motor_param.target);
 8002fb8:	f7ff bfc9 	b.w	8002f4e <_ZN11stepping_md15MotorController14move_to_targetEf>

08002fbc <_ZN11stepping_md15MotorControllerC1EtP12GPIO_TypeDeftS2_fP17TIM_HandleTypeDefRNS_10ParametersE>:
    MotorController::MotorController(
 8002fbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			explicit MotorController_Base(){MotorController_Base::instances.push_back(*this);}
 8002fc0:	f8df 806c 	ldr.w	r8, [pc, #108]	; 8003030 <_ZN11stepping_md15MotorControllerC1EtP12GPIO_TypeDeftS2_fP17TIM_HandleTypeDefRNS_10ParametersE+0x74>
 8002fc4:	4604      	mov	r4, r0
 8002fc6:	f8c0 8000 	str.w	r8, [r0]
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8002fca:	200c      	movs	r0, #12
 8002fcc:	4616      	mov	r6, r2
 8002fce:	461d      	mov	r5, r3
 8002fd0:	460f      	mov	r7, r1
 8002fd2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8002fd6:	f002 fce9 	bl	80059ac <_Znwj>
	class MotorController_Base{
 8002fda:	f8c0 8008 	str.w	r8, [r0, #8]
	 __tmp->_M_hook(__position._M_node);
 8002fde:	f8df 8054 	ldr.w	r8, [pc, #84]	; 8003034 <_ZN11stepping_md15MotorControllerC1EtP12GPIO_TypeDeftS2_fP17TIM_HandleTypeDefRNS_10ParametersE+0x78>
 8002fe2:	4641      	mov	r1, r8
 8002fe4:	f002 ffc4 	bl	8005f70 <_ZNSt8__detail15_List_node_base7_M_hookEPS0_>
      void _M_inc_size(size_t __n) { _M_impl._M_node._M_size += __n; }
 8002fe8:	f8d8 3008 	ldr.w	r3, [r8, #8]
    ) : ena_pin(ena_pin), ena_port(ena_port), dir_pin(dir_pin), dir_port(dir_port),error_threshold(error_threshold), pwm_tim(pwm_tim), params(params){
 8002fec:	2200      	movs	r2, #0
 8002fee:	3301      	adds	r3, #1
 8002ff0:	f8c8 3008 	str.w	r3, [r8, #8]
 8002ff4:	4b10      	ldr	r3, [pc, #64]	; (8003038 <_ZN11stepping_md15MotorControllerC1EtP12GPIO_TypeDeftS2_fP17TIM_HandleTypeDefRNS_10ParametersE+0x7c>)
        enable();
 8002ff6:	4620      	mov	r0, r4
    ) : ena_pin(ena_pin), ena_port(ena_port), dir_pin(dir_pin), dir_port(dir_port),error_threshold(error_threshold), pwm_tim(pwm_tim), params(params){
 8002ff8:	6023      	str	r3, [r4, #0]
 8002ffa:	9b08      	ldr	r3, [sp, #32]
 8002ffc:	80a7      	strh	r7, [r4, #4]
 8002ffe:	6123      	str	r3, [r4, #16]
 8003000:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003002:	60a6      	str	r6, [r4, #8]
 8003004:	6163      	str	r3, [r4, #20]
 8003006:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003008:	81a5      	strh	r5, [r4, #12]
 800300a:	61e3      	str	r3, [r4, #28]
 800300c:	2301      	movs	r3, #1
 800300e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8003012:	2300      	movs	r3, #0
 8003014:	f8c4 9018 	str.w	r9, [r4, #24]
 8003018:	62a3      	str	r3, [r4, #40]	; 0x28
 800301a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800301c:	6323      	str	r3, [r4, #48]	; 0x30
        enable();
 800301e:	f7ff ff71 	bl	8002f04 <_ZN11stepping_md15MotorController6enableEv>
        pwm_tim->Instance->CCR1 =100;
 8003022:	2264      	movs	r2, #100	; 0x64
 8003024:	f8d9 3000 	ldr.w	r3, [r9]
    }
 8003028:	4620      	mov	r0, r4
        pwm_tim->Instance->CCR1 =100;
 800302a:	635a      	str	r2, [r3, #52]	; 0x34
    }
 800302c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003030:	08006944 	.word	0x08006944
 8003034:	2000035c 	.word	0x2000035c
 8003038:	08006984 	.word	0x08006984

0800303c <_ZN11stepping_md15MotorController9set_speedEf>:
    void MotorController::set_speed(float _speed){
 800303c:	b530      	push	{r4, r5, lr}
 800303e:	4604      	mov	r4, r0
 8003040:	460d      	mov	r5, r1
 8003042:	b085      	sub	sp, #20
        update_position();
 8003044:	f7ff ff18 	bl	8002e78 <_ZN11stepping_md15MotorController15update_positionEv>
        stepping_md::MotorParam motor_param = params.get_motor_param();
 8003048:	69e1      	ldr	r1, [r4, #28]
        speed = _speed;
 800304a:	62a5      	str	r5, [r4, #40]	; 0x28
        stepping_md::MotorParam motor_param = params.get_motor_param();
 800304c:	a801      	add	r0, sp, #4
 800304e:	f000 f827 	bl	80030a0 <_ZN11stepping_md10Parameters15get_motor_paramEv>
        pwm_tim->Instance->ARR = (uint32_t)(HAL_RCC_GetPCLK1Freq()/speed/motor_param.ppr);
 8003052:	f001 fcbb 	bl	80049cc <HAL_RCC_GetPCLK1Freq>
 8003056:	69a3      	ldr	r3, [r4, #24]
 8003058:	681d      	ldr	r5, [r3, #0]
 800305a:	f7fd f93f 	bl	80002dc <__aeabi_ui2f>
 800305e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8003060:	f7fd fa48 	bl	80004f4 <__aeabi_fdiv>
 8003064:	9902      	ldr	r1, [sp, #8]
 8003066:	f7fd fa45 	bl	80004f4 <__aeabi_fdiv>
 800306a:	f7fd fb7b 	bl	8000764 <__aeabi_f2uiz>
 800306e:	62e8      	str	r0, [r5, #44]	; 0x2c
    }
 8003070:	b005      	add	sp, #20
 8003072:	bd30      	pop	{r4, r5, pc}

08003074 <_GLOBAL__sub_I__ZN11stepping_md20MotorController_Base9instancesB5cxx11E>:
	this->_M_size = 0;
 8003074:	2200      	movs	r2, #0
	this->_M_next = this->_M_prev = this;
 8003076:	4b02      	ldr	r3, [pc, #8]	; (8003080 <_GLOBAL__sub_I__ZN11stepping_md20MotorController_Base9instancesB5cxx11E+0xc>)
 8003078:	e9c3 3300 	strd	r3, r3, [r3]
	this->_M_size = 0;
 800307c:	609a      	str	r2, [r3, #8]

    void MotorController::set_register(const Parameters& params){
        this->params = params;
    }

} // namespace stapping_md
 800307e:	4770      	bx	lr
 8003080:	2000035c 	.word	0x2000035c

08003084 <_GLOBAL__sub_D__ZN11stepping_md20MotorController_Base9instancesB5cxx11E>:
 8003084:	b538      	push	{r3, r4, r5, lr}
      __detail::_List_node_base* __cur = _M_impl._M_node._M_next;
 8003086:	4c05      	ldr	r4, [pc, #20]	; (800309c <_GLOBAL__sub_D__ZN11stepping_md20MotorController_Base9instancesB5cxx11E+0x18>)
 8003088:	6820      	ldr	r0, [r4, #0]
      while (__cur != &_M_impl._M_node)
 800308a:	42a0      	cmp	r0, r4
 800308c:	d005      	beq.n	800309a <_GLOBAL__sub_D__ZN11stepping_md20MotorController_Base9instancesB5cxx11E+0x16>
	  __cur = __tmp->_M_next;
 800308e:	6805      	ldr	r5, [r0, #0]
	::operator delete(__p
 8003090:	210c      	movs	r1, #12
 8003092:	f002 f831 	bl	80050f8 <_ZdlPvj>
 8003096:	4628      	mov	r0, r5
 8003098:	e7f7      	b.n	800308a <_GLOBAL__sub_D__ZN11stepping_md20MotorController_Base9instancesB5cxx11E+0x6>
 800309a:	bd38      	pop	{r3, r4, r5, pc}
 800309c:	2000035c 	.word	0x2000035c

080030a0 <_ZN11stepping_md10Parameters15get_motor_paramEv>:
	std::list<Parameters_Base> Parameters_Base::instances;

    //パラメータを取得する関数
	//第1引数は結果を格納する構造体オブジェクトへのポインタ
	MotorParam Parameters::get_motor_param()
    {
 80030a0:	4603      	mov	r3, r0
        return SMParam;
 80030a2:	3108      	adds	r1, #8
 80030a4:	c907      	ldmia	r1, {r0, r1, r2}
 80030a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 80030aa:	4618      	mov	r0, r3
 80030ac:	4770      	bx	lr

080030ae <_ZN11stepping_md10Parameters15set_motor_paramERKNS_10MotorParamE>:

	//パラメータを設定する関数
	//第1引数は設定内容が書かれた構造体オブジェクト
	void Parameters::set_motor_param(const MotorParam& param)
    {
        SMParam = param;
 80030ae:	f100 0308 	add.w	r3, r0, #8
 80030b2:	c907      	ldmia	r1, {r0, r1, r2}
 80030b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 80030b8:	4770      	bx	lr

080030ba <_ZN11stepping_md10Parameters7get_BIDEv>:

	//BIDを取得する関数
	uint16_t Parameters::get_BID()
    {
        return BID;
    }
 80030ba:	8880      	ldrh	r0, [r0, #4]
 80030bc:	4770      	bx	lr

080030be <_ZN11stepping_md10Parameters7set_BIDEt>:

	//BIDを設定する関数
	void Parameters::set_BID(const uint16_t bid)
    {
        BID = bid;
 80030be:	8081      	strh	r1, [r0, #4]
    }
 80030c0:	4770      	bx	lr
	...

080030c4 <_GLOBAL__sub_I__ZN11stepping_md15Parameters_Base9instancesB5cxx11E>:
 80030c4:	2200      	movs	r2, #0
	this->_M_next = this->_M_prev = this;
 80030c6:	4b02      	ldr	r3, [pc, #8]	; (80030d0 <_GLOBAL__sub_I__ZN11stepping_md15Parameters_Base9instancesB5cxx11E+0xc>)
 80030c8:	e9c3 3300 	strd	r3, r3, [r3]
	this->_M_size = 0;
 80030cc:	609a      	str	r2, [r3, #8]

}
 80030ce:	4770      	bx	lr
 80030d0:	20000368 	.word	0x20000368

080030d4 <_GLOBAL__sub_D__ZN11stepping_md15Parameters_Base9instancesB5cxx11E>:
 80030d4:	b538      	push	{r3, r4, r5, lr}
      __detail::_List_node_base* __cur = _M_impl._M_node._M_next;
 80030d6:	4c05      	ldr	r4, [pc, #20]	; (80030ec <_GLOBAL__sub_D__ZN11stepping_md15Parameters_Base9instancesB5cxx11E+0x18>)
 80030d8:	6820      	ldr	r0, [r4, #0]
      while (__cur != &_M_impl._M_node)
 80030da:	42a0      	cmp	r0, r4
 80030dc:	d005      	beq.n	80030ea <_GLOBAL__sub_D__ZN11stepping_md15Parameters_Base9instancesB5cxx11E+0x16>
	  __cur = __tmp->_M_next;
 80030de:	6805      	ldr	r5, [r0, #0]
 80030e0:	210c      	movs	r1, #12
 80030e2:	f002 f809 	bl	80050f8 <_ZdlPvj>
 80030e6:	4628      	mov	r0, r5
 80030e8:	e7f7      	b.n	80030da <_GLOBAL__sub_D__ZN11stepping_md15Parameters_Base9instancesB5cxx11E+0x6>
 80030ea:	bd38      	pop	{r3, r4, r5, pc}
 80030ec:	20000368 	.word	0x20000368

080030f0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80030f0:	b510      	push	{r4, lr}
 80030f2:	b090      	sub	sp, #64	; 0x40
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80030f4:	2214      	movs	r2, #20
 80030f6:	2100      	movs	r1, #0
 80030f8:	a808      	add	r0, sp, #32
 80030fa:	f003 f8fd 	bl	80062f8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80030fe:	2214      	movs	r2, #20
 8003100:	2100      	movs	r1, #0
 8003102:	a801      	add	r0, sp, #4
 8003104:	f003 f8f8 	bl	80062f8 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 8003108:	2301      	movs	r3, #1
 800310a:	f44f 22a0 	mov.w	r2, #327680	; 0x50000
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800310e:	2402      	movs	r4, #2
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 8003110:	e9cd 3206 	strd	r3, r2, [sp, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8003114:	930a      	str	r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8003116:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800311a:	e9cd 430d 	strd	r4, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 800311e:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003122:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8003124:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003126:	f001 f9df 	bl	80044e8 <HAL_RCC_OscConfig>
 800312a:	b108      	cbz	r0, 8003130 <SystemClock_Config+0x40>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800312c:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800312e:	e7fe      	b.n	800312e <SystemClock_Config+0x3e>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003130:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003132:	e9cd 3401 	strd	r3, r4, [sp, #4]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8003136:	f44f 6380 	mov.w	r3, #1024	; 0x400
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800313a:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800313c:	e9cd 3004 	strd	r3, r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8003140:	4621      	mov	r1, r4
 8003142:	a801      	add	r0, sp, #4
 8003144:	f001 fba6 	bl	8004894 <HAL_RCC_ClockConfig>
 8003148:	b108      	cbz	r0, 800314e <SystemClock_Config+0x5e>
 800314a:	b672      	cpsid	i
  while (1)
 800314c:	e7fe      	b.n	800314c <SystemClock_Config+0x5c>
}
 800314e:	b010      	add	sp, #64	; 0x40
 8003150:	bd10      	pop	{r4, pc}
	...

08003154 <main>:
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003154:	2610      	movs	r6, #16
{
 8003156:	b580      	push	{r7, lr}
 8003158:	b098      	sub	sp, #96	; 0x60
  HAL_Init();
 800315a:	f000 fedb 	bl	8003f14 <HAL_Init>
  SystemClock_Config();
 800315e:	f7ff ffc7 	bl	80030f0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003162:	4632      	mov	r2, r6
 8003164:	2100      	movs	r1, #0
 8003166:	a810      	add	r0, sp, #64	; 0x40
 8003168:	f003 f8c6 	bl	80062f8 <memset>
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800316c:	4baa      	ldr	r3, [pc, #680]	; (8003418 <main+0x2c4>)
  HAL_GPIO_WritePin(GPIOB, DIRE_Pin|ENAC_Pin|DIRC_Pin, GPIO_PIN_RESET);
 800316e:	f44f 41c8 	mov.w	r1, #25600	; 0x6400
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8003172:	699a      	ldr	r2, [r3, #24]
  HAL_GPIO_WritePin(GPIOB, DIRE_Pin|ENAC_Pin|DIRC_Pin, GPIO_PIN_RESET);
 8003174:	48a9      	ldr	r0, [pc, #676]	; (800341c <main+0x2c8>)
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8003176:	f042 0220 	orr.w	r2, r2, #32
 800317a:	619a      	str	r2, [r3, #24]
 800317c:	699a      	ldr	r2, [r3, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800317e:	2400      	movs	r4, #0
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8003180:	f002 0220 	and.w	r2, r2, #32
 8003184:	9200      	str	r2, [sp, #0]
 8003186:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003188:	699a      	ldr	r2, [r3, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800318a:	2502      	movs	r5, #2
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800318c:	f042 0204 	orr.w	r2, r2, #4
 8003190:	619a      	str	r2, [r3, #24]
 8003192:	699a      	ldr	r2, [r3, #24]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003194:	2701      	movs	r7, #1
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003196:	f002 0204 	and.w	r2, r2, #4
 800319a:	9201      	str	r2, [sp, #4]
 800319c:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800319e:	699a      	ldr	r2, [r3, #24]
 80031a0:	f042 0208 	orr.w	r2, r2, #8
 80031a4:	619a      	str	r2, [r3, #24]
 80031a6:	699b      	ldr	r3, [r3, #24]
  HAL_GPIO_WritePin(GPIOB, DIRE_Pin|ENAC_Pin|DIRC_Pin, GPIO_PIN_RESET);
 80031a8:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80031aa:	f003 0308 	and.w	r3, r3, #8
 80031ae:	9302      	str	r3, [sp, #8]
 80031b0:	9b02      	ldr	r3, [sp, #8]
  HAL_GPIO_WritePin(GPIOB, DIRE_Pin|ENAC_Pin|DIRC_Pin, GPIO_PIN_RESET);
 80031b2:	f001 f993 	bl	80044dc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, ENAA_Pin|DIRA_Pin|ENAE_Pin, GPIO_PIN_RESET);
 80031b6:	2200      	movs	r2, #0
 80031b8:	f44f 4118 	mov.w	r1, #38912	; 0x9800
 80031bc:	4898      	ldr	r0, [pc, #608]	; (8003420 <main+0x2cc>)
 80031be:	f001 f98d 	bl	80044dc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80031c2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(DIRE_GPIO_Port, &GPIO_InitStruct);
 80031c6:	4895      	ldr	r0, [pc, #596]	; (800341c <main+0x2c8>)
 80031c8:	a910      	add	r1, sp, #64	; 0x40
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80031ca:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80031ce:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(DIRE_GPIO_Port, &GPIO_InitStruct);
 80031d2:	f001 f8ad 	bl	8004330 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ENAC_Pin|DIRC_Pin;
 80031d6:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80031da:	4890      	ldr	r0, [pc, #576]	; (800341c <main+0x2c8>)
 80031dc:	a910      	add	r1, sp, #64	; 0x40
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80031de:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80031e2:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80031e6:	f001 f8a3 	bl	8004330 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ENAA_Pin|DIRA_Pin;
 80031ea:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80031ee:	488c      	ldr	r0, [pc, #560]	; (8003420 <main+0x2cc>)
 80031f0:	a910      	add	r1, sp, #64	; 0x40
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80031f2:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80031f6:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80031fa:	f001 f899 	bl	8004330 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = ENAE_Pin;
 80031fe:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(ENAE_GPIO_Port, &GPIO_InitStruct);
 8003202:	4887      	ldr	r0, [pc, #540]	; (8003420 <main+0x2cc>)
 8003204:	a910      	add	r1, sp, #64	; 0x40
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003206:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800320a:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(ENAE_GPIO_Port, &GPIO_InitStruct);
 800320e:	f001 f88f 	bl	8004330 <HAL_GPIO_Init>
  hcan.Instance = CAN1;
 8003212:	4884      	ldr	r0, [pc, #528]	; (8003424 <main+0x2d0>)
 8003214:	4b84      	ldr	r3, [pc, #528]	; (8003428 <main+0x2d4>)
  hcan.Init.TimeTriggeredMode = DISABLE;
 8003216:	6184      	str	r4, [r0, #24]
  hcan.Init.ReceiveFifoLocked = DISABLE;
 8003218:	8384      	strh	r4, [r0, #28]
  hcan.Init.Prescaler = 16;
 800321a:	e9c0 3600 	strd	r3, r6, [r0]
  hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 800321e:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 8003222:	e9c0 4404 	strd	r4, r4, [r0, #16]
  if (HAL_CAN_Init(&hcan) != HAL_OK)
 8003226:	f000 fe99 	bl	8003f5c <HAL_CAN_Init>
 800322a:	4605      	mov	r5, r0
 800322c:	b108      	cbz	r0, 8003232 <main+0xde>
 800322e:	b672      	cpsid	i
  while (1)
 8003230:	e7fe      	b.n	8003230 <main+0xdc>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003232:	4601      	mov	r1, r0
 8003234:	4632      	mov	r2, r6
 8003236:	a805      	add	r0, sp, #20
 8003238:	f003 f85e 	bl	80062f8 <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 800323c:	221c      	movs	r2, #28
 800323e:	4629      	mov	r1, r5
 8003240:	a809      	add	r0, sp, #36	; 0x24
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003242:	e9cd 5503 	strd	r5, r5, [sp, #12]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003246:	f003 f857 	bl	80062f8 <memset>
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800324a:	2220      	movs	r2, #32
 800324c:	4629      	mov	r1, r5
 800324e:	a810      	add	r0, sp, #64	; 0x40
 8003250:	f003 f852 	bl	80062f8 <memset>
  htim1.Init.Prescaler = 71;
 8003254:	2347      	movs	r3, #71	; 0x47
  htim1.Init.Period = 65535;
 8003256:	f64f 77ff 	movw	r7, #65535	; 0xffff
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800325a:	f04f 0880 	mov.w	r8, #128	; 0x80
  htim1.Instance = TIM1;
 800325e:	4c73      	ldr	r4, [pc, #460]	; (800342c <main+0x2d8>)
  htim1.Init.Prescaler = 71;
 8003260:	4873      	ldr	r0, [pc, #460]	; (8003430 <main+0x2dc>)
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003262:	e9c4 7503 	strd	r7, r5, [r4, #12]
  htim1.Init.Prescaler = 71;
 8003266:	e9c4 0300 	strd	r0, r3, [r4]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800326a:	4620      	mov	r0, r4
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800326c:	60a5      	str	r5, [r4, #8]
  htim1.Init.RepetitionCounter = 0;
 800326e:	6165      	str	r5, [r4, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8003270:	f8c4 8018 	str.w	r8, [r4, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8003274:	f001 fc62 	bl	8004b3c <HAL_TIM_Base_Init>
 8003278:	b108      	cbz	r0, 800327e <main+0x12a>
 800327a:	b672      	cpsid	i
  while (1)
 800327c:	e7fe      	b.n	800327c <main+0x128>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800327e:	f44f 5580 	mov.w	r5, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8003282:	4620      	mov	r0, r4
 8003284:	a905      	add	r1, sp, #20
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003286:	9505      	str	r5, [sp, #20]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8003288:	f001 fd41 	bl	8004d0e <HAL_TIM_ConfigClockSource>
 800328c:	b108      	cbz	r0, 8003292 <main+0x13e>
 800328e:	b672      	cpsid	i
  while (1)
 8003290:	e7fe      	b.n	8003290 <main+0x13c>
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8003292:	4620      	mov	r0, r4
 8003294:	f001 fc7e 	bl	8004b94 <HAL_TIM_PWM_Init>
 8003298:	b108      	cbz	r0, 800329e <main+0x14a>
 800329a:	b672      	cpsid	i
  while (1)
 800329c:	e7fe      	b.n	800329c <main+0x148>
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800329e:	e9cd 0003 	strd	r0, r0, [sp, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80032a2:	a903      	add	r1, sp, #12
 80032a4:	4620      	mov	r0, r4
 80032a6:	f001 fe63 	bl	8004f70 <HAL_TIMEx_MasterConfigSynchronization>
 80032aa:	4602      	mov	r2, r0
 80032ac:	b108      	cbz	r0, 80032b2 <main+0x15e>
 80032ae:	b672      	cpsid	i
  while (1)
 80032b0:	e7fe      	b.n	80032b0 <main+0x15c>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80032b2:	2360      	movs	r3, #96	; 0x60
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80032b4:	e9cd 000b 	strd	r0, r0, [sp, #44]	; 0x2c
  sConfigOC.Pulse = 0;
 80032b8:	e9cd 3009 	strd	r3, r0, [sp, #36]	; 0x24
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80032bc:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80032c0:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80032c2:	a909      	add	r1, sp, #36	; 0x24
 80032c4:	4620      	mov	r0, r4
 80032c6:	f001 fcbd 	bl	8004c44 <HAL_TIM_PWM_ConfigChannel>
 80032ca:	b108      	cbz	r0, 80032d0 <main+0x17c>
 80032cc:	b672      	cpsid	i
  while (1)
 80032ce:	e7fe      	b.n	80032ce <main+0x17a>
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80032d0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80032d4:	e9cd 0010 	strd	r0, r0, [sp, #64]	; 0x40
  sBreakDeadTimeConfig.DeadTime = 0;
 80032d8:	e9cd 0012 	strd	r0, r0, [sp, #72]	; 0x48
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80032dc:	9014      	str	r0, [sp, #80]	; 0x50
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80032de:	9017      	str	r0, [sp, #92]	; 0x5c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80032e0:	a910      	add	r1, sp, #64	; 0x40
 80032e2:	4620      	mov	r0, r4
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80032e4:	9315      	str	r3, [sp, #84]	; 0x54
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80032e6:	f001 fe6d 	bl	8004fc4 <HAL_TIMEx_ConfigBreakDeadTime>
 80032ea:	4681      	mov	r9, r0
 80032ec:	b108      	cbz	r0, 80032f2 <main+0x19e>
 80032ee:	b672      	cpsid	i
  while (1)
 80032f0:	e7fe      	b.n	80032f0 <main+0x19c>
  HAL_TIM_MspPostInit(&htim1);
 80032f2:	4620      	mov	r0, r4
 80032f4:	f000 f93e 	bl	8003574 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80032f8:	4632      	mov	r2, r6
 80032fa:	4649      	mov	r1, r9
 80032fc:	a809      	add	r0, sp, #36	; 0x24
 80032fe:	f002 fffb 	bl	80062f8 <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003302:	4649      	mov	r1, r9
 8003304:	221c      	movs	r2, #28
 8003306:	a810      	add	r0, sp, #64	; 0x40
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003308:	e9cd 9905 	strd	r9, r9, [sp, #20]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800330c:	f002 fff4 	bl	80062f8 <memset>
  htim2.Init.Prescaler = 31;
 8003310:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8003314:	231f      	movs	r3, #31
  htim2.Instance = TIM2;
 8003316:	4c47      	ldr	r4, [pc, #284]	; (8003434 <main+0x2e0>)
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8003318:	4620      	mov	r0, r4
  htim2.Init.Prescaler = 31;
 800331a:	e9c4 1300 	strd	r1, r3, [r4]
  htim2.Init.Period = 65535;
 800331e:	e9c4 9702 	strd	r9, r7, [r4, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003322:	f8c4 9010 	str.w	r9, [r4, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8003326:	f8c4 8018 	str.w	r8, [r4, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800332a:	f001 fc07 	bl	8004b3c <HAL_TIM_Base_Init>
 800332e:	b108      	cbz	r0, 8003334 <main+0x1e0>
 8003330:	b672      	cpsid	i
  while (1)
 8003332:	e7fe      	b.n	8003332 <main+0x1de>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8003334:	4620      	mov	r0, r4
 8003336:	a909      	add	r1, sp, #36	; 0x24
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003338:	9509      	str	r5, [sp, #36]	; 0x24
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800333a:	f001 fce8 	bl	8004d0e <HAL_TIM_ConfigClockSource>
 800333e:	b108      	cbz	r0, 8003344 <main+0x1f0>
 8003340:	b672      	cpsid	i
  while (1)
 8003342:	e7fe      	b.n	8003342 <main+0x1ee>
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8003344:	4620      	mov	r0, r4
 8003346:	f001 fc25 	bl	8004b94 <HAL_TIM_PWM_Init>
 800334a:	b108      	cbz	r0, 8003350 <main+0x1fc>
 800334c:	b672      	cpsid	i
  while (1)
 800334e:	e7fe      	b.n	800334e <main+0x1fa>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003350:	2300      	movs	r3, #0
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8003352:	4838      	ldr	r0, [pc, #224]	; (8003434 <main+0x2e0>)
 8003354:	a905      	add	r1, sp, #20
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003356:	e9cd 3305 	strd	r3, r3, [sp, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800335a:	f001 fe09 	bl	8004f70 <HAL_TIMEx_MasterConfigSynchronization>
 800335e:	4602      	mov	r2, r0
 8003360:	b108      	cbz	r0, 8003366 <main+0x212>
 8003362:	b672      	cpsid	i
  while (1)
 8003364:	e7fe      	b.n	8003364 <main+0x210>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003366:	2660      	movs	r6, #96	; 0x60
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8003368:	9012      	str	r0, [sp, #72]	; 0x48
  sConfigOC.Pulse = 0;
 800336a:	e9cd 6010 	strd	r6, r0, [sp, #64]	; 0x40
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800336e:	9014      	str	r0, [sp, #80]	; 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8003370:	a910      	add	r1, sp, #64	; 0x40
 8003372:	4830      	ldr	r0, [pc, #192]	; (8003434 <main+0x2e0>)
 8003374:	f001 fc66 	bl	8004c44 <HAL_TIM_PWM_ConfigChannel>
 8003378:	4605      	mov	r5, r0
 800337a:	b108      	cbz	r0, 8003380 <main+0x22c>
 800337c:	b672      	cpsid	i
  while (1)
 800337e:	e7fe      	b.n	800337e <main+0x22a>
  HAL_TIM_MspPostInit(&htim2);
 8003380:	482c      	ldr	r0, [pc, #176]	; (8003434 <main+0x2e0>)
 8003382:	f000 f8f7 	bl	8003574 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003386:	2210      	movs	r2, #16
 8003388:	4629      	mov	r1, r5
 800338a:	a809      	add	r0, sp, #36	; 0x24
 800338c:	f002 ffb4 	bl	80062f8 <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003390:	221c      	movs	r2, #28
 8003392:	4629      	mov	r1, r5
 8003394:	a810      	add	r0, sp, #64	; 0x40
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003396:	e9cd 5505 	strd	r5, r5, [sp, #20]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800339a:	f002 ffad 	bl	80062f8 <memset>
  htim3.Init.Prescaler = 31;
 800339e:	231f      	movs	r3, #31
  htim3.Instance = TIM3;
 80033a0:	4c25      	ldr	r4, [pc, #148]	; (8003438 <main+0x2e4>)
  htim3.Init.Prescaler = 31;
 80033a2:	4a26      	ldr	r2, [pc, #152]	; (800343c <main+0x2e8>)
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80033a4:	4620      	mov	r0, r4
  htim3.Init.Prescaler = 31;
 80033a6:	e9c4 2300 	strd	r2, r3, [r4]
  htim3.Init.Period = 65535;
 80033aa:	f64f 73ff 	movw	r3, #65535	; 0xffff
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80033ae:	e9c4 3503 	strd	r3, r5, [r4, #12]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80033b2:	2380      	movs	r3, #128	; 0x80
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80033b4:	60a5      	str	r5, [r4, #8]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80033b6:	61a3      	str	r3, [r4, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80033b8:	f001 fbc0 	bl	8004b3c <HAL_TIM_Base_Init>
 80033bc:	b108      	cbz	r0, 80033c2 <main+0x26e>
 80033be:	b672      	cpsid	i
  while (1)
 80033c0:	e7fe      	b.n	80033c0 <main+0x26c>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80033c2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80033c6:	4620      	mov	r0, r4
 80033c8:	a909      	add	r1, sp, #36	; 0x24
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80033ca:	9309      	str	r3, [sp, #36]	; 0x24
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80033cc:	f001 fc9f 	bl	8004d0e <HAL_TIM_ConfigClockSource>
 80033d0:	b108      	cbz	r0, 80033d6 <main+0x282>
 80033d2:	b672      	cpsid	i
  while (1)
 80033d4:	e7fe      	b.n	80033d4 <main+0x280>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80033d6:	4620      	mov	r0, r4
 80033d8:	f001 fbdc 	bl	8004b94 <HAL_TIM_PWM_Init>
 80033dc:	b108      	cbz	r0, 80033e2 <main+0x28e>
 80033de:	b672      	cpsid	i
  while (1)
 80033e0:	e7fe      	b.n	80033e0 <main+0x28c>
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80033e2:	e9cd 0005 	strd	r0, r0, [sp, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80033e6:	a905      	add	r1, sp, #20
 80033e8:	4620      	mov	r0, r4
 80033ea:	f001 fdc1 	bl	8004f70 <HAL_TIMEx_MasterConfigSynchronization>
 80033ee:	4602      	mov	r2, r0
 80033f0:	b108      	cbz	r0, 80033f6 <main+0x2a2>
 80033f2:	b672      	cpsid	i
  while (1)
 80033f4:	e7fe      	b.n	80033f4 <main+0x2a0>
  sConfigOC.Pulse = 0;
 80033f6:	e9cd 6010 	strd	r6, r0, [sp, #64]	; 0x40
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80033fa:	9012      	str	r0, [sp, #72]	; 0x48
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80033fc:	9014      	str	r0, [sp, #80]	; 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80033fe:	a910      	add	r1, sp, #64	; 0x40
 8003400:	4620      	mov	r0, r4
 8003402:	f001 fc1f 	bl	8004c44 <HAL_TIM_PWM_ConfigChannel>
 8003406:	b108      	cbz	r0, 800340c <main+0x2b8>
 8003408:	b672      	cpsid	i
  while (1)
 800340a:	e7fe      	b.n	800340a <main+0x2b6>
  HAL_TIM_MspPostInit(&htim3);
 800340c:	4620      	mov	r0, r4
 800340e:	f000 f8b1 	bl	8003574 <HAL_TIM_MspPostInit>
  wrapper_cpp();
 8003412:	f000 fbc1 	bl	8003b98 <wrapper_cpp>
  while (1)
 8003416:	e7fe      	b.n	8003416 <main+0x2c2>
 8003418:	40021000 	.word	0x40021000
 800341c:	40010c00 	.word	0x40010c00
 8003420:	40010800 	.word	0x40010800
 8003424:	20000374 	.word	0x20000374
 8003428:	40006400 	.word	0x40006400
 800342c:	2000039c 	.word	0x2000039c
 8003430:	40012c00 	.word	0x40012c00
 8003434:	200003e4 	.word	0x200003e4
 8003438:	2000042c 	.word	0x2000042c
 800343c:	40000400 	.word	0x40000400

08003440 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8003440:	4b0e      	ldr	r3, [pc, #56]	; (800347c <HAL_MspInit+0x3c>)
{
 8003442:	b082      	sub	sp, #8
  __HAL_RCC_AFIO_CLK_ENABLE();
 8003444:	699a      	ldr	r2, [r3, #24]
 8003446:	f042 0201 	orr.w	r2, r2, #1
 800344a:	619a      	str	r2, [r3, #24]
 800344c:	699a      	ldr	r2, [r3, #24]
 800344e:	f002 0201 	and.w	r2, r2, #1
 8003452:	9200      	str	r2, [sp, #0]
 8003454:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8003456:	69da      	ldr	r2, [r3, #28]
 8003458:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800345c:	61da      	str	r2, [r3, #28]
 800345e:	69db      	ldr	r3, [r3, #28]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8003460:	4a07      	ldr	r2, [pc, #28]	; (8003480 <HAL_MspInit+0x40>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8003462:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003466:	9301      	str	r3, [sp, #4]
 8003468:	9b01      	ldr	r3, [sp, #4]
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800346a:	6853      	ldr	r3, [r2, #4]
 800346c:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8003470:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003474:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003476:	b002      	add	sp, #8
 8003478:	4770      	bx	lr
 800347a:	bf00      	nop
 800347c:	40021000 	.word	0x40021000
 8003480:	40010000 	.word	0x40010000

08003484 <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 8003484:	b510      	push	{r4, lr}
 8003486:	4604      	mov	r4, r0
 8003488:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800348a:	2210      	movs	r2, #16
 800348c:	2100      	movs	r1, #0
 800348e:	a802      	add	r0, sp, #8
 8003490:	f002 ff32 	bl	80062f8 <memset>
  if(hcan->Instance==CAN1)
 8003494:	6822      	ldr	r2, [r4, #0]
 8003496:	4b1a      	ldr	r3, [pc, #104]	; (8003500 <HAL_CAN_MspInit+0x7c>)
 8003498:	429a      	cmp	r2, r3
 800349a:	d12e      	bne.n	80034fa <HAL_CAN_MspInit+0x76>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CAN1_CLK_ENABLE();
 800349c:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 80034a0:	69da      	ldr	r2, [r3, #28]
    PB9     ------> CAN_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034a2:	4818      	ldr	r0, [pc, #96]	; (8003504 <HAL_CAN_MspInit+0x80>)
    __HAL_RCC_CAN1_CLK_ENABLE();
 80034a4:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 80034a8:	61da      	str	r2, [r3, #28]
 80034aa:	69da      	ldr	r2, [r3, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034ac:	a902      	add	r1, sp, #8
    __HAL_RCC_CAN1_CLK_ENABLE();
 80034ae:	f002 7200 	and.w	r2, r2, #33554432	; 0x2000000
 80034b2:	9200      	str	r2, [sp, #0]
 80034b4:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80034b6:	699a      	ldr	r2, [r3, #24]
 80034b8:	f042 0208 	orr.w	r2, r2, #8
 80034bc:	619a      	str	r2, [r3, #24]
 80034be:	699b      	ldr	r3, [r3, #24]
 80034c0:	f003 0308 	and.w	r3, r3, #8
 80034c4:	9301      	str	r3, [sp, #4]
 80034c6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80034c8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80034cc:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034ce:	f000 ff2f 	bl	8004330 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034d2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80034d6:	2302      	movs	r3, #2
 80034d8:	e9cd 2302 	strd	r2, r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80034dc:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034de:	4809      	ldr	r0, [pc, #36]	; (8003504 <HAL_CAN_MspInit+0x80>)
 80034e0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80034e2:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034e4:	f000 ff24 	bl	8004330 <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_CAN1_2();
 80034e8:	4a07      	ldr	r2, [pc, #28]	; (8003508 <HAL_CAN_MspInit+0x84>)
 80034ea:	6853      	ldr	r3, [r2, #4]
 80034ec:	f423 43c0 	bic.w	r3, r3, #24576	; 0x6000
 80034f0:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 80034f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80034f8:	6053      	str	r3, [r2, #4]
  /* USER CODE BEGIN CAN1_MspInit 1 */

  /* USER CODE END CAN1_MspInit 1 */
  }

}
 80034fa:	b006      	add	sp, #24
 80034fc:	bd10      	pop	{r4, pc}
 80034fe:	bf00      	nop
 8003500:	40006400 	.word	0x40006400
 8003504:	40010c00 	.word	0x40010c00
 8003508:	40010000 	.word	0x40010000

0800350c <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 800350c:	6803      	ldr	r3, [r0, #0]
 800350e:	4a16      	ldr	r2, [pc, #88]	; (8003568 <HAL_TIM_Base_MspInit+0x5c>)
{
 8003510:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM1)
 8003512:	4293      	cmp	r3, r2
 8003514:	d10b      	bne.n	800352e <HAL_TIM_Base_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8003516:	4b15      	ldr	r3, [pc, #84]	; (800356c <HAL_TIM_Base_MspInit+0x60>)
 8003518:	699a      	ldr	r2, [r3, #24]
 800351a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800351e:	619a      	str	r2, [r3, #24]
 8003520:	699b      	ldr	r3, [r3, #24]
 8003522:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003526:	9301      	str	r3, [sp, #4]
 8003528:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 800352a:	b004      	add	sp, #16
 800352c:	4770      	bx	lr
  else if(htim_base->Instance==TIM2)
 800352e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003532:	d10b      	bne.n	800354c <HAL_TIM_Base_MspInit+0x40>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8003534:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8003538:	69da      	ldr	r2, [r3, #28]
 800353a:	f042 0201 	orr.w	r2, r2, #1
 800353e:	61da      	str	r2, [r3, #28]
 8003540:	69db      	ldr	r3, [r3, #28]
 8003542:	f003 0301 	and.w	r3, r3, #1
 8003546:	9302      	str	r3, [sp, #8]
 8003548:	9b02      	ldr	r3, [sp, #8]
 800354a:	e7ee      	b.n	800352a <HAL_TIM_Base_MspInit+0x1e>
  else if(htim_base->Instance==TIM3)
 800354c:	4a08      	ldr	r2, [pc, #32]	; (8003570 <HAL_TIM_Base_MspInit+0x64>)
 800354e:	4293      	cmp	r3, r2
 8003550:	d1eb      	bne.n	800352a <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8003552:	4b06      	ldr	r3, [pc, #24]	; (800356c <HAL_TIM_Base_MspInit+0x60>)
 8003554:	69da      	ldr	r2, [r3, #28]
 8003556:	f042 0202 	orr.w	r2, r2, #2
 800355a:	61da      	str	r2, [r3, #28]
 800355c:	69db      	ldr	r3, [r3, #28]
 800355e:	f003 0302 	and.w	r3, r3, #2
 8003562:	9303      	str	r3, [sp, #12]
 8003564:	9b03      	ldr	r3, [sp, #12]
}
 8003566:	e7e0      	b.n	800352a <HAL_TIM_Base_MspInit+0x1e>
 8003568:	40012c00 	.word	0x40012c00
 800356c:	40021000 	.word	0x40021000
 8003570:	40000400 	.word	0x40000400

08003574 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8003574:	b530      	push	{r4, r5, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003576:	2510      	movs	r5, #16
{
 8003578:	4604      	mov	r4, r0
 800357a:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800357c:	462a      	mov	r2, r5
 800357e:	2100      	movs	r1, #0
 8003580:	eb0d 0005 	add.w	r0, sp, r5
 8003584:	f002 feb8 	bl	80062f8 <memset>
  if(htim->Instance==TIM1)
 8003588:	6823      	ldr	r3, [r4, #0]
 800358a:	4a27      	ldr	r2, [pc, #156]	; (8003628 <HAL_TIM_MspPostInit+0xb4>)
 800358c:	4293      	cmp	r3, r2
 800358e:	d116      	bne.n	80035be <HAL_TIM_MspPostInit+0x4a>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003590:	4b26      	ldr	r3, [pc, #152]	; (800362c <HAL_TIM_MspPostInit+0xb8>)
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003592:	f44f 7180 	mov.w	r1, #256	; 0x100
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003596:	699a      	ldr	r2, [r3, #24]
 8003598:	f042 0204 	orr.w	r2, r2, #4
 800359c:	619a      	str	r2, [r3, #24]
 800359e:	699b      	ldr	r3, [r3, #24]
 80035a0:	f003 0304 	and.w	r3, r3, #4
 80035a4:	9301      	str	r3, [sp, #4]
 80035a6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80035a8:	2302      	movs	r3, #2
 80035aa:	e9cd 1304 	strd	r1, r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80035ae:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80035b0:	eb0d 0105 	add.w	r1, sp, r5
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80035b4:	481e      	ldr	r0, [pc, #120]	; (8003630 <HAL_TIM_MspPostInit+0xbc>)
 80035b6:	f000 febb 	bl	8004330 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 80035ba:	b009      	add	sp, #36	; 0x24
 80035bc:	bd30      	pop	{r4, r5, pc}
  else if(htim->Instance==TIM2)
 80035be:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80035c2:	d111      	bne.n	80035e8 <HAL_TIM_MspPostInit+0x74>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80035c4:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80035c8:	699a      	ldr	r2, [r3, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80035ca:	a904      	add	r1, sp, #16
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80035cc:	f042 0204 	orr.w	r2, r2, #4
 80035d0:	619a      	str	r2, [r3, #24]
 80035d2:	699b      	ldr	r3, [r3, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80035d4:	2201      	movs	r2, #1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80035d6:	f003 0304 	and.w	r3, r3, #4
 80035da:	9302      	str	r3, [sp, #8]
 80035dc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80035de:	2302      	movs	r3, #2
 80035e0:	e9cd 2304 	strd	r2, r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80035e4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80035e6:	e7e5      	b.n	80035b4 <HAL_TIM_MspPostInit+0x40>
  else if(htim->Instance==TIM3)
 80035e8:	4a12      	ldr	r2, [pc, #72]	; (8003634 <HAL_TIM_MspPostInit+0xc0>)
 80035ea:	4293      	cmp	r3, r2
 80035ec:	d1e5      	bne.n	80035ba <HAL_TIM_MspPostInit+0x46>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80035ee:	4b0f      	ldr	r3, [pc, #60]	; (800362c <HAL_TIM_MspPostInit+0xb8>)
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80035f0:	4811      	ldr	r0, [pc, #68]	; (8003638 <HAL_TIM_MspPostInit+0xc4>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80035f2:	6999      	ldr	r1, [r3, #24]
 80035f4:	f041 0108 	orr.w	r1, r1, #8
 80035f8:	6199      	str	r1, [r3, #24]
 80035fa:	699b      	ldr	r3, [r3, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80035fc:	a904      	add	r1, sp, #16
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80035fe:	f003 0308 	and.w	r3, r3, #8
 8003602:	9303      	str	r3, [sp, #12]
 8003604:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003606:	2302      	movs	r3, #2
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8003608:	9504      	str	r5, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800360a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800360c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800360e:	f000 fe8f 	bl	8004330 <HAL_GPIO_Init>
    __HAL_AFIO_REMAP_TIM3_PARTIAL();
 8003612:	4a0a      	ldr	r2, [pc, #40]	; (800363c <HAL_TIM_MspPostInit+0xc8>)
 8003614:	6853      	ldr	r3, [r2, #4]
 8003616:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800361a:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 800361e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8003622:	6053      	str	r3, [r2, #4]
}
 8003624:	e7c9      	b.n	80035ba <HAL_TIM_MspPostInit+0x46>
 8003626:	bf00      	nop
 8003628:	40012c00 	.word	0x40012c00
 800362c:	40021000 	.word	0x40021000
 8003630:	40010800 	.word	0x40010800
 8003634:	40000400 	.word	0x40000400
 8003638:	40010c00 	.word	0x40010c00
 800363c:	40010000 	.word	0x40010000

08003640 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8003640:	e7fe      	b.n	8003640 <NMI_Handler>

08003642 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003642:	e7fe      	b.n	8003642 <HardFault_Handler>

08003644 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003644:	e7fe      	b.n	8003644 <MemManage_Handler>

08003646 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003646:	e7fe      	b.n	8003646 <BusFault_Handler>

08003648 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003648:	e7fe      	b.n	8003648 <UsageFault_Handler>

0800364a <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800364a:	4770      	bx	lr

0800364c <DebugMon_Handler>:
 800364c:	4770      	bx	lr

0800364e <PendSV_Handler>:
 800364e:	4770      	bx	lr

08003650 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003650:	f000 bc72 	b.w	8003f38 <HAL_IncTick>

08003654 <_getpid>:
 8003654:	2001      	movs	r0, #1
 8003656:	4770      	bx	lr

08003658 <_kill>:
 8003658:	b508      	push	{r3, lr}
 800365a:	f002 fdeb 	bl	8006234 <__errno>
 800365e:	2316      	movs	r3, #22
 8003660:	6003      	str	r3, [r0, #0]
 8003662:	f04f 30ff 	mov.w	r0, #4294967295
 8003666:	bd08      	pop	{r3, pc}

08003668 <_exit>:
 8003668:	b508      	push	{r3, lr}
 800366a:	f002 fde3 	bl	8006234 <__errno>
 800366e:	2316      	movs	r3, #22
 8003670:	6003      	str	r3, [r0, #0]
 8003672:	e7fe      	b.n	8003672 <_exit+0xa>

08003674 <_sbrk>:
 8003674:	4a0b      	ldr	r2, [pc, #44]	; (80036a4 <_sbrk+0x30>)
 8003676:	4603      	mov	r3, r0
 8003678:	6811      	ldr	r1, [r2, #0]
 800367a:	b510      	push	{r4, lr}
 800367c:	b909      	cbnz	r1, 8003682 <_sbrk+0xe>
 800367e:	490a      	ldr	r1, [pc, #40]	; (80036a8 <_sbrk+0x34>)
 8003680:	6011      	str	r1, [r2, #0]
 8003682:	6810      	ldr	r0, [r2, #0]
 8003684:	4909      	ldr	r1, [pc, #36]	; (80036ac <_sbrk+0x38>)
 8003686:	4c0a      	ldr	r4, [pc, #40]	; (80036b0 <_sbrk+0x3c>)
 8003688:	4403      	add	r3, r0
 800368a:	1b09      	subs	r1, r1, r4
 800368c:	428b      	cmp	r3, r1
 800368e:	d906      	bls.n	800369e <_sbrk+0x2a>
 8003690:	f002 fdd0 	bl	8006234 <__errno>
 8003694:	230c      	movs	r3, #12
 8003696:	6003      	str	r3, [r0, #0]
 8003698:	f04f 30ff 	mov.w	r0, #4294967295
 800369c:	bd10      	pop	{r4, pc}
 800369e:	6013      	str	r3, [r2, #0]
 80036a0:	e7fc      	b.n	800369c <_sbrk+0x28>
 80036a2:	bf00      	nop
 80036a4:	20000474 	.word	0x20000474
 80036a8:	200004c0 	.word	0x200004c0
 80036ac:	20002800 	.word	0x20002800
 80036b0:	00000400 	.word	0x00000400

080036b4 <SystemInit>:
 80036b4:	4770      	bx	lr

080036b6 <_ZN11stepping_md10Parameters18emergency_callbackEv>:

			//Emergencyボタンが押されたときに呼ばれるコールバック関数
			//emergency_callbackはパラメーターのうちmodeをMD_MODE::DEFAULTにする関数
			void emergency_callback(void) override
			{
				SMParam.mode = MD_MODE::DEFAULT;
 80036b6:	2300      	movs	r3, #0
 80036b8:	6083      	str	r3, [r0, #8]
			}
 80036ba:	4770      	bx	lr

080036bc <_ZN11stepping_md15Parameters_Base18emergency_callbackEv>:
			virtual void emergency_callback(void){throw std::logic_error("emergency_callback is not implemented");}
 80036bc:	b510      	push	{r4, lr}
 80036be:	2008      	movs	r0, #8
 80036c0:	f001 fd76 	bl	80051b0 <__cxa_allocate_exception>
 80036c4:	4906      	ldr	r1, [pc, #24]	; (80036e0 <_ZN11stepping_md15Parameters_Base18emergency_callbackEv+0x24>)
 80036c6:	4604      	mov	r4, r0
 80036c8:	f002 fca4 	bl	8006014 <_ZNSt11logic_errorC1EPKc>
 80036cc:	4620      	mov	r0, r4
 80036ce:	4a05      	ldr	r2, [pc, #20]	; (80036e4 <_ZN11stepping_md15Parameters_Base18emergency_callbackEv+0x28>)
 80036d0:	4905      	ldr	r1, [pc, #20]	; (80036e8 <_ZN11stepping_md15Parameters_Base18emergency_callbackEv+0x2c>)
 80036d2:	f002 f951 	bl	8005978 <__cxa_throw>
 80036d6:	4620      	mov	r0, r4
 80036d8:	f001 fd80 	bl	80051dc <__cxa_free_exception>
 80036dc:	f001 fda2 	bl	8005224 <__cxa_end_cleanup>
 80036e0:	080068e6 	.word	0x080068e6
 80036e4:	08005f85 	.word	0x08005f85
 80036e8:	08006bc4 	.word	0x08006bc4

080036ec <_ZSt13move_backwardIPhS0_ET0_T_S2_S1_.isra.0>:
   *  that the start of the output range may overlap [first,last).
  */
  template<typename _BI1, typename _BI2>
    _GLIBCXX20_CONSTEXPR
    inline _BI2
    move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 80036ec:	4613      	mov	r3, r2
	  if (_Num)
 80036ee:	1a0a      	subs	r2, r1, r0
 80036f0:	d003      	beq.n	80036fa <_ZSt13move_backwardIPhS0_ET0_T_S2_S1_.isra.0+0xe>
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 80036f2:	4601      	mov	r1, r0
 80036f4:	1a98      	subs	r0, r3, r2
 80036f6:	f002 bde5 	b.w	80062c4 <memmove>
      __glibcxx_requires_can_decrement_range(__first, __last, __result);

      return std::__copy_move_backward_a<true>(std::__miter_base(__first),
					       std::__miter_base(__last),
					       __result);
    }
 80036fa:	4770      	bx	lr

080036fc <_ZN19CanControllersEntryD1Ev>:

constexpr int A = 0;
constexpr int C = 1;
constexpr int E = 2;

struct CanControllersEntry final{
 80036fc:	b510      	push	{r4, lr}
 80036fe:	4604      	mov	r4, r0
	};

	template<typename T>
	class CanController : public CanController_Base{
 8003700:	4b09      	ldr	r3, [pc, #36]	; (8003728 <_ZN19CanControllersEntryD1Ev+0x2c>)
    class function<_Res(_ArgTypes...)>
 8003702:	3048      	adds	r0, #72	; 0x48
 8003704:	f840 3c08 	str.w	r3, [r0, #-8]
 8003708:	f7ff f922 	bl	8002950 <_ZNSt14_Function_baseD1Ev>
 800370c:	4b07      	ldr	r3, [pc, #28]	; (800372c <_ZN19CanControllersEntryD1Ev+0x30>)
 800370e:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8003712:	6223      	str	r3, [r4, #32]
 8003714:	f7ff f91c 	bl	8002950 <_ZNSt14_Function_baseD1Ev>
 8003718:	4620      	mov	r0, r4
 800371a:	4b05      	ldr	r3, [pc, #20]	; (8003730 <_ZN19CanControllersEntryD1Ev+0x34>)
 800371c:	f840 3b08 	str.w	r3, [r0], #8
 8003720:	f7ff f916 	bl	8002950 <_ZNSt14_Function_baseD1Ev>
 8003724:	4620      	mov	r0, r4
 8003726:	bd10      	pop	{r4, pc}
 8003728:	08006840 	.word	0x08006840
 800372c:	0800684c 	.word	0x0800684c
 8003730:	08006858 	.word	0x08006858

08003734 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_>:

  /// This is a helper function for the sort routine.
  template<typename _RandomAccessIterator, typename _Compare>
    _GLIBCXX20_CONSTEXPR
    void
    __insertion_sort(_RandomAccessIterator __first,
 8003734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003736:	460e      	mov	r6, r1
 8003738:	a902      	add	r1, sp, #8
		     _RandomAccessIterator __last, _Compare __comp)
    {
      if (__first == __last) return;
 800373a:	42b0      	cmp	r0, r6
    __insertion_sort(_RandomAccessIterator __first,
 800373c:	4604      	mov	r4, r0
 800373e:	e901 000c 	stmdb	r1, {r2, r3}
      if (__first == __last) return;
 8003742:	d01e      	beq.n	8003782 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x4e>

      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 8003744:	1c41      	adds	r1, r0, #1
 8003746:	42b1      	cmp	r1, r6
 8003748:	d01b      	beq.n	8003782 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x4e>
    { return static_cast<_Up&&>(__t); }

  template<typename _Res, typename _Fn, typename... _Args>
    constexpr _Res
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800374a:	460d      	mov	r5, r1
	{
	  if (__comp(__i, __first))
 800374c:	7823      	ldrb	r3, [r4, #0]
 800374e:	f815 7b01 	ldrb.w	r7, [r5], #1
 8003752:	f003 0303 	and.w	r3, r3, #3
 8003756:	f007 0203 	and.w	r2, r7, #3
 800375a:	429a      	cmp	r2, r3
 800375c:	d206      	bcs.n	800376c <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x38>
	    {
	      typename iterator_traits<_RandomAccessIterator>::value_type
		__val = _GLIBCXX_MOVE(*__i);
	      _GLIBCXX_MOVE_BACKWARD3(__first, __i, __i + 1);
 800375e:	462a      	mov	r2, r5
 8003760:	4620      	mov	r0, r4
 8003762:	f7ff ffc3 	bl	80036ec <_ZSt13move_backwardIPhS0_ET0_T_S2_S1_.isra.0>
	      *__first = _GLIBCXX_MOVE(__val);
 8003766:	7027      	strb	r7, [r4, #0]
      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 8003768:	4629      	mov	r1, r5
 800376a:	e7ec      	b.n	8003746 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x12>
 800376c:	f811 3c01 	ldrb.w	r3, [r1, #-1]
      while (__comp(__val, __next))
 8003770:	f003 0003 	and.w	r0, r3, #3
 8003774:	4282      	cmp	r2, r0
 8003776:	d202      	bcs.n	800377e <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x4a>
	  *__last = _GLIBCXX_MOVE(*__next);
 8003778:	f801 3901 	strb.w	r3, [r1], #-1
      while (__comp(__val, __next))
 800377c:	e7f6      	b.n	800376c <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x38>
      *__last = _GLIBCXX_MOVE(__val);
 800377e:	700f      	strb	r7, [r1, #0]
    }
 8003780:	e7f2      	b.n	8003768 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_+0x34>
	    }
	  else
	    std::__unguarded_linear_insert(__i,
				__gnu_cxx::__ops::__val_comp_iter(__comp));
	}
    }
 8003782:	b003      	add	sp, #12
 8003784:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003786 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_>:

  template<typename _RandomAccessIterator, typename _Distance,
	   typename _Tp, typename _Compare>
    _GLIBCXX20_CONSTEXPR
    void
    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,
 8003786:	b5f0      	push	{r4, r5, r6, r7, lr}
		  _Distance __len, _Tp __value, _Compare __comp)
    {
      const _Distance __topIndex = __holeIndex;
      _Distance __secondChild = __holeIndex;
      while (__secondChild < (__len - 1) / 2)
 8003788:	1e54      	subs	r4, r2, #1
 800378a:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 800378e:	1065      	asrs	r5, r4, #1
 8003790:	460c      	mov	r4, r1
 8003792:	42a5      	cmp	r5, r4
 8003794:	dd13      	ble.n	80037be <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x38>
	{
	  __secondChild = 2 * (__secondChild + 1);
 8003796:	1c67      	adds	r7, r4, #1
 8003798:	eb00 0c47 	add.w	ip, r0, r7, lsl #1
 800379c:	007e      	lsls	r6, r7, #1
	  if (__comp(__first + __secondChild,
 800379e:	f81c cc01 	ldrb.w	ip, [ip, #-1]
 80037a2:	f810 7017 	ldrb.w	r7, [r0, r7, lsl #1]
 80037a6:	f00c 0c03 	and.w	ip, ip, #3
 80037aa:	f007 0703 	and.w	r7, r7, #3
 80037ae:	45bc      	cmp	ip, r7
		     __first + (__secondChild - 1)))
	    __secondChild--;
 80037b0:	bf88      	it	hi
 80037b2:	f106 36ff 	addhi.w	r6, r6, #4294967295
	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
 80037b6:	5d87      	ldrb	r7, [r0, r6]
 80037b8:	5507      	strb	r7, [r0, r4]
	  __holeIndex = __secondChild;
 80037ba:	4634      	mov	r4, r6
      while (__secondChild < (__len - 1) / 2)
 80037bc:	e7e9      	b.n	8003792 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0xc>
	}
      if ((__len & 1) == 0 && __secondChild == (__len - 2) / 2)
 80037be:	07d5      	lsls	r5, r2, #31
 80037c0:	d40d      	bmi.n	80037de <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x58>
 80037c2:	3a02      	subs	r2, #2
 80037c4:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80037c8:	ebb4 0f62 	cmp.w	r4, r2, asr #1
 80037cc:	d107      	bne.n	80037de <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x58>
	{
	  __secondChild = 2 * (__secondChild + 1);
 80037ce:	1c62      	adds	r2, r4, #1
 80037d0:	0055      	lsls	r5, r2, #1
	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
 80037d2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80037d6:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 80037da:	5502      	strb	r2, [r0, r4]
						     + (__secondChild - 1)));
	  __holeIndex = __secondChild - 1;
 80037dc:	1e6c      	subs	r4, r5, #1
      _Distance __parent = (__holeIndex - 1) / 2;
 80037de:	1e62      	subs	r2, r4, #1
 80037e0:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80037e4:	1052      	asrs	r2, r2, #1
      while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 80037e6:	f003 0603 	and.w	r6, r3, #3
 80037ea:	42a1      	cmp	r1, r4
	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __parent));
 80037ec:	eb00 0504 	add.w	r5, r0, r4
      while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 80037f0:	da0b      	bge.n	800380a <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x84>
 80037f2:	5c84      	ldrb	r4, [r0, r2]
 80037f4:	f004 0703 	and.w	r7, r4, #3
 80037f8:	42b7      	cmp	r7, r6
 80037fa:	d206      	bcs.n	800380a <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x84>
	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __parent));
 80037fc:	702c      	strb	r4, [r5, #0]
	  __parent = (__holeIndex - 1) / 2;
 80037fe:	1e54      	subs	r4, r2, #1
 8003800:	eb04 75d4 	add.w	r5, r4, r4, lsr #31
	  __holeIndex = __parent;
 8003804:	4614      	mov	r4, r2
	  __parent = (__holeIndex - 1) / 2;
 8003806:	106a      	asrs	r2, r5, #1
      while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 8003808:	e7ef      	b.n	80037ea <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_+0x64>
      *(__first + __holeIndex) = _GLIBCXX_MOVE(__value);
 800380a:	702b      	strb	r3, [r5, #0]
	}
      __decltype(__gnu_cxx::__ops::__iter_comp_val(_GLIBCXX_MOVE(__comp)))
	__cmp(_GLIBCXX_MOVE(__comp));
      std::__push_heap(__first, __holeIndex, __topIndex,
		       _GLIBCXX_MOVE(__value), __cmp);
    }
 800380c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800380e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_>:

  /// This is a helper function for the sort routine.
  template<typename _RandomAccessIterator, typename _Size, typename _Compare>
    _GLIBCXX20_CONSTEXPR
    void
    __introsort_loop(_RandomAccessIterator __first,
 800380e:	b082      	sub	sp, #8
 8003810:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003814:	4604      	mov	r4, r0
 8003816:	460d      	mov	r5, r1
 8003818:	4617      	mov	r7, r2
 800381a:	b087      	sub	sp, #28
 800381c:	930f      	str	r3, [sp, #60]	; 0x3c
      std::__move_median_to_first(__first, __first + 1, __mid, __last - 1,
 800381e:	f100 0801 	add.w	r8, r0, #1
		     _RandomAccessIterator __last,
		     _Size __depth_limit, _Compare __comp)
    {
      while (__last - __first > int(_S_threshold))
 8003822:	1b2e      	subs	r6, r5, r4
 8003824:	2e10      	cmp	r6, #16
 8003826:	dd29      	ble.n	800387c <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x6e>
	{
	  if (__depth_limit == 0)
 8003828:	bb6f      	cbnz	r7, 8003886 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x78>
 800382a:	e9dd 010f 	ldrd	r0, r1, [sp, #60]	; 0x3c
 800382e:	f10d 0808 	add.w	r8, sp, #8
 8003832:	f10d 0910 	add.w	r9, sp, #16
 8003836:	e888 0003 	stmia.w	r8, {r0, r1}
    __partial_sort(_RandomAccessIterator __first,
 800383a:	e889 0003 	stmia.w	r9, {r0, r1}

      if (__last - __first < 2)
	return;

      const _DistanceType __len = __last - __first;
      _DistanceType __parent = (__len - 2) / 2;
 800383e:	1eb7      	subs	r7, r6, #2
 8003840:	107f      	asrs	r7, r7, #1
      while (true)
	{
	  _ValueType __value = _GLIBCXX_MOVE(*(__first + __parent));
	  std::__adjust_heap(__first, __parent, __len, _GLIBCXX_MOVE(__value),
 8003842:	e899 0003 	ldmia.w	r9, {r0, r1}
 8003846:	4632      	mov	r2, r6
 8003848:	e88d 0003 	stmia.w	sp, {r0, r1}
 800384c:	5de3      	ldrb	r3, [r4, r7]
 800384e:	4639      	mov	r1, r7
 8003850:	4620      	mov	r0, r4
 8003852:	f7ff ff98 	bl	8003786 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_>
			     __comp);
	  if (__parent == 0)
 8003856:	b10f      	cbz	r7, 800385c <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x4e>
	    return;
	  __parent--;
 8003858:	3f01      	subs	r7, #1
      while (true)
 800385a:	e7f2      	b.n	8003842 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x34>
      _ValueType __value = _GLIBCXX_MOVE(*__result);
 800385c:	f815 3d01 	ldrb.w	r3, [r5, #-1]!
      *__result = _GLIBCXX_MOVE(*__first);
 8003860:	7822      	ldrb	r2, [r4, #0]
			 _DistanceType(__last - __first),
 8003862:	1b2e      	subs	r6, r5, r4
      std::__adjust_heap(__first, _DistanceType(0),
 8003864:	e898 0003 	ldmia.w	r8, {r0, r1}
      *__result = _GLIBCXX_MOVE(*__first);
 8003868:	702a      	strb	r2, [r5, #0]
      std::__adjust_heap(__first, _DistanceType(0),
 800386a:	e88d 0003 	stmia.w	sp, {r0, r1}
 800386e:	4632      	mov	r2, r6
 8003870:	2100      	movs	r1, #0
 8003872:	4620      	mov	r0, r4
 8003874:	f7ff ff87 	bl	8003786 <_ZSt13__adjust_heapIPhihN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SO_SO_T1_T2_>
    _GLIBCXX20_CONSTEXPR
    void
    __sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
		_Compare& __comp)
    {
      while (__last - __first > 1)
 8003878:	2e01      	cmp	r6, #1
 800387a:	dcef      	bgt.n	800385c <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x4e>
	  _RandomAccessIterator __cut =
	    std::__unguarded_partition_pivot(__first, __last, __comp);
	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
	  __last = __cut;
	}
    }
 800387c:	b007      	add	sp, #28
 800387e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003882:	b002      	add	sp, #8
 8003884:	4770      	bx	lr
      _RandomAccessIterator __mid = __first + (__last - __first) / 2;
 8003886:	1076      	asrs	r6, r6, #1
 8003888:	f894 e001 	ldrb.w	lr, [r4, #1]
 800388c:	5da1      	ldrb	r1, [r4, r6]
 800388e:	f815 0c01 	ldrb.w	r0, [r5, #-1]
 8003892:	f00e 0903 	and.w	r9, lr, #3
 8003896:	f001 0c03 	and.w	ip, r1, #3
      if (__comp(__a, __b))
 800389a:	45e1      	cmp	r9, ip
    {
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
 800389c:	7823      	ldrb	r3, [r4, #0]
	  --__depth_limit;
 800389e:	f107 37ff 	add.w	r7, r7, #4294967295
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80038a2:	f000 0203 	and.w	r2, r0, #3
      if (__comp(__a, __b))
 80038a6:	d229      	bcs.n	80038fc <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xee>
	  if (__comp(__b, __c))
 80038a8:	4594      	cmp	ip, r2
 80038aa:	d221      	bcs.n	80038f0 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xe2>
      __a = _GLIBCXX_MOVE(__b);
 80038ac:	7021      	strb	r1, [r4, #0]
      __b = _GLIBCXX_MOVE(__tmp);
 80038ae:	55a3      	strb	r3, [r4, r6]
 80038b0:	4642      	mov	r2, r8
      while (__last - __first > int(_S_threshold))
 80038b2:	462b      	mov	r3, r5
 80038b4:	4616      	mov	r6, r2
 80038b6:	7821      	ldrb	r1, [r4, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80038b8:	f812 cb01 	ldrb.w	ip, [r2], #1
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80038bc:	f001 0103 	and.w	r1, r1, #3
	  while (__comp(__first, __pivot))
 80038c0:	f00c 0003 	and.w	r0, ip, #3
 80038c4:	4288      	cmp	r0, r1
 80038c6:	d3f5      	bcc.n	80038b4 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xa6>
	  --__last;
 80038c8:	1e58      	subs	r0, r3, #1
 80038ca:	4603      	mov	r3, r0
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80038cc:	f810 e901 	ldrb.w	lr, [r0], #-1
	  while (__comp(__pivot, __last))
 80038d0:	f00e 0903 	and.w	r9, lr, #3
 80038d4:	4549      	cmp	r1, r9
 80038d6:	d3f8      	bcc.n	80038ca <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xbc>
	  if (!(__first < __last))
 80038d8:	429e      	cmp	r6, r3
 80038da:	d318      	bcc.n	800390e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x100>
	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
 80038dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80038de:	4629      	mov	r1, r5
 80038e0:	9300      	str	r3, [sp, #0]
 80038e2:	463a      	mov	r2, r7
 80038e4:	4630      	mov	r0, r6
 80038e6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80038e8:	f7ff ff91 	bl	800380e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_>
      while (__last - __first > int(_S_threshold))
 80038ec:	4635      	mov	r5, r6
 80038ee:	e798      	b.n	8003822 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x14>
	  else if (__comp(__a, __c))
 80038f0:	4591      	cmp	r9, r2
 80038f2:	d205      	bcs.n	8003900 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xf2>
      __a = _GLIBCXX_MOVE(__b);
 80038f4:	7020      	strb	r0, [r4, #0]
      __b = _GLIBCXX_MOVE(__tmp);
 80038f6:	f805 3c01 	strb.w	r3, [r5, #-1]
    }
 80038fa:	e7d9      	b.n	80038b0 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xa2>
      else if (__comp(__a, __c))
 80038fc:	4591      	cmp	r9, r2
 80038fe:	d203      	bcs.n	8003908 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xfa>
      __a = _GLIBCXX_MOVE(__b);
 8003900:	f884 e000 	strb.w	lr, [r4]
      __b = _GLIBCXX_MOVE(__tmp);
 8003904:	7063      	strb	r3, [r4, #1]
 8003906:	e7d3      	b.n	80038b0 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xa2>
      else if (__comp(__b, __c))
 8003908:	4594      	cmp	ip, r2
 800390a:	d2cf      	bcs.n	80038ac <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0x9e>
 800390c:	e7f2      	b.n	80038f4 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xe6>
      __a = _GLIBCXX_MOVE(__b);
 800390e:	f802 ec01 	strb.w	lr, [r2, #-1]
      __b = _GLIBCXX_MOVE(__tmp);
 8003912:	f883 c000 	strb.w	ip, [r3]
	  while (__comp(__first, __pivot))
 8003916:	e7cd      	b.n	80038b4 <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_+0xa6>

08003918 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0EEJLNS0_10FilterModeE0ELS7_0ELS7_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE>:
		{
			return (can2_start <= index) << (u8)5 | (filter_arg.fifo == FifoIndex::fifo1) << (u8)4 | (filter_width == FilterWidth::bit16) << (u8)3 | (filter_mode == FilterMode::mask) << (u8)2 | index;
		}

		template<FilterWidth ... filter_widthes, FilterMode ... filter_modes>
		void set_filter_match_index(const u8 can2_start, ConfigFilterArg<filter_widthes, filter_modes>& ... filter_args) noexcept
 8003918:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800391c:	461d      	mov	r5, r3
 800391e:	688b      	ldr	r3, [r1, #8]
			return (can2_start <= index) << (u8)5 | (filter_arg.fifo == FifoIndex::fifo1) << (u8)4 | (filter_width == FilterWidth::bit16) << (u8)3 | (filter_mode == FilterMode::mask) << (u8)2 | index;
 8003920:	2800      	cmp	r0, #0
		void set_filter_match_index(const u8 can2_start, ConfigFilterArg<filter_widthes, filter_modes>& ... filter_args) noexcept
 8003922:	460f      	mov	r7, r1
			return (can2_start <= index) << (u8)5 | (filter_arg.fifo == FifoIndex::fifo1) << (u8)4 | (filter_width == FilterWidth::bit16) << (u8)3 | (filter_mode == FilterMode::mask) << (u8)2 | index;
 8003924:	bf0c      	ite	eq
 8003926:	2120      	moveq	r1, #32
 8003928:	2100      	movne	r1, #0
 800392a:	2b01      	cmp	r3, #1
 800392c:	bf0c      	ite	eq
 800392e:	2310      	moveq	r3, #16
 8003930:	2300      	movne	r3, #0
 8003932:	4319      	orrs	r1, r3
 8003934:	6893      	ldr	r3, [r2, #8]
 8003936:	2802      	cmp	r0, #2
		void set_filter_match_index(const u8 can2_start, ConfigFilterArg<filter_widthes, filter_modes>& ... filter_args) noexcept
 8003938:	4616      	mov	r6, r2
			return (can2_start <= index) << (u8)5 | (filter_arg.fifo == FifoIndex::fifo1) << (u8)4 | (filter_width == FilterWidth::bit16) << (u8)3 | (filter_mode == FilterMode::mask) << (u8)2 | index;
 800393a:	bf34      	ite	cc
 800393c:	2220      	movcc	r2, #32
 800393e:	2200      	movcs	r2, #0
 8003940:	2b01      	cmp	r3, #1
 8003942:	bf0c      	ite	eq
 8003944:	2310      	moveq	r3, #16
 8003946:	2300      	movne	r3, #0
 8003948:	68ac      	ldr	r4, [r5, #8]
 800394a:	2803      	cmp	r0, #3
 800394c:	ea42 0203 	orr.w	r2, r2, r3
 8003950:	bf34      	ite	cc
 8003952:	2320      	movcc	r3, #32
 8003954:	2300      	movcs	r3, #0
 8003956:	2c01      	cmp	r4, #1
 8003958:	bf0c      	ite	eq
 800395a:	2010      	moveq	r0, #16
 800395c:	2000      	movne	r0, #0
 800395e:	4303      	orrs	r3, r0
		void set_filter_match_index(const u8 can2_start, ConfigFilterArg<filter_widthes, filter_modes>& ... filter_args) noexcept
 8003960:	b08c      	sub	sp, #48	; 0x30
			return (can2_start <= index) << (u8)5 | (filter_arg.fifo == FifoIndex::fifo1) << (u8)4 | (filter_width == FilterWidth::bit16) << (u8)3 | (filter_mode == FilterMode::mask) << (u8)2 | index;
 8003962:	f043 0306 	orr.w	r3, r3, #6
		{
			std::array<u8, sizeof...(filter_widthes)> priorities;

			[can2_start, &priorities, &filter_args...]<u8 ... indices>(std::integer_sequence<u8, indices ...>) noexcept
			{
				priorities = {convert_to_priority(indices, can2_start, filter_args) ...};
 8003966:	f88d 3016 	strb.w	r3, [sp, #22]
 800396a:	f04f 0300 	mov.w	r3, #0
			return (can2_start <= index) << (u8)5 | (filter_arg.fifo == FifoIndex::fifo1) << (u8)4 | (filter_width == FilterWidth::bit16) << (u8)3 | (filter_mode == FilterMode::mask) << (u8)2 | index;
 800396e:	f041 0104 	orr.w	r1, r1, #4
 8003972:	f042 0205 	orr.w	r2, r2, #5
    {
      _Compare _M_comp;

      explicit _GLIBCXX14_CONSTEXPR
      _Iter_comp_iter(_Compare __comp)
	: _M_comp(_GLIBCXX_MOVE(__comp))
 8003976:	f10d 0828 	add.w	r8, sp, #40	; 0x28
				priorities = {convert_to_priority(indices, can2_start, filter_args) ...};
 800397a:	f88d 1014 	strb.w	r1, [sp, #20]
 800397e:	f88d 2015 	strb.w	r2, [sp, #21]
 8003982:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8003986:	f88d 3020 	strb.w	r3, [sp, #32]
	    typename iterator_traits<_RandomAccessIterator>::value_type,
	    typename iterator_traits<_RandomAccessIterator>::value_type>)
      __glibcxx_requires_valid_range(__first, __last);
      __glibcxx_requires_irreflexive_pred(__first, __last, __comp);

      std::__sort(__first, __last, __gnu_cxx::__ops::__iter_comp_iter(__comp));
 800398a:	4642      	mov	r2, r8
 800398c:	ab08      	add	r3, sp, #32
 800398e:	f10d 0117 	add.w	r1, sp, #23
 8003992:	a805      	add	r0, sp, #20
 8003994:	9307      	str	r3, [sp, #28]
 8003996:	f8cd 8018 	str.w	r8, [sp, #24]
 800399a:	f7fd ffa3 	bl	80018e4 <_ZSt6__sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessESt8identityEEDaRT_RT0_EUlOS9_OSB_E_EEEvS9_S9_SB_>
	     typename _Comp = ranges::less, typename _Proj = identity>
      requires sortable<iterator_t<_Range>, _Comp, _Proj>
      constexpr borrowed_iterator_t<_Range>
      operator()(_Range&& __r, _Comp __comp = {}, _Proj __proj = {}) const
      {
	return (*this)(ranges::begin(__r), ranges::end(__r),
 800399e:	2300      	movs	r3, #0
 80039a0:	2000      	movs	r0, #0
 80039a2:	aa05      	add	r2, sp, #20

			for(u32 can_fifo = 0b00; can_fifo <= 0b11; ++can_fifo)
			{
				for(u32 i = 0; auto& priority : priorities)
				{
					priority |= (i << 6);
 80039a4:	7814      	ldrb	r4, [r2, #0]
 80039a6:	4304      	orrs	r4, r0
 80039a8:	f802 4b01 	strb.w	r4, [r2], #1
					++i;

					if(!((priority & 0b11 << 4) ^ can_fifo << 4))
 80039ac:	f004 0430 	and.w	r4, r4, #48	; 0x30
 80039b0:	429c      	cmp	r4, r3
 80039b2:	d003      	beq.n	80039bc <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0EEJLNS0_10FilterModeE0ELS7_0ELS7_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0xa4>
				for(u32 i = 0; auto& priority : priorities)
 80039b4:	3040      	adds	r0, #64	; 0x40
 80039b6:	b2c0      	uxtb	r0, r0
 80039b8:	28c0      	cmp	r0, #192	; 0xc0
 80039ba:	d1f3      	bne.n	80039a4 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0EEJLNS0_10FilterModeE0ELS7_0ELS7_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x8c>
			for(u32 can_fifo = 0b00; can_fifo <= 0b11; ++can_fifo)
 80039bc:	3310      	adds	r3, #16
 80039be:	2b40      	cmp	r3, #64	; 0x40
 80039c0:	d1ee      	bne.n	80039a0 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0EEJLNS0_10FilterModeE0ELS7_0ELS7_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x88>
      _GLIBCXX17_CONSTEXPR const_iterator
      begin() const noexcept
      { return const_iterator(data()); }

      _GLIBCXX17_CONSTEXPR iterator
      end() noexcept
 80039c2:	f04f 0300 	mov.w	r3, #0
	  std::__introsort_loop(__first, __last,
 80039c6:	ac03      	add	r4, sp, #12
 80039c8:	f88d 3010 	strb.w	r3, [sp, #16]
 80039cc:	f88d 300c 	strb.w	r3, [sp, #12]
 80039d0:	f10d 0117 	add.w	r1, sp, #23
 80039d4:	ab04      	add	r3, sp, #16
 80039d6:	a805      	add	r0, sp, #20
 80039d8:	2202      	movs	r2, #2
 80039da:	9400      	str	r4, [sp, #0]
 80039dc:	9308      	str	r3, [sp, #32]
 80039de:	9409      	str	r4, [sp, #36]	; 0x24
 80039e0:	f7ff ff15 	bl	800380e <_ZSt16__introsort_loopIPhiN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_T1_>
 80039e4:	ab04      	add	r3, sp, #16
 80039e6:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
	std::__insertion_sort(__first, __last, __comp);
 80039ea:	f10d 0117 	add.w	r1, sp, #23
 80039ee:	e898 000c 	ldmia.w	r8, {r2, r3}
 80039f2:	a805      	add	r0, sp, #20
 80039f4:	f7ff fe9e 	bl	8003734 <_ZSt16__insertion_sortIPhN9__gnu_cxx5__ops15_Iter_comp_iterIZNSt6ranges8__detail16__make_comp_projINS4_4lessEZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS9_11FilterWidthE0ELSF_0ELSF_0EEJLNS9_10FilterModeE0ELSG_0ELSG_0EEEEvhDpRNSB_15ConfigFilterArgIXT_EXT0_EEEEUlT_E0_EEDaRSL_RT0_EUlOSL_OSO_E_EEEvSL_SL_SO_>

			std::ranges::sort(priorities, {}, [](const auto priority){return priority & 0b11;});

			[&priorities, &filter_args...]<u8 ... indices>(std::integer_sequence<u8, indices ...>) noexcept
			{
				((filter_args.filter_match_index = priorities[indices] >> 6), ...);
 80039f8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80039fc:	099b      	lsrs	r3, r3, #6
 80039fe:	60fb      	str	r3, [r7, #12]
 8003a00:	f89d 3015 	ldrb.w	r3, [sp, #21]
 8003a04:	099b      	lsrs	r3, r3, #6
 8003a06:	60f3      	str	r3, [r6, #12]
 8003a08:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8003a0c:	099b      	lsrs	r3, r3, #6
 8003a0e:	60eb      	str	r3, [r5, #12]
			}(std::make_integer_sequence<u8, sizeof...(filter_widthes)>());
		}
 8003a10:	b00c      	add	sp, #48	; 0x30
 8003a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08003a18 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE>:
			clear_bit(bxcan->FA1R, bit_position);
		}
	}

	template<FilterWidth ... filter_widthes, FilterMode ... filter_modes>
	void config_filter_bank(const u8 can2_start, ConfigFilterArg<filter_widthes, filter_modes>& ... filter_args)
 8003a18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8003a1c:	4680      	mov	r8, r0
		bit &= ~reg;
	}

	inline constexpr void set_bit(volatile auto& bit, const auto reg)
	{
		bit = bit | reg;
 8003a1e:	4c5c      	ldr	r4, [pc, #368]	; (8003b90 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x178>)
 8003a20:	460f      	mov	r7, r1
 8003a22:	4616      	mov	r6, r2
 8003a24:	461d      	mov	r5, r3
	requires (sizeof...(filter_args) <= Config::filter_bank_total_size)
	{
		// assign FMI.
		Implement::FilterManagerImp::set_filter_match_index(can2_start, filter_args ...);
 8003a26:	f7ff ff77 	bl	8003918 <_ZN6CRSLib3Can6RM000813FilterManager9Implement16FilterManagerImp22set_filter_match_indexIJLNS0_11FilterWidthE0ELS6_0ELS6_0EEJLNS0_10FilterModeE0ELS7_0ELS7_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE>
 8003a2a:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 8003a2e:	f043 0301 	orr.w	r3, r3, #1
 8003a32:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
		bit = bit & ~reg;
 8003a36:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 8003a3a:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8003a3e:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
		bit = bit | reg;
 8003a42:	f8d4 3600 	ldr.w	r3, [r4, #1536]	; 0x600
 8003a46:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
 8003a4a:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
		std::memcpy(tmp_buffer, &filter_arg.filter, 8);
 8003a4e:	466b      	mov	r3, sp
 8003a50:	6838      	ldr	r0, [r7, #0]
 8003a52:	6879      	ldr	r1, [r7, #4]
 8003a54:	c303      	stmia	r3!, {r0, r1}
		bxcan->sFilterRegister[index].FR1 = tmp_buffer[0];
 8003a56:	4b4f      	ldr	r3, [pc, #316]	; (8003b94 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x17c>)
 8003a58:	f8c3 0240 	str.w	r0, [r3, #576]	; 0x240
		bxcan->sFilterRegister[index].FR2 = tmp_buffer[1];
 8003a5c:	9a01      	ldr	r2, [sp, #4]
 8003a5e:	f8c3 2244 	str.w	r2, [r3, #580]	; 0x244
 8003a62:	f8d4 360c 	ldr.w	r3, [r4, #1548]	; 0x60c
 8003a66:	f043 0301 	orr.w	r3, r3, #1
 8003a6a:	f8c4 360c 	str.w	r3, [r4, #1548]	; 0x60c
		bit = bit & ~reg;
 8003a6e:	f8d4 3604 	ldr.w	r3, [r4, #1540]	; 0x604
 8003a72:	f023 0301 	bic.w	r3, r3, #1
 8003a76:	f8c4 3604 	str.w	r3, [r4, #1540]	; 0x604
		if(filter_arg.fifo == FifoIndex::fifo0)
 8003a7a:	68bb      	ldr	r3, [r7, #8]
 8003a7c:	2b00      	cmp	r3, #0
 8003a7e:	d168      	bne.n	8003b52 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x13a>
 8003a80:	f8d4 3614 	ldr.w	r3, [r4, #1556]	; 0x614
 8003a84:	f023 0301 	bic.w	r3, r3, #1
		bit = bit | reg;
 8003a88:	f8c4 3614 	str.w	r3, [r4, #1556]	; 0x614
		if(filter_arg.activate)
 8003a8c:	7c3b      	ldrb	r3, [r7, #16]
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d064      	beq.n	8003b5c <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x144>
 8003a92:	f8d4 361c 	ldr.w	r3, [r4, #1564]	; 0x61c
 8003a96:	f043 0301 	orr.w	r3, r3, #1
		bit = bit & ~reg;
 8003a9a:	f8c4 361c 	str.w	r3, [r4, #1564]	; 0x61c
		std::memcpy(tmp_buffer, &filter_arg.filter, 8);
 8003a9e:	466b      	mov	r3, sp
 8003aa0:	6871      	ldr	r1, [r6, #4]
 8003aa2:	6830      	ldr	r0, [r6, #0]
 8003aa4:	c303      	stmia	r3!, {r0, r1}
		bxcan->sFilterRegister[index].FR1 = tmp_buffer[0];
 8003aa6:	4b3b      	ldr	r3, [pc, #236]	; (8003b94 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x17c>)
		bit = bit | reg;
 8003aa8:	4939      	ldr	r1, [pc, #228]	; (8003b90 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x178>)
 8003aaa:	f8c3 0248 	str.w	r0, [r3, #584]	; 0x248
		bxcan->sFilterRegister[index].FR2 = tmp_buffer[1];
 8003aae:	9a01      	ldr	r2, [sp, #4]
 8003ab0:	f8c3 224c 	str.w	r2, [r3, #588]	; 0x24c
 8003ab4:	f8d1 360c 	ldr.w	r3, [r1, #1548]	; 0x60c
 8003ab8:	f043 0302 	orr.w	r3, r3, #2
 8003abc:	f8c1 360c 	str.w	r3, [r1, #1548]	; 0x60c
		bit = bit & ~reg;
 8003ac0:	f8d1 3604 	ldr.w	r3, [r1, #1540]	; 0x604
 8003ac4:	f023 0302 	bic.w	r3, r3, #2
 8003ac8:	f8c1 3604 	str.w	r3, [r1, #1540]	; 0x604
		if(filter_arg.fifo == FifoIndex::fifo0)
 8003acc:	68b3      	ldr	r3, [r6, #8]
 8003ace:	2b00      	cmp	r3, #0
 8003ad0:	d149      	bne.n	8003b66 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x14e>
 8003ad2:	f8d1 3614 	ldr.w	r3, [r1, #1556]	; 0x614
 8003ad6:	f023 0302 	bic.w	r3, r3, #2
		bit = bit | reg;
 8003ada:	f8c1 3614 	str.w	r3, [r1, #1556]	; 0x614
		if(filter_arg.activate)
 8003ade:	7c33      	ldrb	r3, [r6, #16]
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	d045      	beq.n	8003b70 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x158>
 8003ae4:	f8d1 361c 	ldr.w	r3, [r1, #1564]	; 0x61c
 8003ae8:	f043 0302 	orr.w	r3, r3, #2
		std::memcpy(tmp_buffer, &filter_arg.filter, 8);
 8003aec:	466a      	mov	r2, sp
		bit = bit & ~reg;
 8003aee:	f8c1 361c 	str.w	r3, [r1, #1564]	; 0x61c
 8003af2:	6828      	ldr	r0, [r5, #0]
 8003af4:	6869      	ldr	r1, [r5, #4]
		bxcan->sFilterRegister[index].FR1 = tmp_buffer[0];
 8003af6:	4b27      	ldr	r3, [pc, #156]	; (8003b94 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x17c>)
		std::memcpy(tmp_buffer, &filter_arg.filter, 8);
 8003af8:	c203      	stmia	r2!, {r0, r1}
		bxcan->sFilterRegister[index].FR1 = tmp_buffer[0];
 8003afa:	f8c3 0250 	str.w	r0, [r3, #592]	; 0x250
		bxcan->sFilterRegister[index].FR2 = tmp_buffer[1];
 8003afe:	9a01      	ldr	r2, [sp, #4]
 8003b00:	f8c3 2254 	str.w	r2, [r3, #596]	; 0x254
		bit = bit | reg;
 8003b04:	4a22      	ldr	r2, [pc, #136]	; (8003b90 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x178>)
 8003b06:	f8d2 360c 	ldr.w	r3, [r2, #1548]	; 0x60c
 8003b0a:	f043 0304 	orr.w	r3, r3, #4
 8003b0e:	f8c2 360c 	str.w	r3, [r2, #1548]	; 0x60c
		bit = bit & ~reg;
 8003b12:	f8d2 3604 	ldr.w	r3, [r2, #1540]	; 0x604
 8003b16:	f023 0304 	bic.w	r3, r3, #4
 8003b1a:	f8c2 3604 	str.w	r3, [r2, #1540]	; 0x604
		if(filter_arg.fifo == FifoIndex::fifo0)
 8003b1e:	68ab      	ldr	r3, [r5, #8]
 8003b20:	bb5b      	cbnz	r3, 8003b7a <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x162>
 8003b22:	f8d2 3614 	ldr.w	r3, [r2, #1556]	; 0x614
 8003b26:	f023 0304 	bic.w	r3, r3, #4
		bit = bit | reg;
 8003b2a:	f8c2 3614 	str.w	r3, [r2, #1556]	; 0x614
		if(filter_arg.activate)
 8003b2e:	7c2b      	ldrb	r3, [r5, #16]
 8003b30:	b343      	cbz	r3, 8003b84 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x16c>
 8003b32:	f8d2 361c 	ldr.w	r3, [r2, #1564]	; 0x61c
 8003b36:	f043 0304 	orr.w	r3, r3, #4
		bit = bit & ~reg;
 8003b3a:	f8c2 361c 	str.w	r3, [r2, #1564]	; 0x61c
 8003b3e:	4a14      	ldr	r2, [pc, #80]	; (8003b90 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x178>)
 8003b40:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 8003b44:	f023 0301 	bic.w	r3, r3, #1
 8003b48:	f8c2 3600 	str.w	r3, [r2, #1536]	; 0x600
			(per_filter_arg<indices>(bxcan1, filter_args), ...);
		}(std::make_integer_sequence<u8, sizeof...(filter_widthes)>(), filter_args ...);

		// clear FINIT
		clear_bit(bxcan1->FMR, CAN_FMR_FINIT);
	}
 8003b4c:	b002      	add	sp, #8
 8003b4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		bit = bit | reg;
 8003b52:	f8d4 3614 	ldr.w	r3, [r4, #1556]	; 0x614
 8003b56:	f043 0301 	orr.w	r3, r3, #1
 8003b5a:	e795      	b.n	8003a88 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x70>
		bit = bit & ~reg;
 8003b5c:	f8d4 361c 	ldr.w	r3, [r4, #1564]	; 0x61c
 8003b60:	f023 0301 	bic.w	r3, r3, #1
 8003b64:	e799      	b.n	8003a9a <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x82>
		bit = bit | reg;
 8003b66:	f8d1 3614 	ldr.w	r3, [r1, #1556]	; 0x614
 8003b6a:	f043 0302 	orr.w	r3, r3, #2
 8003b6e:	e7b4      	b.n	8003ada <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0xc2>
		bit = bit & ~reg;
 8003b70:	f8d1 361c 	ldr.w	r3, [r1, #1564]	; 0x61c
 8003b74:	f023 0302 	bic.w	r3, r3, #2
 8003b78:	e7b8      	b.n	8003aec <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0xd4>
		bit = bit | reg;
 8003b7a:	f8d2 3614 	ldr.w	r3, [r2, #1556]	; 0x614
 8003b7e:	f043 0304 	orr.w	r3, r3, #4
 8003b82:	e7d2      	b.n	8003b2a <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x112>
		bit = bit & ~reg;
 8003b84:	f8d2 361c 	ldr.w	r3, [r2, #1564]	; 0x61c
 8003b88:	f023 0304 	bic.w	r3, r3, #4
 8003b8c:	e7d5      	b.n	8003b3a <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE+0x122>
 8003b8e:	bf00      	nop
 8003b90:	40006000 	.word	0x40006000
 8003b94:	40006400 	.word	0x40006400

08003b98 <wrapper_cpp>:
			fifo_index{fifo_index}
 8003b98:	2200      	movs	r2, #0
	CanController<uint32_t> ack;
};


//メイン関数
void wrapper_cpp(void){
 8003b9a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	{
		CAN_HandleTypeDef * hcan;

	public:
		Pillarbox(CAN_HandleTypeDef *const hcan) noexcept:
			hcan{hcan}
 8003b9e:	4ba7      	ldr	r3, [pc, #668]	; (8003e3c <wrapper_cpp+0x2a4>)
 8003ba0:	f5ad 7d20 	sub.w	sp, sp, #640	; 0x280
 8003ba4:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8003ba8:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8003bac:	2301      	movs	r3, #1
 8003bae:	2403      	movs	r4, #3
			explicit Parameters_Base(){instances.push_back(*this);}
 8003bb0:	4fa3      	ldr	r7, [pc, #652]	; (8003e40 <wrapper_cpp+0x2a8>)
	 __tmp->_M_hook(__position._M_node);
 8003bb2:	4ea4      	ldr	r6, [pc, #656]	; (8003e44 <wrapper_cpp+0x2ac>)
			explicit Parameters(){}
 8003bb4:	f8df 8290 	ldr.w	r8, [pc, #656]	; 8003e48 <wrapper_cpp+0x2b0>
 8003bb8:	9312      	str	r3, [sp, #72]	; 0x48
	//各種ハンドラ定義
	CRSLib::Can::RM0008::CanManager can_mgr(&hcan);
	constexpr float error_threshold = 2.0f * std::numbers::pi / 72.0f; //5°の誤差
	Parameters parameters[3];
 8003bba:	ad22      	add	r5, sp, #136	; 0x88
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8003bbc:	200c      	movs	r0, #12
			explicit Parameters_Base(){instances.push_back(*this);}
 8003bbe:	602f      	str	r7, [r5, #0]
 8003bc0:	f001 fef4 	bl	80059ac <_Znwj>
 8003bc4:	499f      	ldr	r1, [pc, #636]	; (8003e44 <wrapper_cpp+0x2ac>)
	class Parameters_Base{
 8003bc6:	6087      	str	r7, [r0, #8]
 8003bc8:	f002 f9d2 	bl	8005f70 <_ZNSt8__detail15_List_node_base7_M_hookEPS0_>
      void _M_inc_size(size_t __n) { _M_impl._M_node._M_size += __n; }
 8003bcc:	68b3      	ldr	r3, [r6, #8]
 8003bce:	3c01      	subs	r4, #1
 8003bd0:	f103 0301 	add.w	r3, r3, #1
 8003bd4:	60b3      	str	r3, [r6, #8]
			explicit Parameters(){}
 8003bd6:	f845 8b14 	str.w	r8, [r5], #20
 8003bda:	d1ef      	bne.n	8003bbc <wrapper_cpp+0x24>
	MotorController motors[] = {
			MotorController(ENAA_Pin, ENAA_GPIO_Port, DIRA_Pin, DIRA_GPIO_Port, error_threshold, &htim1, parameters[A]),
			MotorController(ENAC_Pin, ENAC_GPIO_Port, DIRC_Pin, DIRC_GPIO_Port, error_threshold, &htim2, parameters[C]),
			MotorController(ENAE_Pin, ENAE_GPIO_Port, DIRE_Pin, DIRE_GPIO_Port, error_threshold, &htim3, parameters[E])
	};
 8003bdc:	ab22      	add	r3, sp, #136	; 0x88
 8003bde:	4f9b      	ldr	r7, [pc, #620]	; (8003e4c <wrapper_cpp+0x2b4>)
 8003be0:	f8df 926c 	ldr.w	r9, [pc, #620]	; 8003e50 <wrapper_cpp+0x2b8>
 8003be4:	9303      	str	r3, [sp, #12]
 8003be6:	4b9b      	ldr	r3, [pc, #620]	; (8003e54 <wrapper_cpp+0x2bc>)
 8003be8:	463a      	mov	r2, r7
 8003bea:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003bee:	9302      	str	r3, [sp, #8]
 8003bf0:	f8cd 9004 	str.w	r9, [sp, #4]
 8003bf4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003bf8:	9700      	str	r7, [sp, #0]
 8003bfa:	a831      	add	r0, sp, #196	; 0xc4
 8003bfc:	f7ff f9de 	bl	8002fbc <_ZN11stepping_md15MotorControllerC1EtP12GPIO_TypeDeftS2_fP17TIM_HandleTypeDefRNS_10ParametersE>
 8003c00:	f8df 8254 	ldr.w	r8, [pc, #596]	; 8003e58 <wrapper_cpp+0x2c0>
 8003c04:	4b95      	ldr	r3, [pc, #596]	; (8003e5c <wrapper_cpp+0x2c4>)
 8003c06:	ae27      	add	r6, sp, #156	; 0x9c
 8003c08:	4642      	mov	r2, r8
 8003c0a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8003c0e:	9302      	str	r3, [sp, #8]
 8003c10:	f8cd 8000 	str.w	r8, [sp]
 8003c14:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003c18:	9603      	str	r6, [sp, #12]
 8003c1a:	f8cd 9004 	str.w	r9, [sp, #4]
 8003c1e:	a83e      	add	r0, sp, #248	; 0xf8
 8003c20:	f7ff f9cc 	bl	8002fbc <_ZN11stepping_md15MotorControllerC1EtP12GPIO_TypeDeftS2_fP17TIM_HandleTypeDefRNS_10ParametersE>
 8003c24:	4b8e      	ldr	r3, [pc, #568]	; (8003e60 <wrapper_cpp+0x2c8>)
 8003c26:	ad2c      	add	r5, sp, #176	; 0xb0
 8003c28:	463a      	mov	r2, r7
 8003c2a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003c2e:	9302      	str	r3, [sp, #8]
 8003c30:	f8cd 8000 	str.w	r8, [sp]
 8003c34:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003c38:	9503      	str	r5, [sp, #12]
 8003c3a:	f8cd 9004 	str.w	r9, [sp, #4]
 8003c3e:	a84b      	add	r0, sp, #300	; 0x12c
	CanControllersEntry cancontrollers[] = {
			CanControllersEntry{.cmd = CanController<uint8_t>(can_mgr, parameters[A], 0), .target = CanController<float>(can_mgr, parameters[A], 1), .ack = CanController<uint32_t>(can_mgr, parameters[A], 3)},
			CanControllersEntry{.cmd = CanController<uint8_t>(can_mgr, parameters[C], 0), .target = CanController<float>(can_mgr, parameters[C], 1), .ack = CanController<uint32_t>(can_mgr, parameters[C], 3)},
			CanControllersEntry{.cmd = CanController<uint8_t>(can_mgr, parameters[E], 0), .target = CanController<float>(can_mgr, parameters[E], 1), .ack = CanController<uint32_t>(can_mgr, parameters[E], 3)}
	};
 8003c40:	f50d 78b0 	add.w	r8, sp, #352	; 0x160
	};
 8003c44:	f7ff f9ba 	bl	8002fbc <_ZN11stepping_md15MotorControllerC1EtP12GPIO_TypeDeftS2_fP17TIM_HandleTypeDefRNS_10ParametersE>
	};
 8003c48:	4623      	mov	r3, r4
 8003c4a:	4640      	mov	r0, r8
 8003c4c:	aa22      	add	r2, sp, #136	; 0x88
 8003c4e:	a90e      	add	r1, sp, #56	; 0x38
 8003c50:	f7fe feec 	bl	8002a2c <_ZN11stepping_md13CanControllerIhEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>
 8003c54:	e00d      	b.n	8003c72 <wrapper_cpp+0xda>
 8003c56:	2002      	movs	r0, #2
 8003c58:	2460      	movs	r4, #96	; 0x60
 8003c5a:	f1c0 0002 	rsb	r0, r0, #2
 8003c5e:	fb04 8400 	mla	r4, r4, r0, r8
 8003c62:	4544      	cmp	r4, r8
 8003c64:	f000 80df 	beq.w	8003e26 <wrapper_cpp+0x28e>
 8003c68:	3c60      	subs	r4, #96	; 0x60
 8003c6a:	4620      	mov	r0, r4
 8003c6c:	f7ff fd46 	bl	80036fc <_ZN19CanControllersEntryD1Ev>
 8003c70:	e7f7      	b.n	8003c62 <wrapper_cpp+0xca>
 8003c72:	2301      	movs	r3, #1
 8003c74:	aa22      	add	r2, sp, #136	; 0x88
 8003c76:	a90e      	add	r1, sp, #56	; 0x38
 8003c78:	a860      	add	r0, sp, #384	; 0x180
 8003c7a:	f7fe fec5 	bl	8002a08 <_ZN11stepping_md13CanControllerIfEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>
 8003c7e:	e000      	b.n	8003c82 <wrapper_cpp+0xea>
 8003c80:	e7e9      	b.n	8003c56 <wrapper_cpp+0xbe>
 8003c82:	2303      	movs	r3, #3
 8003c84:	aa22      	add	r2, sp, #136	; 0x88
 8003c86:	a90e      	add	r1, sp, #56	; 0x38
 8003c88:	a868      	add	r0, sp, #416	; 0x1a0
 8003c8a:	f7fe feab 	bl	80029e4 <_ZN11stepping_md13CanControllerImEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>
 8003c8e:	e000      	b.n	8003c92 <wrapper_cpp+0xfa>
 8003c90:	e7e1      	b.n	8003c56 <wrapper_cpp+0xbe>
 8003c92:	2300      	movs	r3, #0
 8003c94:	4632      	mov	r2, r6
 8003c96:	a90e      	add	r1, sp, #56	; 0x38
 8003c98:	a870      	add	r0, sp, #448	; 0x1c0
 8003c9a:	f7fe fec7 	bl	8002a2c <_ZN11stepping_md13CanControllerIhEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>
 8003c9e:	e001      	b.n	8003ca4 <wrapper_cpp+0x10c>
 8003ca0:	2001      	movs	r0, #1
 8003ca2:	e7d9      	b.n	8003c58 <wrapper_cpp+0xc0>
 8003ca4:	2301      	movs	r3, #1
 8003ca6:	4632      	mov	r2, r6
 8003ca8:	a90e      	add	r1, sp, #56	; 0x38
 8003caa:	a878      	add	r0, sp, #480	; 0x1e0
 8003cac:	f7fe feac 	bl	8002a08 <_ZN11stepping_md13CanControllerIfEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>
 8003cb0:	e000      	b.n	8003cb4 <wrapper_cpp+0x11c>
 8003cb2:	e7f5      	b.n	8003ca0 <wrapper_cpp+0x108>
 8003cb4:	2303      	movs	r3, #3
 8003cb6:	4632      	mov	r2, r6
 8003cb8:	a90e      	add	r1, sp, #56	; 0x38
 8003cba:	a880      	add	r0, sp, #512	; 0x200
 8003cbc:	f7fe fe92 	bl	80029e4 <_ZN11stepping_md13CanControllerImEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>
 8003cc0:	e000      	b.n	8003cc4 <wrapper_cpp+0x12c>
 8003cc2:	e7ed      	b.n	8003ca0 <wrapper_cpp+0x108>
 8003cc4:	2300      	movs	r3, #0
 8003cc6:	462a      	mov	r2, r5
 8003cc8:	a90e      	add	r1, sp, #56	; 0x38
 8003cca:	a888      	add	r0, sp, #544	; 0x220
 8003ccc:	f7fe feae 	bl	8002a2c <_ZN11stepping_md13CanControllerIhEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>
 8003cd0:	e001      	b.n	8003cd6 <wrapper_cpp+0x13e>
 8003cd2:	2000      	movs	r0, #0
 8003cd4:	e7c0      	b.n	8003c58 <wrapper_cpp+0xc0>
 8003cd6:	2301      	movs	r3, #1
 8003cd8:	462a      	mov	r2, r5
 8003cda:	a90e      	add	r1, sp, #56	; 0x38
 8003cdc:	a890      	add	r0, sp, #576	; 0x240
 8003cde:	f7fe fe93 	bl	8002a08 <_ZN11stepping_md13CanControllerIfEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>
 8003ce2:	2303      	movs	r3, #3
 8003ce4:	462a      	mov	r2, r5
 8003ce6:	a90e      	add	r1, sp, #56	; 0x38
 8003ce8:	a898      	add	r0, sp, #608	; 0x260
 8003cea:	f7fe fe7b 	bl	80029e4 <_ZN11stepping_md13CanControllerImEC1ERN6CRSLib3Can6RM000810CanManagerERNS_10ParametersEm>
 8003cee:	e000      	b.n	8003cf2 <wrapper_cpp+0x15a>
 8003cf0:	e7ef      	b.n	8003cd2 <wrapper_cpp+0x13a>
	//ver1.0ではフラッシュから読みだす
	constexpr uint16_t bida = 0x300;
	constexpr uint16_t two_bit_ignore_mask = ~0x11;
	constexpr float ppr = 200;
	constexpr float rpm = 120;
	parameters[A].set_BID(bida);
 8003cf2:	f44f 7140 	mov.w	r1, #768	; 0x300
 8003cf6:	a822      	add	r0, sp, #136	; 0x88
 8003cf8:	f7ff f9e1 	bl	80030be <_ZN11stepping_md10Parameters7set_BIDEt>
	parameters[C].set_BID(bida + 4);
 8003cfc:	f44f 7141 	mov.w	r1, #772	; 0x304
 8003d00:	4630      	mov	r0, r6
 8003d02:	f7ff f9dc 	bl	80030be <_ZN11stepping_md10Parameters7set_BIDEt>
	parameters[E].set_BID(bida + 8);
 8003d06:	f44f 7142 	mov.w	r1, #776	; 0x308
 8003d0a:	4628      	mov	r0, r5
 8003d0c:	f7ff f9d7 	bl	80030be <_ZN11stepping_md10Parameters7set_BIDEt>

	parameters[A].set_motor_param(
			MotorParam{
 8003d10:	f04f 0a00 	mov.w	sl, #0
 8003d14:	2700      	movs	r7, #0
 8003d16:	f8df 914c 	ldr.w	r9, [pc, #332]	; 8003e64 <wrapper_cpp+0x2cc>
 8003d1a:	ac1d      	add	r4, sp, #116	; 0x74
	parameters[A].set_motor_param(
 8003d1c:	4621      	mov	r1, r4
 8003d1e:	a822      	add	r0, sp, #136	; 0x88
			MotorParam{
 8003d20:	f8c4 a000 	str.w	sl, [r4]
 8003d24:	f8c4 9004 	str.w	r9, [r4, #4]
 8003d28:	60a7      	str	r7, [r4, #8]
	parameters[A].set_motor_param(
 8003d2a:	f7ff f9c0 	bl	80030ae <_ZN11stepping_md10Parameters15set_motor_paramERKNS_10MotorParamE>
				.mode = MD_MODE::DEFAULT,
				.ppr = ppr,
				.target = 0
			}
	);
	parameters[C].set_motor_param(
 8003d2e:	4621      	mov	r1, r4
 8003d30:	4630      	mov	r0, r6
			MotorParam{
 8003d32:	f8c4 a000 	str.w	sl, [r4]
 8003d36:	f8c4 9004 	str.w	r9, [r4, #4]
 8003d3a:	60a7      	str	r7, [r4, #8]
	parameters[C].set_motor_param(
 8003d3c:	f7ff f9b7 	bl	80030ae <_ZN11stepping_md10Parameters15set_motor_paramERKNS_10MotorParamE>
				.mode = MD_MODE::DEFAULT,
				.ppr = ppr,
				.target = 0
			}
	);
	parameters[E].set_motor_param(
 8003d40:	4621      	mov	r1, r4
 8003d42:	4628      	mov	r0, r5
			MotorParam{
 8003d44:	f8c4 a000 	str.w	sl, [r4]
 8003d48:	f8c4 9004 	str.w	r9, [r4, #4]
 8003d4c:	60a7      	str	r7, [r4, #8]
	parameters[E].set_motor_param(
 8003d4e:	f7ff f9ae 	bl	80030ae <_ZN11stepping_md10Parameters15set_motor_paramERKNS_10MotorParamE>
				.ppr = ppr,
				.target = 0
			}
	);

	motors[A].set_speed(rpm);
 8003d52:	4945      	ldr	r1, [pc, #276]	; (8003e68 <wrapper_cpp+0x2d0>)
 8003d54:	a831      	add	r0, sp, #196	; 0xc4
 8003d56:	f7ff f971 	bl	800303c <_ZN11stepping_md15MotorController9set_speedEf>
	motors[C].set_speed(rpm);
 8003d5a:	4943      	ldr	r1, [pc, #268]	; (8003e68 <wrapper_cpp+0x2d0>)
 8003d5c:	a83e      	add	r0, sp, #248	; 0xf8
 8003d5e:	f7ff f96d 	bl	800303c <_ZN11stepping_md15MotorController9set_speedEf>
	motors[E].set_speed(rpm);
 8003d62:	4941      	ldr	r1, [pc, #260]	; (8003e68 <wrapper_cpp+0x2d0>)
 8003d64:	a84b      	add	r0, sp, #300	; 0x12c
 8003d66:	f7ff f969 	bl	800303c <_ZN11stepping_md15MotorController9set_speedEf>
	inline void dynamic_initialize() noexcept
	{
		[]<u8 ... indices>(std::integer_sequence<u8, indices ...>)
		{
			constexpr FrameFeature<FilterWidth::bit32> null_feature{.std_id = max_std_id, .ext_id = max_ext_id};
			auto null_filter_arg = ConfigFilterArg<FilterWidth::bit32, FilterMode::list>{{null_feature, null_feature}, FifoIndex::fifo0};
 8003d6a:	4627      	mov	r7, r4
 8003d6c:	f8df c0fc 	ldr.w	ip, [pc, #252]	; 8003e6c <wrapper_cpp+0x2d4>
 8003d70:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8003d74:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 8003d76:	f8dc 3000 	ldr.w	r3, [ip]
			config_filter_bank(Config::filter_bank_total_size, static_cast<decltype(null_filter_arg)&>(static_cast<void>(indices), null_filter_arg)...);
 8003d7a:	4622      	mov	r2, r4
			auto null_filter_arg = ConfigFilterArg<FilterWidth::bit32, FilterMode::list>{{null_feature, null_feature}, FifoIndex::fifo0};
 8003d7c:	603b      	str	r3, [r7, #0]
			config_filter_bank(Config::filter_bank_total_size, static_cast<decltype(null_filter_arg)&>(static_cast<void>(indices), null_filter_arg)...);
 8003d7e:	4621      	mov	r1, r4
 8003d80:	4623      	mov	r3, r4
 8003d82:	200e      	movs	r0, #14
 8003d84:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8003d88:	e9cd 4407 	strd	r4, r4, [sp, #28]
 8003d8c:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8003d90:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8003d94:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003d98:	9400      	str	r4, [sp, #0]
 8003d9a:	f7fd ffb3 	bl	8001d04 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0ELS4_0EEJLNS0_10FilterModeE1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1ELS5_1EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE>

	dynamic_initialize();

	ConfigFilterArg<FilterWidth::bit32, FilterMode::mask> filterA{
 8003d9e:	2214      	movs	r2, #20
 8003da0:	4651      	mov	r1, sl
 8003da2:	a813      	add	r0, sp, #76	; 0x4c
 8003da4:	f002 faa8 	bl	80062f8 <memset>
 8003da8:	f64f 77f8 	movw	r7, #65528	; 0xfff8
 8003dac:	2301      	movs	r3, #1
			}
		},
		.fifo = FifoIndex::fifo0,
		.filter_match_index = 0,
		.activate = true
	};
 8003dae:	a822      	add	r0, sp, #136	; 0x88
	ConfigFilterArg<FilterWidth::bit32, FilterMode::mask> filterA{
 8003db0:	9714      	str	r7, [sp, #80]	; 0x50
 8003db2:	f88d 305c 	strb.w	r3, [sp, #92]	; 0x5c
	};
 8003db6:	f7ff f980 	bl	80030ba <_ZN11stepping_md10Parameters7get_BIDEv>
	ConfigFilterArg<FilterWidth::bit32, FilterMode::mask> filterC{
 8003dba:	2214      	movs	r2, #20
 8003dbc:	4651      	mov	r1, sl
 8003dbe:	a818      	add	r0, sp, #96	; 0x60
			bool ide;
			bool rtr;
		};

		constexpr FrameFeature(const u16 std_id = max_std_id, const u32 ext_id = max_ext_id, const bool ide = false, const bool rtr = false) noexcept:
			value{(u16)(std_id << (u16)21 | ext_id << (u32)3 | (u8)ide << 2 | (u8)rtr << 1)}
 8003dc0:	9713      	str	r7, [sp, #76]	; 0x4c
 8003dc2:	f002 fa99 	bl	80062f8 <memset>
 8003dc6:	2301      	movs	r3, #1
			}
		},
		.fifo = FifoIndex::fifo0,
		.filter_match_index = 0,
		.activate = true
	};
 8003dc8:	4630      	mov	r0, r6
	ConfigFilterArg<FilterWidth::bit32, FilterMode::mask> filterC{
 8003dca:	9719      	str	r7, [sp, #100]	; 0x64
 8003dcc:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
	};
 8003dd0:	f7ff f973 	bl	80030ba <_ZN11stepping_md10Parameters7get_BIDEv>
	ConfigFilterArg<FilterWidth::bit32, FilterMode::mask> filterE{
 8003dd4:	2214      	movs	r2, #20
 8003dd6:	4651      	mov	r1, sl
 8003dd8:	4620      	mov	r0, r4
 8003dda:	9718      	str	r7, [sp, #96]	; 0x60
 8003ddc:	f002 fa8c 	bl	80062f8 <memset>
 8003de0:	2301      	movs	r3, #1
			}
		},
		.fifo = FifoIndex::fifo0,
		.filter_match_index = 0,
		.activate = true
	};
 8003de2:	4628      	mov	r0, r5
	ConfigFilterArg<FilterWidth::bit32, FilterMode::mask> filterE{
 8003de4:	6067      	str	r7, [r4, #4]
 8003de6:	7423      	strb	r3, [r4, #16]
	};
 8003de8:	f7ff f967 	bl	80030ba <_ZN11stepping_md10Parameters7get_BIDEv>
		config_filter_bank(28, filter_args ...);
 8003dec:	201c      	movs	r0, #28
 8003dee:	4623      	mov	r3, r4
 8003df0:	6027      	str	r7, [r4, #0]
 8003df2:	aa18      	add	r2, sp, #96	; 0x60
 8003df4:	a913      	add	r1, sp, #76	; 0x4c
 8003df6:	f7ff fe0f 	bl	8003a18 <_ZN6CRSLib3Can6RM000813FilterManager18config_filter_bankIJLNS0_11FilterWidthE0ELS4_0ELS4_0EEJLNS0_10FilterModeE0ELS5_0ELS5_0EEEEvhDpRNS2_15ConfigFilterArgIXT_EXT0_EEE>
	config_filter_bank(filterA, filterC, filterE);

	HAL_CAN_Start(&hcan);
 8003dfa:	4810      	ldr	r0, [pc, #64]	; (8003e3c <wrapper_cpp+0x2a4>)
 8003dfc:	f000 f929 	bl	8004052 <HAL_CAN_Start>
      { return iterator(this->_M_impl._M_node._M_next); }
 8003e00:	4a1b      	ldr	r2, [pc, #108]	; (8003e70 <wrapper_cpp+0x2d8>)
 8003e02:	4b1c      	ldr	r3, [pc, #112]	; (8003e74 <wrapper_cpp+0x2dc>)
				for(CanController_Base instance : instances){
 8003e04:	6811      	ldr	r1, [r2, #0]
 8003e06:	4291      	cmp	r1, r2
 8003e08:	d00f      	beq.n	8003e2a <wrapper_cpp+0x292>
	class CanController_Base{
 8003e0a:	4b1b      	ldr	r3, [pc, #108]	; (8003e78 <wrapper_cpp+0x2e0>)
					instance.update();
 8003e0c:	a80d      	add	r0, sp, #52	; 0x34
	class CanController_Base{
 8003e0e:	930d      	str	r3, [sp, #52]	; 0x34
					instance.update();
 8003e10:	f7fe fd86 	bl	8002920 <_ZN11stepping_md18CanController_Base6updateEv>
	};
 8003e14:	a888      	add	r0, sp, #544	; 0x220
 8003e16:	f7ff fc71 	bl	80036fc <_ZN19CanControllersEntryD1Ev>
 8003e1a:	a870      	add	r0, sp, #448	; 0x1c0
 8003e1c:	f7ff fc6e 	bl	80036fc <_ZN19CanControllersEntryD1Ev>
 8003e20:	4640      	mov	r0, r8
 8003e22:	f7ff fc6b 	bl	80036fc <_ZN19CanControllersEntryD1Ev>
 8003e26:	f001 f9fd 	bl	8005224 <__cxa_end_cleanup>
				for(MotorController_Base controller : MotorController_Base::instances){
 8003e2a:	6819      	ldr	r1, [r3, #0]
 8003e2c:	4299      	cmp	r1, r3
 8003e2e:	d0e9      	beq.n	8003e04 <wrapper_cpp+0x26c>
	class MotorController_Base{
 8003e30:	4b12      	ldr	r3, [pc, #72]	; (8003e7c <wrapper_cpp+0x2e4>)
					controller.update();
 8003e32:	a80d      	add	r0, sp, #52	; 0x34
	class MotorController_Base{
 8003e34:	930d      	str	r3, [sp, #52]	; 0x34
					controller.update();
 8003e36:	f7fe ffef 	bl	8002e18 <_ZN11stepping_md20MotorController_Base6updateEv>
 8003e3a:	e74a      	b.n	8003cd2 <wrapper_cpp+0x13a>
 8003e3c:	20000374 	.word	0x20000374
 8003e40:	08006a00 	.word	0x08006a00
 8003e44:	20000368 	.word	0x20000368
 8003e48:	08006a0c 	.word	0x08006a0c
 8003e4c:	40010800 	.word	0x40010800
 8003e50:	3db2b8c2 	.word	0x3db2b8c2
 8003e54:	2000039c 	.word	0x2000039c
 8003e58:	40010c00 	.word	0x40010c00
 8003e5c:	200003e4 	.word	0x200003e4
 8003e60:	2000042c 	.word	0x2000042c
 8003e64:	43480000 	.word	0x43480000
 8003e68:	42f00000 	.word	0x42f00000
 8003e6c:	080065a8 	.word	0x080065a8
 8003e70:	20000350 	.word	0x20000350
 8003e74:	2000035c 	.word	0x2000035c
 8003e78:	08006834 	.word	0x08006834
 8003e7c:	08006944 	.word	0x08006944

08003e80 <Reset_Handler>:
 8003e80:	480c      	ldr	r0, [pc, #48]	; (8003eb4 <LoopFillZerobss+0x12>)
 8003e82:	490d      	ldr	r1, [pc, #52]	; (8003eb8 <LoopFillZerobss+0x16>)
 8003e84:	4a0d      	ldr	r2, [pc, #52]	; (8003ebc <LoopFillZerobss+0x1a>)
 8003e86:	2300      	movs	r3, #0
 8003e88:	e002      	b.n	8003e90 <LoopCopyDataInit>

08003e8a <CopyDataInit>:
 8003e8a:	58d4      	ldr	r4, [r2, r3]
 8003e8c:	50c4      	str	r4, [r0, r3]
 8003e8e:	3304      	adds	r3, #4

08003e90 <LoopCopyDataInit>:
 8003e90:	18c4      	adds	r4, r0, r3
 8003e92:	428c      	cmp	r4, r1
 8003e94:	d3f9      	bcc.n	8003e8a <CopyDataInit>
 8003e96:	4a0a      	ldr	r2, [pc, #40]	; (8003ec0 <LoopFillZerobss+0x1e>)
 8003e98:	4c0a      	ldr	r4, [pc, #40]	; (8003ec4 <LoopFillZerobss+0x22>)
 8003e9a:	2300      	movs	r3, #0
 8003e9c:	e001      	b.n	8003ea2 <LoopFillZerobss>

08003e9e <FillZerobss>:
 8003e9e:	6013      	str	r3, [r2, #0]
 8003ea0:	3204      	adds	r2, #4

08003ea2 <LoopFillZerobss>:
 8003ea2:	42a2      	cmp	r2, r4
 8003ea4:	d3fb      	bcc.n	8003e9e <FillZerobss>
 8003ea6:	f7ff fc05 	bl	80036b4 <SystemInit>
 8003eaa:	f002 f9c9 	bl	8006240 <__libc_init_array>
 8003eae:	f7ff f951 	bl	8003154 <main>
 8003eb2:	4770      	bx	lr
 8003eb4:	20000000 	.word	0x20000000
 8003eb8:	20000078 	.word	0x20000078
 8003ebc:	08006ed8 	.word	0x08006ed8
 8003ec0:	20000078 	.word	0x20000078
 8003ec4:	200004bc 	.word	0x200004bc

08003ec8 <ADC1_2_IRQHandler>:
 8003ec8:	e7fe      	b.n	8003ec8 <ADC1_2_IRQHandler>
	...

08003ecc <HAL_InitTick>:
 8003ecc:	b538      	push	{r3, r4, r5, lr}
 8003ece:	4b0e      	ldr	r3, [pc, #56]	; (8003f08 <HAL_InitTick+0x3c>)
 8003ed0:	4605      	mov	r5, r0
 8003ed2:	7818      	ldrb	r0, [r3, #0]
 8003ed4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003ed8:	fbb3 f3f0 	udiv	r3, r3, r0
 8003edc:	4a0b      	ldr	r2, [pc, #44]	; (8003f0c <HAL_InitTick+0x40>)
 8003ede:	6810      	ldr	r0, [r2, #0]
 8003ee0:	fbb0 f0f3 	udiv	r0, r0, r3
 8003ee4:	f000 fa10 	bl	8004308 <HAL_SYSTICK_Config>
 8003ee8:	4604      	mov	r4, r0
 8003eea:	b958      	cbnz	r0, 8003f04 <HAL_InitTick+0x38>
 8003eec:	2d0f      	cmp	r5, #15
 8003eee:	d809      	bhi.n	8003f04 <HAL_InitTick+0x38>
 8003ef0:	4602      	mov	r2, r0
 8003ef2:	4629      	mov	r1, r5
 8003ef4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ef8:	f000 f9d4 	bl	80042a4 <HAL_NVIC_SetPriority>
 8003efc:	4620      	mov	r0, r4
 8003efe:	4b04      	ldr	r3, [pc, #16]	; (8003f10 <HAL_InitTick+0x44>)
 8003f00:	601d      	str	r5, [r3, #0]
 8003f02:	bd38      	pop	{r3, r4, r5, pc}
 8003f04:	2001      	movs	r0, #1
 8003f06:	e7fc      	b.n	8003f02 <HAL_InitTick+0x36>
 8003f08:	20000004 	.word	0x20000004
 8003f0c:	20000000 	.word	0x20000000
 8003f10:	20000008 	.word	0x20000008

08003f14 <HAL_Init>:
 8003f14:	4a07      	ldr	r2, [pc, #28]	; (8003f34 <HAL_Init+0x20>)
 8003f16:	b508      	push	{r3, lr}
 8003f18:	6813      	ldr	r3, [r2, #0]
 8003f1a:	2003      	movs	r0, #3
 8003f1c:	f043 0310 	orr.w	r3, r3, #16
 8003f20:	6013      	str	r3, [r2, #0]
 8003f22:	f000 f9ad 	bl	8004280 <HAL_NVIC_SetPriorityGrouping>
 8003f26:	200f      	movs	r0, #15
 8003f28:	f7ff ffd0 	bl	8003ecc <HAL_InitTick>
 8003f2c:	f7ff fa88 	bl	8003440 <HAL_MspInit>
 8003f30:	2000      	movs	r0, #0
 8003f32:	bd08      	pop	{r3, pc}
 8003f34:	40022000 	.word	0x40022000

08003f38 <HAL_IncTick>:
 8003f38:	4a03      	ldr	r2, [pc, #12]	; (8003f48 <HAL_IncTick+0x10>)
 8003f3a:	4b04      	ldr	r3, [pc, #16]	; (8003f4c <HAL_IncTick+0x14>)
 8003f3c:	6811      	ldr	r1, [r2, #0]
 8003f3e:	781b      	ldrb	r3, [r3, #0]
 8003f40:	440b      	add	r3, r1
 8003f42:	6013      	str	r3, [r2, #0]
 8003f44:	4770      	bx	lr
 8003f46:	bf00      	nop
 8003f48:	20000478 	.word	0x20000478
 8003f4c:	20000004 	.word	0x20000004

08003f50 <HAL_GetTick>:
 8003f50:	4b01      	ldr	r3, [pc, #4]	; (8003f58 <HAL_GetTick+0x8>)
 8003f52:	6818      	ldr	r0, [r3, #0]
 8003f54:	4770      	bx	lr
 8003f56:	bf00      	nop
 8003f58:	20000478 	.word	0x20000478

08003f5c <HAL_CAN_Init>:
 8003f5c:	b538      	push	{r3, r4, r5, lr}
 8003f5e:	4604      	mov	r4, r0
 8003f60:	2800      	cmp	r0, #0
 8003f62:	d06e      	beq.n	8004042 <HAL_CAN_Init+0xe6>
 8003f64:	f890 3020 	ldrb.w	r3, [r0, #32]
 8003f68:	b90b      	cbnz	r3, 8003f6e <HAL_CAN_Init+0x12>
 8003f6a:	f7ff fa8b 	bl	8003484 <HAL_CAN_MspInit>
 8003f6e:	6822      	ldr	r2, [r4, #0]
 8003f70:	6813      	ldr	r3, [r2, #0]
 8003f72:	f043 0301 	orr.w	r3, r3, #1
 8003f76:	6013      	str	r3, [r2, #0]
 8003f78:	f7ff ffea 	bl	8003f50 <HAL_GetTick>
 8003f7c:	4605      	mov	r5, r0
 8003f7e:	6823      	ldr	r3, [r4, #0]
 8003f80:	685a      	ldr	r2, [r3, #4]
 8003f82:	07d1      	lsls	r1, r2, #31
 8003f84:	d551      	bpl.n	800402a <HAL_CAN_Init+0xce>
 8003f86:	681a      	ldr	r2, [r3, #0]
 8003f88:	f022 0202 	bic.w	r2, r2, #2
 8003f8c:	601a      	str	r2, [r3, #0]
 8003f8e:	f7ff ffdf 	bl	8003f50 <HAL_GetTick>
 8003f92:	4605      	mov	r5, r0
 8003f94:	6823      	ldr	r3, [r4, #0]
 8003f96:	685a      	ldr	r2, [r3, #4]
 8003f98:	0792      	lsls	r2, r2, #30
 8003f9a:	d454      	bmi.n	8004046 <HAL_CAN_Init+0xea>
 8003f9c:	7e22      	ldrb	r2, [r4, #24]
 8003f9e:	2000      	movs	r0, #0
 8003fa0:	2a01      	cmp	r2, #1
 8003fa2:	681a      	ldr	r2, [r3, #0]
 8003fa4:	bf0c      	ite	eq
 8003fa6:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
 8003faa:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 8003fae:	601a      	str	r2, [r3, #0]
 8003fb0:	7e62      	ldrb	r2, [r4, #25]
 8003fb2:	2a01      	cmp	r2, #1
 8003fb4:	681a      	ldr	r2, [r3, #0]
 8003fb6:	bf0c      	ite	eq
 8003fb8:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
 8003fbc:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 8003fc0:	601a      	str	r2, [r3, #0]
 8003fc2:	7ea2      	ldrb	r2, [r4, #26]
 8003fc4:	2a01      	cmp	r2, #1
 8003fc6:	681a      	ldr	r2, [r3, #0]
 8003fc8:	bf0c      	ite	eq
 8003fca:	f042 0220 	orreq.w	r2, r2, #32
 8003fce:	f022 0220 	bicne.w	r2, r2, #32
 8003fd2:	601a      	str	r2, [r3, #0]
 8003fd4:	7ee2      	ldrb	r2, [r4, #27]
 8003fd6:	2a01      	cmp	r2, #1
 8003fd8:	681a      	ldr	r2, [r3, #0]
 8003fda:	bf0c      	ite	eq
 8003fdc:	f022 0210 	biceq.w	r2, r2, #16
 8003fe0:	f042 0210 	orrne.w	r2, r2, #16
 8003fe4:	601a      	str	r2, [r3, #0]
 8003fe6:	7f22      	ldrb	r2, [r4, #28]
 8003fe8:	2a01      	cmp	r2, #1
 8003fea:	681a      	ldr	r2, [r3, #0]
 8003fec:	bf0c      	ite	eq
 8003fee:	f042 0208 	orreq.w	r2, r2, #8
 8003ff2:	f022 0208 	bicne.w	r2, r2, #8
 8003ff6:	601a      	str	r2, [r3, #0]
 8003ff8:	7f62      	ldrb	r2, [r4, #29]
 8003ffa:	2a01      	cmp	r2, #1
 8003ffc:	681a      	ldr	r2, [r3, #0]
 8003ffe:	bf0c      	ite	eq
 8004000:	f042 0204 	orreq.w	r2, r2, #4
 8004004:	f022 0204 	bicne.w	r2, r2, #4
 8004008:	601a      	str	r2, [r3, #0]
 800400a:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 800400e:	430a      	orrs	r2, r1
 8004010:	6921      	ldr	r1, [r4, #16]
 8004012:	430a      	orrs	r2, r1
 8004014:	6961      	ldr	r1, [r4, #20]
 8004016:	430a      	orrs	r2, r1
 8004018:	6861      	ldr	r1, [r4, #4]
 800401a:	3901      	subs	r1, #1
 800401c:	430a      	orrs	r2, r1
 800401e:	61da      	str	r2, [r3, #28]
 8004020:	2301      	movs	r3, #1
 8004022:	6260      	str	r0, [r4, #36]	; 0x24
 8004024:	f884 3020 	strb.w	r3, [r4, #32]
 8004028:	bd38      	pop	{r3, r4, r5, pc}
 800402a:	f7ff ff91 	bl	8003f50 <HAL_GetTick>
 800402e:	1b40      	subs	r0, r0, r5
 8004030:	280a      	cmp	r0, #10
 8004032:	d9a4      	bls.n	8003f7e <HAL_CAN_Init+0x22>
 8004034:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004036:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800403a:	6263      	str	r3, [r4, #36]	; 0x24
 800403c:	2305      	movs	r3, #5
 800403e:	f884 3020 	strb.w	r3, [r4, #32]
 8004042:	2001      	movs	r0, #1
 8004044:	e7f0      	b.n	8004028 <HAL_CAN_Init+0xcc>
 8004046:	f7ff ff83 	bl	8003f50 <HAL_GetTick>
 800404a:	1b40      	subs	r0, r0, r5
 800404c:	280a      	cmp	r0, #10
 800404e:	d9a1      	bls.n	8003f94 <HAL_CAN_Init+0x38>
 8004050:	e7f0      	b.n	8004034 <HAL_CAN_Init+0xd8>

08004052 <HAL_CAN_Start>:
 8004052:	b570      	push	{r4, r5, r6, lr}
 8004054:	f890 3020 	ldrb.w	r3, [r0, #32]
 8004058:	4604      	mov	r4, r0
 800405a:	2b01      	cmp	r3, #1
 800405c:	b2dd      	uxtb	r5, r3
 800405e:	d120      	bne.n	80040a2 <HAL_CAN_Start+0x50>
 8004060:	2302      	movs	r3, #2
 8004062:	6802      	ldr	r2, [r0, #0]
 8004064:	f880 3020 	strb.w	r3, [r0, #32]
 8004068:	6813      	ldr	r3, [r2, #0]
 800406a:	f023 0301 	bic.w	r3, r3, #1
 800406e:	6013      	str	r3, [r2, #0]
 8004070:	f7ff ff6e 	bl	8003f50 <HAL_GetTick>
 8004074:	4606      	mov	r6, r0
 8004076:	6823      	ldr	r3, [r4, #0]
 8004078:	685b      	ldr	r3, [r3, #4]
 800407a:	f013 0301 	ands.w	r3, r3, #1
 800407e:	d102      	bne.n	8004086 <HAL_CAN_Start+0x34>
 8004080:	461d      	mov	r5, r3
 8004082:	6263      	str	r3, [r4, #36]	; 0x24
 8004084:	e00b      	b.n	800409e <HAL_CAN_Start+0x4c>
 8004086:	f7ff ff63 	bl	8003f50 <HAL_GetTick>
 800408a:	1b80      	subs	r0, r0, r6
 800408c:	280a      	cmp	r0, #10
 800408e:	d9f2      	bls.n	8004076 <HAL_CAN_Start+0x24>
 8004090:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004092:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004096:	6263      	str	r3, [r4, #36]	; 0x24
 8004098:	2305      	movs	r3, #5
 800409a:	f884 3020 	strb.w	r3, [r4, #32]
 800409e:	4628      	mov	r0, r5
 80040a0:	bd70      	pop	{r4, r5, r6, pc}
 80040a2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80040a4:	2501      	movs	r5, #1
 80040a6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80040aa:	6243      	str	r3, [r0, #36]	; 0x24
 80040ac:	e7f7      	b.n	800409e <HAL_CAN_Start+0x4c>

080040ae <HAL_CAN_AddTxMessage>:
 80040ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040b0:	f890 5020 	ldrb.w	r5, [r0, #32]
 80040b4:	6806      	ldr	r6, [r0, #0]
 80040b6:	3d01      	subs	r5, #1
 80040b8:	2d01      	cmp	r5, #1
 80040ba:	68b4      	ldr	r4, [r6, #8]
 80040bc:	d841      	bhi.n	8004142 <HAL_CAN_AddTxMessage+0x94>
 80040be:	f014 5fe0 	tst.w	r4, #469762048	; 0x1c000000
 80040c2:	d03a      	beq.n	800413a <HAL_CAN_AddTxMessage+0x8c>
 80040c4:	f3c4 6401 	ubfx	r4, r4, #24, #2
 80040c8:	2c03      	cmp	r4, #3
 80040ca:	f04f 0501 	mov.w	r5, #1
 80040ce:	d105      	bne.n	80040dc <HAL_CAN_AddTxMessage+0x2e>
 80040d0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80040d2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80040d6:	6243      	str	r3, [r0, #36]	; 0x24
 80040d8:	2001      	movs	r0, #1
 80040da:	e028      	b.n	800412e <HAL_CAN_AddTxMessage+0x80>
 80040dc:	40a5      	lsls	r5, r4
 80040de:	601d      	str	r5, [r3, #0]
 80040e0:	e9d1 0702 	ldrd	r0, r7, [r1, #8]
 80040e4:	f104 0318 	add.w	r3, r4, #24
 80040e8:	bb10      	cbnz	r0, 8004130 <HAL_CAN_AddTxMessage+0x82>
 80040ea:	6808      	ldr	r0, [r1, #0]
 80040ec:	ea47 5040 	orr.w	r0, r7, r0, lsl #21
 80040f0:	011b      	lsls	r3, r3, #4
 80040f2:	50f0      	str	r0, [r6, r3]
 80040f4:	0120      	lsls	r0, r4, #4
 80040f6:	eb06 1304 	add.w	r3, r6, r4, lsl #4
 80040fa:	4406      	add	r6, r0
 80040fc:	2000      	movs	r0, #0
 80040fe:	690d      	ldr	r5, [r1, #16]
 8004100:	f8c3 5184 	str.w	r5, [r3, #388]	; 0x184
 8004104:	7d09      	ldrb	r1, [r1, #20]
 8004106:	2901      	cmp	r1, #1
 8004108:	bf02      	ittt	eq
 800410a:	f8d3 1184 	ldreq.w	r1, [r3, #388]	; 0x184
 800410e:	f441 7180 	orreq.w	r1, r1, #256	; 0x100
 8004112:	f8c3 1184 	streq.w	r1, [r3, #388]	; 0x184
 8004116:	6851      	ldr	r1, [r2, #4]
 8004118:	f8c6 118c 	str.w	r1, [r6, #396]	; 0x18c
 800411c:	6812      	ldr	r2, [r2, #0]
 800411e:	f8c6 2188 	str.w	r2, [r6, #392]	; 0x188
 8004122:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 8004126:	f042 0201 	orr.w	r2, r2, #1
 800412a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 800412e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004130:	684d      	ldr	r5, [r1, #4]
 8004132:	4338      	orrs	r0, r7
 8004134:	ea40 00c5 	orr.w	r0, r0, r5, lsl #3
 8004138:	e7da      	b.n	80040f0 <HAL_CAN_AddTxMessage+0x42>
 800413a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800413c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004140:	e7c9      	b.n	80040d6 <HAL_CAN_AddTxMessage+0x28>
 8004142:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004144:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004148:	e7c5      	b.n	80040d6 <HAL_CAN_AddTxMessage+0x28>

0800414a <HAL_CAN_GetTxMailboxesFreeLevel>:
 800414a:	f890 3020 	ldrb.w	r3, [r0, #32]
 800414e:	3b01      	subs	r3, #1
 8004150:	2b01      	cmp	r3, #1
 8004152:	d80c      	bhi.n	800416e <HAL_CAN_GetTxMailboxesFreeLevel+0x24>
 8004154:	6803      	ldr	r3, [r0, #0]
 8004156:	6898      	ldr	r0, [r3, #8]
 8004158:	689a      	ldr	r2, [r3, #8]
 800415a:	689b      	ldr	r3, [r3, #8]
 800415c:	0112      	lsls	r2, r2, #4
 800415e:	f3c0 6080 	ubfx	r0, r0, #26, #1
 8004162:	bf48      	it	mi
 8004164:	3001      	addmi	r0, #1
 8004166:	00db      	lsls	r3, r3, #3
 8004168:	d502      	bpl.n	8004170 <HAL_CAN_GetTxMailboxesFreeLevel+0x26>
 800416a:	3001      	adds	r0, #1
 800416c:	4770      	bx	lr
 800416e:	2000      	movs	r0, #0
 8004170:	4770      	bx	lr

08004172 <HAL_CAN_GetRxMessage>:
 8004172:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004174:	f890 4020 	ldrb.w	r4, [r0, #32]
 8004178:	3c01      	subs	r4, #1
 800417a:	2c01      	cmp	r4, #1
 800417c:	d86c      	bhi.n	8004258 <HAL_CAN_GetRxMessage+0xe6>
 800417e:	6806      	ldr	r6, [r0, #0]
 8004180:	b941      	cbnz	r1, 8004194 <HAL_CAN_GetRxMessage+0x22>
 8004182:	68f4      	ldr	r4, [r6, #12]
 8004184:	07a4      	lsls	r4, r4, #30
 8004186:	d107      	bne.n	8004198 <HAL_CAN_GetRxMessage+0x26>
 8004188:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800418a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800418e:	6243      	str	r3, [r0, #36]	; 0x24
 8004190:	2001      	movs	r0, #1
 8004192:	e056      	b.n	8004242 <HAL_CAN_GetRxMessage+0xd0>
 8004194:	6934      	ldr	r4, [r6, #16]
 8004196:	e7f5      	b.n	8004184 <HAL_CAN_GetRxMessage+0x12>
 8004198:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800419c:	f8d5 71b0 	ldr.w	r7, [r5, #432]	; 0x1b0
 80041a0:	010c      	lsls	r4, r1, #4
 80041a2:	f007 0704 	and.w	r7, r7, #4
 80041a6:	6097      	str	r7, [r2, #8]
 80041a8:	2f00      	cmp	r7, #0
 80041aa:	d14b      	bne.n	8004244 <HAL_CAN_GetRxMessage+0xd2>
 80041ac:	f8d5 71b0 	ldr.w	r7, [r5, #432]	; 0x1b0
 80041b0:	0d7f      	lsrs	r7, r7, #21
 80041b2:	6017      	str	r7, [r2, #0]
 80041b4:	f8d5 71b0 	ldr.w	r7, [r5, #432]	; 0x1b0
 80041b8:	4426      	add	r6, r4
 80041ba:	f007 0702 	and.w	r7, r7, #2
 80041be:	60d7      	str	r7, [r2, #12]
 80041c0:	f8d5 71b4 	ldr.w	r7, [r5, #436]	; 0x1b4
 80041c4:	f007 070f 	and.w	r7, r7, #15
 80041c8:	6117      	str	r7, [r2, #16]
 80041ca:	f8d5 71b4 	ldr.w	r7, [r5, #436]	; 0x1b4
 80041ce:	f8d5 51b4 	ldr.w	r5, [r5, #436]	; 0x1b4
 80041d2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80041d6:	0c2d      	lsrs	r5, r5, #16
 80041d8:	6197      	str	r7, [r2, #24]
 80041da:	6155      	str	r5, [r2, #20]
 80041dc:	f8d6 21b8 	ldr.w	r2, [r6, #440]	; 0x1b8
 80041e0:	701a      	strb	r2, [r3, #0]
 80041e2:	6802      	ldr	r2, [r0, #0]
 80041e4:	4422      	add	r2, r4
 80041e6:	f8d2 21b8 	ldr.w	r2, [r2, #440]	; 0x1b8
 80041ea:	0a12      	lsrs	r2, r2, #8
 80041ec:	705a      	strb	r2, [r3, #1]
 80041ee:	6802      	ldr	r2, [r0, #0]
 80041f0:	4422      	add	r2, r4
 80041f2:	f8d2 21b8 	ldr.w	r2, [r2, #440]	; 0x1b8
 80041f6:	0c12      	lsrs	r2, r2, #16
 80041f8:	709a      	strb	r2, [r3, #2]
 80041fa:	6802      	ldr	r2, [r0, #0]
 80041fc:	4422      	add	r2, r4
 80041fe:	f8d2 21b8 	ldr.w	r2, [r2, #440]	; 0x1b8
 8004202:	0e12      	lsrs	r2, r2, #24
 8004204:	70da      	strb	r2, [r3, #3]
 8004206:	6802      	ldr	r2, [r0, #0]
 8004208:	4422      	add	r2, r4
 800420a:	f8d2 21bc 	ldr.w	r2, [r2, #444]	; 0x1bc
 800420e:	711a      	strb	r2, [r3, #4]
 8004210:	6802      	ldr	r2, [r0, #0]
 8004212:	4422      	add	r2, r4
 8004214:	f8d2 21bc 	ldr.w	r2, [r2, #444]	; 0x1bc
 8004218:	0a12      	lsrs	r2, r2, #8
 800421a:	715a      	strb	r2, [r3, #5]
 800421c:	6802      	ldr	r2, [r0, #0]
 800421e:	4422      	add	r2, r4
 8004220:	f8d2 21bc 	ldr.w	r2, [r2, #444]	; 0x1bc
 8004224:	0c12      	lsrs	r2, r2, #16
 8004226:	719a      	strb	r2, [r3, #6]
 8004228:	6802      	ldr	r2, [r0, #0]
 800422a:	4422      	add	r2, r4
 800422c:	f8d2 21bc 	ldr.w	r2, [r2, #444]	; 0x1bc
 8004230:	0e12      	lsrs	r2, r2, #24
 8004232:	71da      	strb	r2, [r3, #7]
 8004234:	6803      	ldr	r3, [r0, #0]
 8004236:	b951      	cbnz	r1, 800424e <HAL_CAN_GetRxMessage+0xdc>
 8004238:	68da      	ldr	r2, [r3, #12]
 800423a:	f042 0220 	orr.w	r2, r2, #32
 800423e:	60da      	str	r2, [r3, #12]
 8004240:	2000      	movs	r0, #0
 8004242:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004244:	f8d5 71b0 	ldr.w	r7, [r5, #432]	; 0x1b0
 8004248:	08ff      	lsrs	r7, r7, #3
 800424a:	6057      	str	r7, [r2, #4]
 800424c:	e7b2      	b.n	80041b4 <HAL_CAN_GetRxMessage+0x42>
 800424e:	691a      	ldr	r2, [r3, #16]
 8004250:	f042 0220 	orr.w	r2, r2, #32
 8004254:	611a      	str	r2, [r3, #16]
 8004256:	e7f3      	b.n	8004240 <HAL_CAN_GetRxMessage+0xce>
 8004258:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800425a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800425e:	e796      	b.n	800418e <HAL_CAN_GetRxMessage+0x1c>

08004260 <HAL_CAN_GetRxFifoFillLevel>:
 8004260:	f890 3020 	ldrb.w	r3, [r0, #32]
 8004264:	3b01      	subs	r3, #1
 8004266:	2b01      	cmp	r3, #1
 8004268:	d807      	bhi.n	800427a <HAL_CAN_GetRxFifoFillLevel+0x1a>
 800426a:	6803      	ldr	r3, [r0, #0]
 800426c:	b919      	cbnz	r1, 8004276 <HAL_CAN_GetRxFifoFillLevel+0x16>
 800426e:	68d8      	ldr	r0, [r3, #12]
 8004270:	f000 0003 	and.w	r0, r0, #3
 8004274:	4770      	bx	lr
 8004276:	6918      	ldr	r0, [r3, #16]
 8004278:	e7fa      	b.n	8004270 <HAL_CAN_GetRxFifoFillLevel+0x10>
 800427a:	2000      	movs	r0, #0
 800427c:	4770      	bx	lr
	...

08004280 <HAL_NVIC_SetPriorityGrouping>:
 8004280:	4907      	ldr	r1, [pc, #28]	; (80042a0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004282:	0203      	lsls	r3, r0, #8
 8004284:	68ca      	ldr	r2, [r1, #12]
 8004286:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800428a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800428e:	0412      	lsls	r2, r2, #16
 8004290:	0c12      	lsrs	r2, r2, #16
 8004292:	4313      	orrs	r3, r2
 8004294:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004298:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800429c:	60cb      	str	r3, [r1, #12]
 800429e:	4770      	bx	lr
 80042a0:	e000ed00 	.word	0xe000ed00

080042a4 <HAL_NVIC_SetPriority>:
 80042a4:	4b16      	ldr	r3, [pc, #88]	; (8004300 <HAL_NVIC_SetPriority+0x5c>)
 80042a6:	b530      	push	{r4, r5, lr}
 80042a8:	68dc      	ldr	r4, [r3, #12]
 80042aa:	f3c4 2402 	ubfx	r4, r4, #8, #3
 80042ae:	f1c4 0307 	rsb	r3, r4, #7
 80042b2:	1d25      	adds	r5, r4, #4
 80042b4:	2b04      	cmp	r3, #4
 80042b6:	bf28      	it	cs
 80042b8:	2304      	movcs	r3, #4
 80042ba:	2d06      	cmp	r5, #6
 80042bc:	f04f 35ff 	mov.w	r5, #4294967295
 80042c0:	bf98      	it	ls
 80042c2:	2400      	movls	r4, #0
 80042c4:	fa05 f303 	lsl.w	r3, r5, r3
 80042c8:	bf88      	it	hi
 80042ca:	3c03      	subhi	r4, #3
 80042cc:	ea21 0303 	bic.w	r3, r1, r3
 80042d0:	40a3      	lsls	r3, r4
 80042d2:	fa05 f404 	lsl.w	r4, r5, r4
 80042d6:	ea22 0204 	bic.w	r2, r2, r4
 80042da:	2800      	cmp	r0, #0
 80042dc:	ea43 0302 	orr.w	r3, r3, r2
 80042e0:	bfac      	ite	ge
 80042e2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 80042e6:	4a07      	ldrlt	r2, [pc, #28]	; (8004304 <HAL_NVIC_SetPriority+0x60>)
 80042e8:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80042ec:	b2db      	uxtb	r3, r3
 80042ee:	bfab      	itete	ge
 80042f0:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
 80042f4:	f000 000f 	andlt.w	r0, r0, #15
 80042f8:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
 80042fc:	5413      	strblt	r3, [r2, r0]
 80042fe:	bd30      	pop	{r4, r5, pc}
 8004300:	e000ed00 	.word	0xe000ed00
 8004304:	e000ed14 	.word	0xe000ed14

08004308 <HAL_SYSTICK_Config>:
 8004308:	3801      	subs	r0, #1
 800430a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800430e:	d20b      	bcs.n	8004328 <HAL_SYSTICK_Config+0x20>
 8004310:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8004314:	21f0      	movs	r1, #240	; 0xf0
 8004316:	4a05      	ldr	r2, [pc, #20]	; (800432c <HAL_SYSTICK_Config+0x24>)
 8004318:	6158      	str	r0, [r3, #20]
 800431a:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
 800431e:	2000      	movs	r0, #0
 8004320:	2207      	movs	r2, #7
 8004322:	6198      	str	r0, [r3, #24]
 8004324:	611a      	str	r2, [r3, #16]
 8004326:	4770      	bx	lr
 8004328:	2001      	movs	r0, #1
 800432a:	4770      	bx	lr
 800432c:	e000ed00 	.word	0xe000ed00

08004330 <HAL_GPIO_Init>:
 8004330:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004334:	2200      	movs	r2, #0
 8004336:	4616      	mov	r6, r2
 8004338:	4f61      	ldr	r7, [pc, #388]	; (80044c0 <HAL_GPIO_Init+0x190>)
 800433a:	4b62      	ldr	r3, [pc, #392]	; (80044c4 <HAL_GPIO_Init+0x194>)
 800433c:	f8df c188 	ldr.w	ip, [pc, #392]	; 80044c8 <HAL_GPIO_Init+0x198>
 8004340:	f8df e188 	ldr.w	lr, [pc, #392]	; 80044cc <HAL_GPIO_Init+0x19c>
 8004344:	680d      	ldr	r5, [r1, #0]
 8004346:	fa35 f406 	lsrs.w	r4, r5, r6
 800434a:	d102      	bne.n	8004352 <HAL_GPIO_Init+0x22>
 800434c:	b003      	add	sp, #12
 800434e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004352:	f04f 0801 	mov.w	r8, #1
 8004356:	fa08 f806 	lsl.w	r8, r8, r6
 800435a:	ea05 0408 	and.w	r4, r5, r8
 800435e:	ea38 0505 	bics.w	r5, r8, r5
 8004362:	d177      	bne.n	8004454 <HAL_GPIO_Init+0x124>
 8004364:	684d      	ldr	r5, [r1, #4]
 8004366:	2d03      	cmp	r5, #3
 8004368:	d807      	bhi.n	800437a <HAL_GPIO_Init+0x4a>
 800436a:	3d01      	subs	r5, #1
 800436c:	2d02      	cmp	r5, #2
 800436e:	f200 8082 	bhi.w	8004476 <HAL_GPIO_Init+0x146>
 8004372:	e8df f005 	tbb	[pc, r5]
 8004376:	9792      	.short	0x9792
 8004378:	9d          	.byte	0x9d
 8004379:	00          	.byte	0x00
 800437a:	2d12      	cmp	r5, #18
 800437c:	f000 8095 	beq.w	80044aa <HAL_GPIO_Init+0x17a>
 8004380:	d86a      	bhi.n	8004458 <HAL_GPIO_Init+0x128>
 8004382:	2d11      	cmp	r5, #17
 8004384:	f000 808b 	beq.w	800449e <HAL_GPIO_Init+0x16e>
 8004388:	2cff      	cmp	r4, #255	; 0xff
 800438a:	bf98      	it	ls
 800438c:	4682      	movls	sl, r0
 800438e:	f04f 090f 	mov.w	r9, #15
 8004392:	bf88      	it	hi
 8004394:	f100 0a04 	addhi.w	sl, r0, #4
 8004398:	ea4f 0586 	mov.w	r5, r6, lsl #2
 800439c:	f8da 8000 	ldr.w	r8, [sl]
 80043a0:	bf88      	it	hi
 80043a2:	3d20      	subhi	r5, #32
 80043a4:	fa09 fb05 	lsl.w	fp, r9, r5
 80043a8:	ea28 080b 	bic.w	r8, r8, fp
 80043ac:	fa02 f505 	lsl.w	r5, r2, r5
 80043b0:	ea48 0505 	orr.w	r5, r8, r5
 80043b4:	f8ca 5000 	str.w	r5, [sl]
 80043b8:	f8d1 a004 	ldr.w	sl, [r1, #4]
 80043bc:	f01a 5f80 	tst.w	sl, #268435456	; 0x10000000
 80043c0:	d048      	beq.n	8004454 <HAL_GPIO_Init+0x124>
 80043c2:	69bd      	ldr	r5, [r7, #24]
 80043c4:	f026 0803 	bic.w	r8, r6, #3
 80043c8:	f045 0501 	orr.w	r5, r5, #1
 80043cc:	61bd      	str	r5, [r7, #24]
 80043ce:	69bd      	ldr	r5, [r7, #24]
 80043d0:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
 80043d4:	f005 0501 	and.w	r5, r5, #1
 80043d8:	9501      	str	r5, [sp, #4]
 80043da:	f508 3880 	add.w	r8, r8, #65536	; 0x10000
 80043de:	f006 0b03 	and.w	fp, r6, #3
 80043e2:	9d01      	ldr	r5, [sp, #4]
 80043e4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80043e8:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80043ec:	fa09 f90b 	lsl.w	r9, r9, fp
 80043f0:	ea25 0909 	bic.w	r9, r5, r9
 80043f4:	4d36      	ldr	r5, [pc, #216]	; (80044d0 <HAL_GPIO_Init+0x1a0>)
 80043f6:	42a8      	cmp	r0, r5
 80043f8:	d05e      	beq.n	80044b8 <HAL_GPIO_Init+0x188>
 80043fa:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80043fe:	42a8      	cmp	r0, r5
 8004400:	d05c      	beq.n	80044bc <HAL_GPIO_Init+0x18c>
 8004402:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004406:	42a8      	cmp	r0, r5
 8004408:	bf0c      	ite	eq
 800440a:	2502      	moveq	r5, #2
 800440c:	2503      	movne	r5, #3
 800440e:	fa05 f50b 	lsl.w	r5, r5, fp
 8004412:	ea45 0509 	orr.w	r5, r5, r9
 8004416:	f8c8 5008 	str.w	r5, [r8, #8]
 800441a:	681d      	ldr	r5, [r3, #0]
 800441c:	f41a 3f80 	tst.w	sl, #65536	; 0x10000
 8004420:	bf14      	ite	ne
 8004422:	4325      	orrne	r5, r4
 8004424:	43a5      	biceq	r5, r4
 8004426:	601d      	str	r5, [r3, #0]
 8004428:	685d      	ldr	r5, [r3, #4]
 800442a:	f41a 3f00 	tst.w	sl, #131072	; 0x20000
 800442e:	bf14      	ite	ne
 8004430:	4325      	orrne	r5, r4
 8004432:	43a5      	biceq	r5, r4
 8004434:	605d      	str	r5, [r3, #4]
 8004436:	689d      	ldr	r5, [r3, #8]
 8004438:	f41a 1f80 	tst.w	sl, #1048576	; 0x100000
 800443c:	bf14      	ite	ne
 800443e:	4325      	orrne	r5, r4
 8004440:	43a5      	biceq	r5, r4
 8004442:	609d      	str	r5, [r3, #8]
 8004444:	68dd      	ldr	r5, [r3, #12]
 8004446:	f41a 1f00 	tst.w	sl, #2097152	; 0x200000
 800444a:	bf14      	ite	ne
 800444c:	432c      	orrne	r4, r5
 800444e:	ea25 0404 	biceq.w	r4, r5, r4
 8004452:	60dc      	str	r4, [r3, #12]
 8004454:	3601      	adds	r6, #1
 8004456:	e775      	b.n	8004344 <HAL_GPIO_Init+0x14>
 8004458:	f8df 9078 	ldr.w	r9, [pc, #120]	; 80044d4 <HAL_GPIO_Init+0x1a4>
 800445c:	454d      	cmp	r5, r9
 800445e:	d00a      	beq.n	8004476 <HAL_GPIO_Init+0x146>
 8004460:	d815      	bhi.n	800448e <HAL_GPIO_Init+0x15e>
 8004462:	4575      	cmp	r5, lr
 8004464:	d007      	beq.n	8004476 <HAL_GPIO_Init+0x146>
 8004466:	f5a9 3980 	sub.w	r9, r9, #65536	; 0x10000
 800446a:	454d      	cmp	r5, r9
 800446c:	d003      	beq.n	8004476 <HAL_GPIO_Init+0x146>
 800446e:	f5a9 1980 	sub.w	r9, r9, #1048576	; 0x100000
 8004472:	454d      	cmp	r5, r9
 8004474:	d188      	bne.n	8004388 <HAL_GPIO_Init+0x58>
 8004476:	688a      	ldr	r2, [r1, #8]
 8004478:	b1e2      	cbz	r2, 80044b4 <HAL_GPIO_Init+0x184>
 800447a:	2a01      	cmp	r2, #1
 800447c:	bf08      	it	eq
 800447e:	f8c0 8010 	streq.w	r8, [r0, #16]
 8004482:	f04f 0208 	mov.w	r2, #8
 8004486:	bf18      	it	ne
 8004488:	f8c0 8014 	strne.w	r8, [r0, #20]
 800448c:	e77c      	b.n	8004388 <HAL_GPIO_Init+0x58>
 800448e:	f8df 9048 	ldr.w	r9, [pc, #72]	; 80044d8 <HAL_GPIO_Init+0x1a8>
 8004492:	454d      	cmp	r5, r9
 8004494:	d0ef      	beq.n	8004476 <HAL_GPIO_Init+0x146>
 8004496:	4565      	cmp	r5, ip
 8004498:	e7ec      	b.n	8004474 <HAL_GPIO_Init+0x144>
 800449a:	68ca      	ldr	r2, [r1, #12]
 800449c:	e774      	b.n	8004388 <HAL_GPIO_Init+0x58>
 800449e:	68ca      	ldr	r2, [r1, #12]
 80044a0:	3204      	adds	r2, #4
 80044a2:	e771      	b.n	8004388 <HAL_GPIO_Init+0x58>
 80044a4:	68ca      	ldr	r2, [r1, #12]
 80044a6:	3208      	adds	r2, #8
 80044a8:	e76e      	b.n	8004388 <HAL_GPIO_Init+0x58>
 80044aa:	68ca      	ldr	r2, [r1, #12]
 80044ac:	320c      	adds	r2, #12
 80044ae:	e76b      	b.n	8004388 <HAL_GPIO_Init+0x58>
 80044b0:	2200      	movs	r2, #0
 80044b2:	e769      	b.n	8004388 <HAL_GPIO_Init+0x58>
 80044b4:	2204      	movs	r2, #4
 80044b6:	e767      	b.n	8004388 <HAL_GPIO_Init+0x58>
 80044b8:	2500      	movs	r5, #0
 80044ba:	e7a8      	b.n	800440e <HAL_GPIO_Init+0xde>
 80044bc:	2501      	movs	r5, #1
 80044be:	e7a6      	b.n	800440e <HAL_GPIO_Init+0xde>
 80044c0:	40021000 	.word	0x40021000
 80044c4:	40010400 	.word	0x40010400
 80044c8:	10320000 	.word	0x10320000
 80044cc:	10120000 	.word	0x10120000
 80044d0:	40010800 	.word	0x40010800
 80044d4:	10220000 	.word	0x10220000
 80044d8:	10310000 	.word	0x10310000

080044dc <HAL_GPIO_WritePin>:
 80044dc:	b10a      	cbz	r2, 80044e2 <HAL_GPIO_WritePin+0x6>
 80044de:	6101      	str	r1, [r0, #16]
 80044e0:	4770      	bx	lr
 80044e2:	0409      	lsls	r1, r1, #16
 80044e4:	e7fb      	b.n	80044de <HAL_GPIO_WritePin+0x2>
	...

080044e8 <HAL_RCC_OscConfig>:
 80044e8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80044ec:	4605      	mov	r5, r0
 80044ee:	b338      	cbz	r0, 8004540 <HAL_RCC_OscConfig+0x58>
 80044f0:	6803      	ldr	r3, [r0, #0]
 80044f2:	07db      	lsls	r3, r3, #31
 80044f4:	d410      	bmi.n	8004518 <HAL_RCC_OscConfig+0x30>
 80044f6:	682b      	ldr	r3, [r5, #0]
 80044f8:	079f      	lsls	r7, r3, #30
 80044fa:	d45e      	bmi.n	80045ba <HAL_RCC_OscConfig+0xd2>
 80044fc:	682b      	ldr	r3, [r5, #0]
 80044fe:	0719      	lsls	r1, r3, #28
 8004500:	f100 8095 	bmi.w	800462e <HAL_RCC_OscConfig+0x146>
 8004504:	682b      	ldr	r3, [r5, #0]
 8004506:	075a      	lsls	r2, r3, #29
 8004508:	f100 80c1 	bmi.w	800468e <HAL_RCC_OscConfig+0x1a6>
 800450c:	69e8      	ldr	r0, [r5, #28]
 800450e:	2800      	cmp	r0, #0
 8004510:	f040 812c 	bne.w	800476c <HAL_RCC_OscConfig+0x284>
 8004514:	2000      	movs	r0, #0
 8004516:	e029      	b.n	800456c <HAL_RCC_OscConfig+0x84>
 8004518:	4c90      	ldr	r4, [pc, #576]	; (800475c <HAL_RCC_OscConfig+0x274>)
 800451a:	6863      	ldr	r3, [r4, #4]
 800451c:	f003 030c 	and.w	r3, r3, #12
 8004520:	2b04      	cmp	r3, #4
 8004522:	d007      	beq.n	8004534 <HAL_RCC_OscConfig+0x4c>
 8004524:	6863      	ldr	r3, [r4, #4]
 8004526:	f003 030c 	and.w	r3, r3, #12
 800452a:	2b08      	cmp	r3, #8
 800452c:	d10a      	bne.n	8004544 <HAL_RCC_OscConfig+0x5c>
 800452e:	6863      	ldr	r3, [r4, #4]
 8004530:	03de      	lsls	r6, r3, #15
 8004532:	d507      	bpl.n	8004544 <HAL_RCC_OscConfig+0x5c>
 8004534:	6823      	ldr	r3, [r4, #0]
 8004536:	039c      	lsls	r4, r3, #14
 8004538:	d5dd      	bpl.n	80044f6 <HAL_RCC_OscConfig+0xe>
 800453a:	686b      	ldr	r3, [r5, #4]
 800453c:	2b00      	cmp	r3, #0
 800453e:	d1da      	bne.n	80044f6 <HAL_RCC_OscConfig+0xe>
 8004540:	2001      	movs	r0, #1
 8004542:	e013      	b.n	800456c <HAL_RCC_OscConfig+0x84>
 8004544:	686b      	ldr	r3, [r5, #4]
 8004546:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800454a:	d112      	bne.n	8004572 <HAL_RCC_OscConfig+0x8a>
 800454c:	6823      	ldr	r3, [r4, #0]
 800454e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004552:	6023      	str	r3, [r4, #0]
 8004554:	f7ff fcfc 	bl	8003f50 <HAL_GetTick>
 8004558:	4606      	mov	r6, r0
 800455a:	6823      	ldr	r3, [r4, #0]
 800455c:	0398      	lsls	r0, r3, #14
 800455e:	d4ca      	bmi.n	80044f6 <HAL_RCC_OscConfig+0xe>
 8004560:	f7ff fcf6 	bl	8003f50 <HAL_GetTick>
 8004564:	1b80      	subs	r0, r0, r6
 8004566:	2864      	cmp	r0, #100	; 0x64
 8004568:	d9f7      	bls.n	800455a <HAL_RCC_OscConfig+0x72>
 800456a:	2003      	movs	r0, #3
 800456c:	b002      	add	sp, #8
 800456e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004572:	b99b      	cbnz	r3, 800459c <HAL_RCC_OscConfig+0xb4>
 8004574:	6823      	ldr	r3, [r4, #0]
 8004576:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800457a:	6023      	str	r3, [r4, #0]
 800457c:	6823      	ldr	r3, [r4, #0]
 800457e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004582:	6023      	str	r3, [r4, #0]
 8004584:	f7ff fce4 	bl	8003f50 <HAL_GetTick>
 8004588:	4606      	mov	r6, r0
 800458a:	6823      	ldr	r3, [r4, #0]
 800458c:	0399      	lsls	r1, r3, #14
 800458e:	d5b2      	bpl.n	80044f6 <HAL_RCC_OscConfig+0xe>
 8004590:	f7ff fcde 	bl	8003f50 <HAL_GetTick>
 8004594:	1b80      	subs	r0, r0, r6
 8004596:	2864      	cmp	r0, #100	; 0x64
 8004598:	d9f7      	bls.n	800458a <HAL_RCC_OscConfig+0xa2>
 800459a:	e7e6      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 800459c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80045a0:	6823      	ldr	r3, [r4, #0]
 80045a2:	d103      	bne.n	80045ac <HAL_RCC_OscConfig+0xc4>
 80045a4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80045a8:	6023      	str	r3, [r4, #0]
 80045aa:	e7cf      	b.n	800454c <HAL_RCC_OscConfig+0x64>
 80045ac:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80045b0:	6023      	str	r3, [r4, #0]
 80045b2:	6823      	ldr	r3, [r4, #0]
 80045b4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80045b8:	e7cb      	b.n	8004552 <HAL_RCC_OscConfig+0x6a>
 80045ba:	4c68      	ldr	r4, [pc, #416]	; (800475c <HAL_RCC_OscConfig+0x274>)
 80045bc:	6863      	ldr	r3, [r4, #4]
 80045be:	f013 0f0c 	tst.w	r3, #12
 80045c2:	d007      	beq.n	80045d4 <HAL_RCC_OscConfig+0xec>
 80045c4:	6863      	ldr	r3, [r4, #4]
 80045c6:	f003 030c 	and.w	r3, r3, #12
 80045ca:	2b08      	cmp	r3, #8
 80045cc:	d110      	bne.n	80045f0 <HAL_RCC_OscConfig+0x108>
 80045ce:	6863      	ldr	r3, [r4, #4]
 80045d0:	03da      	lsls	r2, r3, #15
 80045d2:	d40d      	bmi.n	80045f0 <HAL_RCC_OscConfig+0x108>
 80045d4:	6823      	ldr	r3, [r4, #0]
 80045d6:	079b      	lsls	r3, r3, #30
 80045d8:	d502      	bpl.n	80045e0 <HAL_RCC_OscConfig+0xf8>
 80045da:	692b      	ldr	r3, [r5, #16]
 80045dc:	2b01      	cmp	r3, #1
 80045de:	d1af      	bne.n	8004540 <HAL_RCC_OscConfig+0x58>
 80045e0:	6823      	ldr	r3, [r4, #0]
 80045e2:	696a      	ldr	r2, [r5, #20]
 80045e4:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80045e8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80045ec:	6023      	str	r3, [r4, #0]
 80045ee:	e785      	b.n	80044fc <HAL_RCC_OscConfig+0x14>
 80045f0:	692a      	ldr	r2, [r5, #16]
 80045f2:	4b5b      	ldr	r3, [pc, #364]	; (8004760 <HAL_RCC_OscConfig+0x278>)
 80045f4:	b16a      	cbz	r2, 8004612 <HAL_RCC_OscConfig+0x12a>
 80045f6:	2201      	movs	r2, #1
 80045f8:	601a      	str	r2, [r3, #0]
 80045fa:	f7ff fca9 	bl	8003f50 <HAL_GetTick>
 80045fe:	4606      	mov	r6, r0
 8004600:	6823      	ldr	r3, [r4, #0]
 8004602:	079f      	lsls	r7, r3, #30
 8004604:	d4ec      	bmi.n	80045e0 <HAL_RCC_OscConfig+0xf8>
 8004606:	f7ff fca3 	bl	8003f50 <HAL_GetTick>
 800460a:	1b80      	subs	r0, r0, r6
 800460c:	2802      	cmp	r0, #2
 800460e:	d9f7      	bls.n	8004600 <HAL_RCC_OscConfig+0x118>
 8004610:	e7ab      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 8004612:	601a      	str	r2, [r3, #0]
 8004614:	f7ff fc9c 	bl	8003f50 <HAL_GetTick>
 8004618:	4606      	mov	r6, r0
 800461a:	6823      	ldr	r3, [r4, #0]
 800461c:	0798      	lsls	r0, r3, #30
 800461e:	f57f af6d 	bpl.w	80044fc <HAL_RCC_OscConfig+0x14>
 8004622:	f7ff fc95 	bl	8003f50 <HAL_GetTick>
 8004626:	1b80      	subs	r0, r0, r6
 8004628:	2802      	cmp	r0, #2
 800462a:	d9f6      	bls.n	800461a <HAL_RCC_OscConfig+0x132>
 800462c:	e79d      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 800462e:	69aa      	ldr	r2, [r5, #24]
 8004630:	4e4a      	ldr	r6, [pc, #296]	; (800475c <HAL_RCC_OscConfig+0x274>)
 8004632:	4b4b      	ldr	r3, [pc, #300]	; (8004760 <HAL_RCC_OscConfig+0x278>)
 8004634:	b1e2      	cbz	r2, 8004670 <HAL_RCC_OscConfig+0x188>
 8004636:	2201      	movs	r2, #1
 8004638:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
 800463c:	f7ff fc88 	bl	8003f50 <HAL_GetTick>
 8004640:	4604      	mov	r4, r0
 8004642:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8004644:	079b      	lsls	r3, r3, #30
 8004646:	d50d      	bpl.n	8004664 <HAL_RCC_OscConfig+0x17c>
 8004648:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 800464c:	4b45      	ldr	r3, [pc, #276]	; (8004764 <HAL_RCC_OscConfig+0x27c>)
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	fbb3 f3f2 	udiv	r3, r3, r2
 8004654:	9301      	str	r3, [sp, #4]
 8004656:	bf00      	nop
 8004658:	9b01      	ldr	r3, [sp, #4]
 800465a:	1e5a      	subs	r2, r3, #1
 800465c:	9201      	str	r2, [sp, #4]
 800465e:	2b00      	cmp	r3, #0
 8004660:	d1f9      	bne.n	8004656 <HAL_RCC_OscConfig+0x16e>
 8004662:	e74f      	b.n	8004504 <HAL_RCC_OscConfig+0x1c>
 8004664:	f7ff fc74 	bl	8003f50 <HAL_GetTick>
 8004668:	1b00      	subs	r0, r0, r4
 800466a:	2802      	cmp	r0, #2
 800466c:	d9e9      	bls.n	8004642 <HAL_RCC_OscConfig+0x15a>
 800466e:	e77c      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 8004670:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
 8004674:	f7ff fc6c 	bl	8003f50 <HAL_GetTick>
 8004678:	4604      	mov	r4, r0
 800467a:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800467c:	079f      	lsls	r7, r3, #30
 800467e:	f57f af41 	bpl.w	8004504 <HAL_RCC_OscConfig+0x1c>
 8004682:	f7ff fc65 	bl	8003f50 <HAL_GetTick>
 8004686:	1b00      	subs	r0, r0, r4
 8004688:	2802      	cmp	r0, #2
 800468a:	d9f6      	bls.n	800467a <HAL_RCC_OscConfig+0x192>
 800468c:	e76d      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 800468e:	4c33      	ldr	r4, [pc, #204]	; (800475c <HAL_RCC_OscConfig+0x274>)
 8004690:	69e3      	ldr	r3, [r4, #28]
 8004692:	00d8      	lsls	r0, r3, #3
 8004694:	d424      	bmi.n	80046e0 <HAL_RCC_OscConfig+0x1f8>
 8004696:	2701      	movs	r7, #1
 8004698:	69e3      	ldr	r3, [r4, #28]
 800469a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800469e:	61e3      	str	r3, [r4, #28]
 80046a0:	69e3      	ldr	r3, [r4, #28]
 80046a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80046a6:	9300      	str	r3, [sp, #0]
 80046a8:	9b00      	ldr	r3, [sp, #0]
 80046aa:	4e2f      	ldr	r6, [pc, #188]	; (8004768 <HAL_RCC_OscConfig+0x280>)
 80046ac:	6833      	ldr	r3, [r6, #0]
 80046ae:	05d9      	lsls	r1, r3, #23
 80046b0:	d518      	bpl.n	80046e4 <HAL_RCC_OscConfig+0x1fc>
 80046b2:	68eb      	ldr	r3, [r5, #12]
 80046b4:	2b01      	cmp	r3, #1
 80046b6:	d126      	bne.n	8004706 <HAL_RCC_OscConfig+0x21e>
 80046b8:	6a23      	ldr	r3, [r4, #32]
 80046ba:	f043 0301 	orr.w	r3, r3, #1
 80046be:	6223      	str	r3, [r4, #32]
 80046c0:	f7ff fc46 	bl	8003f50 <HAL_GetTick>
 80046c4:	f241 3888 	movw	r8, #5000	; 0x1388
 80046c8:	4606      	mov	r6, r0
 80046ca:	6a23      	ldr	r3, [r4, #32]
 80046cc:	079b      	lsls	r3, r3, #30
 80046ce:	d53f      	bpl.n	8004750 <HAL_RCC_OscConfig+0x268>
 80046d0:	2f00      	cmp	r7, #0
 80046d2:	f43f af1b 	beq.w	800450c <HAL_RCC_OscConfig+0x24>
 80046d6:	69e3      	ldr	r3, [r4, #28]
 80046d8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80046dc:	61e3      	str	r3, [r4, #28]
 80046de:	e715      	b.n	800450c <HAL_RCC_OscConfig+0x24>
 80046e0:	2700      	movs	r7, #0
 80046e2:	e7e2      	b.n	80046aa <HAL_RCC_OscConfig+0x1c2>
 80046e4:	6833      	ldr	r3, [r6, #0]
 80046e6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80046ea:	6033      	str	r3, [r6, #0]
 80046ec:	f7ff fc30 	bl	8003f50 <HAL_GetTick>
 80046f0:	4680      	mov	r8, r0
 80046f2:	6833      	ldr	r3, [r6, #0]
 80046f4:	05da      	lsls	r2, r3, #23
 80046f6:	d4dc      	bmi.n	80046b2 <HAL_RCC_OscConfig+0x1ca>
 80046f8:	f7ff fc2a 	bl	8003f50 <HAL_GetTick>
 80046fc:	eba0 0008 	sub.w	r0, r0, r8
 8004700:	2864      	cmp	r0, #100	; 0x64
 8004702:	d9f6      	bls.n	80046f2 <HAL_RCC_OscConfig+0x20a>
 8004704:	e731      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 8004706:	b9ab      	cbnz	r3, 8004734 <HAL_RCC_OscConfig+0x24c>
 8004708:	6a23      	ldr	r3, [r4, #32]
 800470a:	f241 3888 	movw	r8, #5000	; 0x1388
 800470e:	f023 0301 	bic.w	r3, r3, #1
 8004712:	6223      	str	r3, [r4, #32]
 8004714:	6a23      	ldr	r3, [r4, #32]
 8004716:	f023 0304 	bic.w	r3, r3, #4
 800471a:	6223      	str	r3, [r4, #32]
 800471c:	f7ff fc18 	bl	8003f50 <HAL_GetTick>
 8004720:	4606      	mov	r6, r0
 8004722:	6a23      	ldr	r3, [r4, #32]
 8004724:	0798      	lsls	r0, r3, #30
 8004726:	d5d3      	bpl.n	80046d0 <HAL_RCC_OscConfig+0x1e8>
 8004728:	f7ff fc12 	bl	8003f50 <HAL_GetTick>
 800472c:	1b80      	subs	r0, r0, r6
 800472e:	4540      	cmp	r0, r8
 8004730:	d9f7      	bls.n	8004722 <HAL_RCC_OscConfig+0x23a>
 8004732:	e71a      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 8004734:	2b05      	cmp	r3, #5
 8004736:	6a23      	ldr	r3, [r4, #32]
 8004738:	d103      	bne.n	8004742 <HAL_RCC_OscConfig+0x25a>
 800473a:	f043 0304 	orr.w	r3, r3, #4
 800473e:	6223      	str	r3, [r4, #32]
 8004740:	e7ba      	b.n	80046b8 <HAL_RCC_OscConfig+0x1d0>
 8004742:	f023 0301 	bic.w	r3, r3, #1
 8004746:	6223      	str	r3, [r4, #32]
 8004748:	6a23      	ldr	r3, [r4, #32]
 800474a:	f023 0304 	bic.w	r3, r3, #4
 800474e:	e7b6      	b.n	80046be <HAL_RCC_OscConfig+0x1d6>
 8004750:	f7ff fbfe 	bl	8003f50 <HAL_GetTick>
 8004754:	1b80      	subs	r0, r0, r6
 8004756:	4540      	cmp	r0, r8
 8004758:	d9b7      	bls.n	80046ca <HAL_RCC_OscConfig+0x1e2>
 800475a:	e706      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 800475c:	40021000 	.word	0x40021000
 8004760:	42420000 	.word	0x42420000
 8004764:	20000000 	.word	0x20000000
 8004768:	40007000 	.word	0x40007000
 800476c:	4c2a      	ldr	r4, [pc, #168]	; (8004818 <HAL_RCC_OscConfig+0x330>)
 800476e:	6863      	ldr	r3, [r4, #4]
 8004770:	f003 030c 	and.w	r3, r3, #12
 8004774:	2b08      	cmp	r3, #8
 8004776:	d03e      	beq.n	80047f6 <HAL_RCC_OscConfig+0x30e>
 8004778:	2200      	movs	r2, #0
 800477a:	4b28      	ldr	r3, [pc, #160]	; (800481c <HAL_RCC_OscConfig+0x334>)
 800477c:	2802      	cmp	r0, #2
 800477e:	661a      	str	r2, [r3, #96]	; 0x60
 8004780:	d12c      	bne.n	80047dc <HAL_RCC_OscConfig+0x2f4>
 8004782:	f7ff fbe5 	bl	8003f50 <HAL_GetTick>
 8004786:	4606      	mov	r6, r0
 8004788:	6823      	ldr	r3, [r4, #0]
 800478a:	0199      	lsls	r1, r3, #6
 800478c:	d420      	bmi.n	80047d0 <HAL_RCC_OscConfig+0x2e8>
 800478e:	6a2b      	ldr	r3, [r5, #32]
 8004790:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004794:	d105      	bne.n	80047a2 <HAL_RCC_OscConfig+0x2ba>
 8004796:	6862      	ldr	r2, [r4, #4]
 8004798:	68a9      	ldr	r1, [r5, #8]
 800479a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 800479e:	430a      	orrs	r2, r1
 80047a0:	6062      	str	r2, [r4, #4]
 80047a2:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80047a4:	6862      	ldr	r2, [r4, #4]
 80047a6:	430b      	orrs	r3, r1
 80047a8:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 80047ac:	4313      	orrs	r3, r2
 80047ae:	2201      	movs	r2, #1
 80047b0:	6063      	str	r3, [r4, #4]
 80047b2:	4b1a      	ldr	r3, [pc, #104]	; (800481c <HAL_RCC_OscConfig+0x334>)
 80047b4:	661a      	str	r2, [r3, #96]	; 0x60
 80047b6:	f7ff fbcb 	bl	8003f50 <HAL_GetTick>
 80047ba:	4605      	mov	r5, r0
 80047bc:	6823      	ldr	r3, [r4, #0]
 80047be:	019a      	lsls	r2, r3, #6
 80047c0:	f53f aea8 	bmi.w	8004514 <HAL_RCC_OscConfig+0x2c>
 80047c4:	f7ff fbc4 	bl	8003f50 <HAL_GetTick>
 80047c8:	1b40      	subs	r0, r0, r5
 80047ca:	2802      	cmp	r0, #2
 80047cc:	d9f6      	bls.n	80047bc <HAL_RCC_OscConfig+0x2d4>
 80047ce:	e6cc      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 80047d0:	f7ff fbbe 	bl	8003f50 <HAL_GetTick>
 80047d4:	1b80      	subs	r0, r0, r6
 80047d6:	2802      	cmp	r0, #2
 80047d8:	d9d6      	bls.n	8004788 <HAL_RCC_OscConfig+0x2a0>
 80047da:	e6c6      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 80047dc:	f7ff fbb8 	bl	8003f50 <HAL_GetTick>
 80047e0:	4605      	mov	r5, r0
 80047e2:	6823      	ldr	r3, [r4, #0]
 80047e4:	019b      	lsls	r3, r3, #6
 80047e6:	f57f ae95 	bpl.w	8004514 <HAL_RCC_OscConfig+0x2c>
 80047ea:	f7ff fbb1 	bl	8003f50 <HAL_GetTick>
 80047ee:	1b40      	subs	r0, r0, r5
 80047f0:	2802      	cmp	r0, #2
 80047f2:	d9f6      	bls.n	80047e2 <HAL_RCC_OscConfig+0x2fa>
 80047f4:	e6b9      	b.n	800456a <HAL_RCC_OscConfig+0x82>
 80047f6:	2801      	cmp	r0, #1
 80047f8:	f43f aeb8 	beq.w	800456c <HAL_RCC_OscConfig+0x84>
 80047fc:	6863      	ldr	r3, [r4, #4]
 80047fe:	6a2a      	ldr	r2, [r5, #32]
 8004800:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
 8004804:	4291      	cmp	r1, r2
 8004806:	f47f ae9b 	bne.w	8004540 <HAL_RCC_OscConfig+0x58>
 800480a:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800480c:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 8004810:	4293      	cmp	r3, r2
 8004812:	f43f ae7f 	beq.w	8004514 <HAL_RCC_OscConfig+0x2c>
 8004816:	e693      	b.n	8004540 <HAL_RCC_OscConfig+0x58>
 8004818:	40021000 	.word	0x40021000
 800481c:	42420000 	.word	0x42420000

08004820 <HAL_RCC_GetSysClockFreq>:
 8004820:	b530      	push	{r4, r5, lr}
 8004822:	4b18      	ldr	r3, [pc, #96]	; (8004884 <HAL_RCC_GetSysClockFreq+0x64>)
 8004824:	b087      	sub	sp, #28
 8004826:	ac02      	add	r4, sp, #8
 8004828:	f103 0510 	add.w	r5, r3, #16
 800482c:	4622      	mov	r2, r4
 800482e:	6818      	ldr	r0, [r3, #0]
 8004830:	6859      	ldr	r1, [r3, #4]
 8004832:	3308      	adds	r3, #8
 8004834:	c203      	stmia	r2!, {r0, r1}
 8004836:	42ab      	cmp	r3, r5
 8004838:	4614      	mov	r4, r2
 800483a:	d1f7      	bne.n	800482c <HAL_RCC_GetSysClockFreq+0xc>
 800483c:	f240 2301 	movw	r3, #513	; 0x201
 8004840:	4911      	ldr	r1, [pc, #68]	; (8004888 <HAL_RCC_GetSysClockFreq+0x68>)
 8004842:	f8ad 3004 	strh.w	r3, [sp, #4]
 8004846:	684b      	ldr	r3, [r1, #4]
 8004848:	f003 020c 	and.w	r2, r3, #12
 800484c:	2a08      	cmp	r2, #8
 800484e:	d117      	bne.n	8004880 <HAL_RCC_GetSysClockFreq+0x60>
 8004850:	f3c3 4283 	ubfx	r2, r3, #18, #4
 8004854:	3218      	adds	r2, #24
 8004856:	446a      	add	r2, sp
 8004858:	03db      	lsls	r3, r3, #15
 800485a:	f812 0c10 	ldrb.w	r0, [r2, #-16]
 800485e:	d50c      	bpl.n	800487a <HAL_RCC_GetSysClockFreq+0x5a>
 8004860:	684b      	ldr	r3, [r1, #4]
 8004862:	4a0a      	ldr	r2, [pc, #40]	; (800488c <HAL_RCC_GetSysClockFreq+0x6c>)
 8004864:	f3c3 4340 	ubfx	r3, r3, #17, #1
 8004868:	4350      	muls	r0, r2
 800486a:	3318      	adds	r3, #24
 800486c:	446b      	add	r3, sp
 800486e:	f813 3c14 	ldrb.w	r3, [r3, #-20]
 8004872:	fbb0 f0f3 	udiv	r0, r0, r3
 8004876:	b007      	add	sp, #28
 8004878:	bd30      	pop	{r4, r5, pc}
 800487a:	4b05      	ldr	r3, [pc, #20]	; (8004890 <HAL_RCC_GetSysClockFreq+0x70>)
 800487c:	4358      	muls	r0, r3
 800487e:	e7fa      	b.n	8004876 <HAL_RCC_GetSysClockFreq+0x56>
 8004880:	4802      	ldr	r0, [pc, #8]	; (800488c <HAL_RCC_GetSysClockFreq+0x6c>)
 8004882:	e7f8      	b.n	8004876 <HAL_RCC_GetSysClockFreq+0x56>
 8004884:	08006a10 	.word	0x08006a10
 8004888:	40021000 	.word	0x40021000
 800488c:	007a1200 	.word	0x007a1200
 8004890:	003d0900 	.word	0x003d0900

08004894 <HAL_RCC_ClockConfig>:
 8004894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004898:	460d      	mov	r5, r1
 800489a:	4604      	mov	r4, r0
 800489c:	b910      	cbnz	r0, 80048a4 <HAL_RCC_ClockConfig+0x10>
 800489e:	2001      	movs	r0, #1
 80048a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80048a4:	4a44      	ldr	r2, [pc, #272]	; (80049b8 <HAL_RCC_ClockConfig+0x124>)
 80048a6:	6813      	ldr	r3, [r2, #0]
 80048a8:	f003 0307 	and.w	r3, r3, #7
 80048ac:	428b      	cmp	r3, r1
 80048ae:	d328      	bcc.n	8004902 <HAL_RCC_ClockConfig+0x6e>
 80048b0:	6821      	ldr	r1, [r4, #0]
 80048b2:	078e      	lsls	r6, r1, #30
 80048b4:	d430      	bmi.n	8004918 <HAL_RCC_ClockConfig+0x84>
 80048b6:	07ca      	lsls	r2, r1, #31
 80048b8:	d443      	bmi.n	8004942 <HAL_RCC_ClockConfig+0xae>
 80048ba:	4a3f      	ldr	r2, [pc, #252]	; (80049b8 <HAL_RCC_ClockConfig+0x124>)
 80048bc:	6813      	ldr	r3, [r2, #0]
 80048be:	f003 0307 	and.w	r3, r3, #7
 80048c2:	42ab      	cmp	r3, r5
 80048c4:	d865      	bhi.n	8004992 <HAL_RCC_ClockConfig+0xfe>
 80048c6:	6822      	ldr	r2, [r4, #0]
 80048c8:	4d3c      	ldr	r5, [pc, #240]	; (80049bc <HAL_RCC_ClockConfig+0x128>)
 80048ca:	f012 0f04 	tst.w	r2, #4
 80048ce:	d16c      	bne.n	80049aa <HAL_RCC_ClockConfig+0x116>
 80048d0:	0713      	lsls	r3, r2, #28
 80048d2:	d506      	bpl.n	80048e2 <HAL_RCC_ClockConfig+0x4e>
 80048d4:	686b      	ldr	r3, [r5, #4]
 80048d6:	6922      	ldr	r2, [r4, #16]
 80048d8:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 80048dc:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80048e0:	606b      	str	r3, [r5, #4]
 80048e2:	f7ff ff9d 	bl	8004820 <HAL_RCC_GetSysClockFreq>
 80048e6:	686b      	ldr	r3, [r5, #4]
 80048e8:	4a35      	ldr	r2, [pc, #212]	; (80049c0 <HAL_RCC_ClockConfig+0x12c>)
 80048ea:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80048ee:	5cd3      	ldrb	r3, [r2, r3]
 80048f0:	40d8      	lsrs	r0, r3
 80048f2:	4b34      	ldr	r3, [pc, #208]	; (80049c4 <HAL_RCC_ClockConfig+0x130>)
 80048f4:	6018      	str	r0, [r3, #0]
 80048f6:	4b34      	ldr	r3, [pc, #208]	; (80049c8 <HAL_RCC_ClockConfig+0x134>)
 80048f8:	6818      	ldr	r0, [r3, #0]
 80048fa:	f7ff fae7 	bl	8003ecc <HAL_InitTick>
 80048fe:	2000      	movs	r0, #0
 8004900:	e7ce      	b.n	80048a0 <HAL_RCC_ClockConfig+0xc>
 8004902:	6813      	ldr	r3, [r2, #0]
 8004904:	f023 0307 	bic.w	r3, r3, #7
 8004908:	430b      	orrs	r3, r1
 800490a:	6013      	str	r3, [r2, #0]
 800490c:	6813      	ldr	r3, [r2, #0]
 800490e:	f003 0307 	and.w	r3, r3, #7
 8004912:	428b      	cmp	r3, r1
 8004914:	d1c3      	bne.n	800489e <HAL_RCC_ClockConfig+0xa>
 8004916:	e7cb      	b.n	80048b0 <HAL_RCC_ClockConfig+0x1c>
 8004918:	4b28      	ldr	r3, [pc, #160]	; (80049bc <HAL_RCC_ClockConfig+0x128>)
 800491a:	f011 0f04 	tst.w	r1, #4
 800491e:	bf1e      	ittt	ne
 8004920:	685a      	ldrne	r2, [r3, #4]
 8004922:	f442 62e0 	orrne.w	r2, r2, #1792	; 0x700
 8004926:	605a      	strne	r2, [r3, #4]
 8004928:	0708      	lsls	r0, r1, #28
 800492a:	bf42      	ittt	mi
 800492c:	685a      	ldrmi	r2, [r3, #4]
 800492e:	f442 5260 	orrmi.w	r2, r2, #14336	; 0x3800
 8004932:	605a      	strmi	r2, [r3, #4]
 8004934:	685a      	ldr	r2, [r3, #4]
 8004936:	68a0      	ldr	r0, [r4, #8]
 8004938:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800493c:	4302      	orrs	r2, r0
 800493e:	605a      	str	r2, [r3, #4]
 8004940:	e7b9      	b.n	80048b6 <HAL_RCC_ClockConfig+0x22>
 8004942:	6862      	ldr	r2, [r4, #4]
 8004944:	4e1d      	ldr	r6, [pc, #116]	; (80049bc <HAL_RCC_ClockConfig+0x128>)
 8004946:	2a01      	cmp	r2, #1
 8004948:	6833      	ldr	r3, [r6, #0]
 800494a:	d11a      	bne.n	8004982 <HAL_RCC_ClockConfig+0xee>
 800494c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8004950:	d0a5      	beq.n	800489e <HAL_RCC_ClockConfig+0xa>
 8004952:	6873      	ldr	r3, [r6, #4]
 8004954:	f241 3888 	movw	r8, #5000	; 0x1388
 8004958:	f023 0303 	bic.w	r3, r3, #3
 800495c:	4313      	orrs	r3, r2
 800495e:	6073      	str	r3, [r6, #4]
 8004960:	f7ff faf6 	bl	8003f50 <HAL_GetTick>
 8004964:	4607      	mov	r7, r0
 8004966:	6873      	ldr	r3, [r6, #4]
 8004968:	6862      	ldr	r2, [r4, #4]
 800496a:	f003 030c 	and.w	r3, r3, #12
 800496e:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8004972:	d0a2      	beq.n	80048ba <HAL_RCC_ClockConfig+0x26>
 8004974:	f7ff faec 	bl	8003f50 <HAL_GetTick>
 8004978:	1bc0      	subs	r0, r0, r7
 800497a:	4540      	cmp	r0, r8
 800497c:	d9f3      	bls.n	8004966 <HAL_RCC_ClockConfig+0xd2>
 800497e:	2003      	movs	r0, #3
 8004980:	e78e      	b.n	80048a0 <HAL_RCC_ClockConfig+0xc>
 8004982:	2a02      	cmp	r2, #2
 8004984:	d102      	bne.n	800498c <HAL_RCC_ClockConfig+0xf8>
 8004986:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800498a:	e7e1      	b.n	8004950 <HAL_RCC_ClockConfig+0xbc>
 800498c:	f013 0f02 	tst.w	r3, #2
 8004990:	e7de      	b.n	8004950 <HAL_RCC_ClockConfig+0xbc>
 8004992:	6813      	ldr	r3, [r2, #0]
 8004994:	f023 0307 	bic.w	r3, r3, #7
 8004998:	432b      	orrs	r3, r5
 800499a:	6013      	str	r3, [r2, #0]
 800499c:	6813      	ldr	r3, [r2, #0]
 800499e:	f003 0307 	and.w	r3, r3, #7
 80049a2:	42ab      	cmp	r3, r5
 80049a4:	f47f af7b 	bne.w	800489e <HAL_RCC_ClockConfig+0xa>
 80049a8:	e78d      	b.n	80048c6 <HAL_RCC_ClockConfig+0x32>
 80049aa:	686b      	ldr	r3, [r5, #4]
 80049ac:	68e1      	ldr	r1, [r4, #12]
 80049ae:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80049b2:	430b      	orrs	r3, r1
 80049b4:	606b      	str	r3, [r5, #4]
 80049b6:	e78b      	b.n	80048d0 <HAL_RCC_ClockConfig+0x3c>
 80049b8:	40022000 	.word	0x40022000
 80049bc:	40021000 	.word	0x40021000
 80049c0:	0800698c 	.word	0x0800698c
 80049c4:	20000000 	.word	0x20000000
 80049c8:	20000008 	.word	0x20000008

080049cc <HAL_RCC_GetPCLK1Freq>:
 80049cc:	4b04      	ldr	r3, [pc, #16]	; (80049e0 <HAL_RCC_GetPCLK1Freq+0x14>)
 80049ce:	4a05      	ldr	r2, [pc, #20]	; (80049e4 <HAL_RCC_GetPCLK1Freq+0x18>)
 80049d0:	685b      	ldr	r3, [r3, #4]
 80049d2:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80049d6:	5cd3      	ldrb	r3, [r2, r3]
 80049d8:	4a03      	ldr	r2, [pc, #12]	; (80049e8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80049da:	6810      	ldr	r0, [r2, #0]
 80049dc:	40d8      	lsrs	r0, r3
 80049de:	4770      	bx	lr
 80049e0:	40021000 	.word	0x40021000
 80049e4:	0800699c 	.word	0x0800699c
 80049e8:	20000000 	.word	0x20000000

080049ec <TIM_OC1_SetConfig>:
 80049ec:	6a03      	ldr	r3, [r0, #32]
 80049ee:	b570      	push	{r4, r5, r6, lr}
 80049f0:	f023 0301 	bic.w	r3, r3, #1
 80049f4:	6203      	str	r3, [r0, #32]
 80049f6:	6a03      	ldr	r3, [r0, #32]
 80049f8:	6844      	ldr	r4, [r0, #4]
 80049fa:	6982      	ldr	r2, [r0, #24]
 80049fc:	680d      	ldr	r5, [r1, #0]
 80049fe:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8004a02:	432a      	orrs	r2, r5
 8004a04:	688d      	ldr	r5, [r1, #8]
 8004a06:	f023 0302 	bic.w	r3, r3, #2
 8004a0a:	432b      	orrs	r3, r5
 8004a0c:	4d0a      	ldr	r5, [pc, #40]	; (8004a38 <TIM_OC1_SetConfig+0x4c>)
 8004a0e:	42a8      	cmp	r0, r5
 8004a10:	d10b      	bne.n	8004a2a <TIM_OC1_SetConfig+0x3e>
 8004a12:	68cd      	ldr	r5, [r1, #12]
 8004a14:	f023 0308 	bic.w	r3, r3, #8
 8004a18:	432b      	orrs	r3, r5
 8004a1a:	f424 7440 	bic.w	r4, r4, #768	; 0x300
 8004a1e:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
 8004a22:	4335      	orrs	r5, r6
 8004a24:	f023 0304 	bic.w	r3, r3, #4
 8004a28:	432c      	orrs	r4, r5
 8004a2a:	6044      	str	r4, [r0, #4]
 8004a2c:	6182      	str	r2, [r0, #24]
 8004a2e:	684a      	ldr	r2, [r1, #4]
 8004a30:	6342      	str	r2, [r0, #52]	; 0x34
 8004a32:	6203      	str	r3, [r0, #32]
 8004a34:	bd70      	pop	{r4, r5, r6, pc}
 8004a36:	bf00      	nop
 8004a38:	40012c00 	.word	0x40012c00

08004a3c <TIM_OC3_SetConfig>:
 8004a3c:	6a03      	ldr	r3, [r0, #32]
 8004a3e:	b570      	push	{r4, r5, r6, lr}
 8004a40:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004a44:	6203      	str	r3, [r0, #32]
 8004a46:	6a03      	ldr	r3, [r0, #32]
 8004a48:	6844      	ldr	r4, [r0, #4]
 8004a4a:	69c2      	ldr	r2, [r0, #28]
 8004a4c:	680d      	ldr	r5, [r1, #0]
 8004a4e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8004a52:	432a      	orrs	r2, r5
 8004a54:	688d      	ldr	r5, [r1, #8]
 8004a56:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004a5a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8004a5e:	4d0b      	ldr	r5, [pc, #44]	; (8004a8c <TIM_OC3_SetConfig+0x50>)
 8004a60:	42a8      	cmp	r0, r5
 8004a62:	d10d      	bne.n	8004a80 <TIM_OC3_SetConfig+0x44>
 8004a64:	68cd      	ldr	r5, [r1, #12]
 8004a66:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004a6a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8004a6e:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
 8004a72:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
 8004a76:	4335      	orrs	r5, r6
 8004a78:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004a7c:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
 8004a80:	6044      	str	r4, [r0, #4]
 8004a82:	61c2      	str	r2, [r0, #28]
 8004a84:	684a      	ldr	r2, [r1, #4]
 8004a86:	63c2      	str	r2, [r0, #60]	; 0x3c
 8004a88:	6203      	str	r3, [r0, #32]
 8004a8a:	bd70      	pop	{r4, r5, r6, pc}
 8004a8c:	40012c00 	.word	0x40012c00

08004a90 <TIM_OC4_SetConfig>:
 8004a90:	6a03      	ldr	r3, [r0, #32]
 8004a92:	b530      	push	{r4, r5, lr}
 8004a94:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004a98:	6203      	str	r3, [r0, #32]
 8004a9a:	6a03      	ldr	r3, [r0, #32]
 8004a9c:	6844      	ldr	r4, [r0, #4]
 8004a9e:	69c2      	ldr	r2, [r0, #28]
 8004aa0:	680d      	ldr	r5, [r1, #0]
 8004aa2:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8004aa6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8004aaa:	688d      	ldr	r5, [r1, #8]
 8004aac:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004ab0:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
 8004ab4:	4d06      	ldr	r5, [pc, #24]	; (8004ad0 <TIM_OC4_SetConfig+0x40>)
 8004ab6:	42a8      	cmp	r0, r5
 8004ab8:	bf02      	ittt	eq
 8004aba:	694d      	ldreq	r5, [r1, #20]
 8004abc:	f424 4480 	biceq.w	r4, r4, #16384	; 0x4000
 8004ac0:	ea44 1485 	orreq.w	r4, r4, r5, lsl #6
 8004ac4:	6044      	str	r4, [r0, #4]
 8004ac6:	61c2      	str	r2, [r0, #28]
 8004ac8:	684a      	ldr	r2, [r1, #4]
 8004aca:	6402      	str	r2, [r0, #64]	; 0x40
 8004acc:	6203      	str	r3, [r0, #32]
 8004ace:	bd30      	pop	{r4, r5, pc}
 8004ad0:	40012c00 	.word	0x40012c00

08004ad4 <HAL_TIM_PWM_MspInit>:
 8004ad4:	4770      	bx	lr
	...

08004ad8 <TIM_Base_SetConfig>:
 8004ad8:	4a16      	ldr	r2, [pc, #88]	; (8004b34 <TIM_Base_SetConfig+0x5c>)
 8004ada:	b510      	push	{r4, lr}
 8004adc:	4290      	cmp	r0, r2
 8004ade:	6803      	ldr	r3, [r0, #0]
 8004ae0:	d005      	beq.n	8004aee <TIM_Base_SetConfig+0x16>
 8004ae2:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004ae6:	d002      	beq.n	8004aee <TIM_Base_SetConfig+0x16>
 8004ae8:	4c13      	ldr	r4, [pc, #76]	; (8004b38 <TIM_Base_SetConfig+0x60>)
 8004aea:	42a0      	cmp	r0, r4
 8004aec:	d110      	bne.n	8004b10 <TIM_Base_SetConfig+0x38>
 8004aee:	684c      	ldr	r4, [r1, #4]
 8004af0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004af4:	4290      	cmp	r0, r2
 8004af6:	ea43 0304 	orr.w	r3, r3, r4
 8004afa:	d005      	beq.n	8004b08 <TIM_Base_SetConfig+0x30>
 8004afc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004b00:	d002      	beq.n	8004b08 <TIM_Base_SetConfig+0x30>
 8004b02:	4a0d      	ldr	r2, [pc, #52]	; (8004b38 <TIM_Base_SetConfig+0x60>)
 8004b04:	4290      	cmp	r0, r2
 8004b06:	d103      	bne.n	8004b10 <TIM_Base_SetConfig+0x38>
 8004b08:	68ca      	ldr	r2, [r1, #12]
 8004b0a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004b0e:	4313      	orrs	r3, r2
 8004b10:	694a      	ldr	r2, [r1, #20]
 8004b12:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004b16:	4313      	orrs	r3, r2
 8004b18:	6003      	str	r3, [r0, #0]
 8004b1a:	688b      	ldr	r3, [r1, #8]
 8004b1c:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004b1e:	680b      	ldr	r3, [r1, #0]
 8004b20:	6283      	str	r3, [r0, #40]	; 0x28
 8004b22:	4b04      	ldr	r3, [pc, #16]	; (8004b34 <TIM_Base_SetConfig+0x5c>)
 8004b24:	4298      	cmp	r0, r3
 8004b26:	bf04      	itt	eq
 8004b28:	690b      	ldreq	r3, [r1, #16]
 8004b2a:	6303      	streq	r3, [r0, #48]	; 0x30
 8004b2c:	2301      	movs	r3, #1
 8004b2e:	6143      	str	r3, [r0, #20]
 8004b30:	bd10      	pop	{r4, pc}
 8004b32:	bf00      	nop
 8004b34:	40012c00 	.word	0x40012c00
 8004b38:	40000400 	.word	0x40000400

08004b3c <HAL_TIM_Base_Init>:
 8004b3c:	b510      	push	{r4, lr}
 8004b3e:	4604      	mov	r4, r0
 8004b40:	b330      	cbz	r0, 8004b90 <HAL_TIM_Base_Init+0x54>
 8004b42:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004b46:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004b4a:	b91b      	cbnz	r3, 8004b54 <HAL_TIM_Base_Init+0x18>
 8004b4c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8004b50:	f7fe fcdc 	bl	800350c <HAL_TIM_Base_MspInit>
 8004b54:	2302      	movs	r3, #2
 8004b56:	6820      	ldr	r0, [r4, #0]
 8004b58:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004b5c:	1d21      	adds	r1, r4, #4
 8004b5e:	f7ff ffbb 	bl	8004ad8 <TIM_Base_SetConfig>
 8004b62:	2301      	movs	r3, #1
 8004b64:	2000      	movs	r0, #0
 8004b66:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8004b6a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004b6e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8004b72:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8004b76:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8004b7a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004b7e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004b82:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8004b86:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004b8a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004b8e:	bd10      	pop	{r4, pc}
 8004b90:	2001      	movs	r0, #1
 8004b92:	e7fc      	b.n	8004b8e <HAL_TIM_Base_Init+0x52>

08004b94 <HAL_TIM_PWM_Init>:
 8004b94:	b510      	push	{r4, lr}
 8004b96:	4604      	mov	r4, r0
 8004b98:	b330      	cbz	r0, 8004be8 <HAL_TIM_PWM_Init+0x54>
 8004b9a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004b9e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004ba2:	b91b      	cbnz	r3, 8004bac <HAL_TIM_PWM_Init+0x18>
 8004ba4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8004ba8:	f7ff ff94 	bl	8004ad4 <HAL_TIM_PWM_MspInit>
 8004bac:	2302      	movs	r3, #2
 8004bae:	6820      	ldr	r0, [r4, #0]
 8004bb0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004bb4:	1d21      	adds	r1, r4, #4
 8004bb6:	f7ff ff8f 	bl	8004ad8 <TIM_Base_SetConfig>
 8004bba:	2301      	movs	r3, #1
 8004bbc:	2000      	movs	r0, #0
 8004bbe:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8004bc2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004bc6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8004bca:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8004bce:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8004bd2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004bd6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004bda:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8004bde:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004be2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004be6:	bd10      	pop	{r4, pc}
 8004be8:	2001      	movs	r0, #1
 8004bea:	e7fc      	b.n	8004be6 <HAL_TIM_PWM_Init+0x52>

08004bec <TIM_OC2_SetConfig>:
 8004bec:	6a03      	ldr	r3, [r0, #32]
 8004bee:	b570      	push	{r4, r5, r6, lr}
 8004bf0:	f023 0310 	bic.w	r3, r3, #16
 8004bf4:	6203      	str	r3, [r0, #32]
 8004bf6:	6a03      	ldr	r3, [r0, #32]
 8004bf8:	6844      	ldr	r4, [r0, #4]
 8004bfa:	6982      	ldr	r2, [r0, #24]
 8004bfc:	680d      	ldr	r5, [r1, #0]
 8004bfe:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8004c02:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8004c06:	688d      	ldr	r5, [r1, #8]
 8004c08:	f023 0320 	bic.w	r3, r3, #32
 8004c0c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004c10:	4d0b      	ldr	r5, [pc, #44]	; (8004c40 <TIM_OC2_SetConfig+0x54>)
 8004c12:	42a8      	cmp	r0, r5
 8004c14:	d10d      	bne.n	8004c32 <TIM_OC2_SetConfig+0x46>
 8004c16:	68cd      	ldr	r5, [r1, #12]
 8004c18:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004c1c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004c20:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
 8004c24:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
 8004c28:	4335      	orrs	r5, r6
 8004c2a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004c2e:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
 8004c32:	6044      	str	r4, [r0, #4]
 8004c34:	6182      	str	r2, [r0, #24]
 8004c36:	684a      	ldr	r2, [r1, #4]
 8004c38:	6382      	str	r2, [r0, #56]	; 0x38
 8004c3a:	6203      	str	r3, [r0, #32]
 8004c3c:	bd70      	pop	{r4, r5, r6, pc}
 8004c3e:	bf00      	nop
 8004c40:	40012c00 	.word	0x40012c00

08004c44 <HAL_TIM_PWM_ConfigChannel>:
 8004c44:	b538      	push	{r3, r4, r5, lr}
 8004c46:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8004c4a:	4604      	mov	r4, r0
 8004c4c:	2b01      	cmp	r3, #1
 8004c4e:	d052      	beq.n	8004cf6 <HAL_TIM_PWM_ConfigChannel+0xb2>
 8004c50:	2301      	movs	r3, #1
 8004c52:	2a08      	cmp	r2, #8
 8004c54:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8004c58:	d03c      	beq.n	8004cd4 <HAL_TIM_PWM_ConfigChannel+0x90>
 8004c5a:	d806      	bhi.n	8004c6a <HAL_TIM_PWM_ConfigChannel+0x26>
 8004c5c:	b1c2      	cbz	r2, 8004c90 <HAL_TIM_PWM_ConfigChannel+0x4c>
 8004c5e:	2a04      	cmp	r2, #4
 8004c60:	d027      	beq.n	8004cb2 <HAL_TIM_PWM_ConfigChannel+0x6e>
 8004c62:	2000      	movs	r0, #0
 8004c64:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
 8004c68:	bd38      	pop	{r3, r4, r5, pc}
 8004c6a:	2a0c      	cmp	r2, #12
 8004c6c:	d1f9      	bne.n	8004c62 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004c6e:	6800      	ldr	r0, [r0, #0]
 8004c70:	f7ff ff0e 	bl	8004a90 <TIM_OC4_SetConfig>
 8004c74:	6823      	ldr	r3, [r4, #0]
 8004c76:	6909      	ldr	r1, [r1, #16]
 8004c78:	69da      	ldr	r2, [r3, #28]
 8004c7a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004c7e:	61da      	str	r2, [r3, #28]
 8004c80:	69da      	ldr	r2, [r3, #28]
 8004c82:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c86:	61da      	str	r2, [r3, #28]
 8004c88:	69da      	ldr	r2, [r3, #28]
 8004c8a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004c8e:	e030      	b.n	8004cf2 <HAL_TIM_PWM_ConfigChannel+0xae>
 8004c90:	6800      	ldr	r0, [r0, #0]
 8004c92:	f7ff feab 	bl	80049ec <TIM_OC1_SetConfig>
 8004c96:	6823      	ldr	r3, [r4, #0]
 8004c98:	6909      	ldr	r1, [r1, #16]
 8004c9a:	699a      	ldr	r2, [r3, #24]
 8004c9c:	f042 0208 	orr.w	r2, r2, #8
 8004ca0:	619a      	str	r2, [r3, #24]
 8004ca2:	699a      	ldr	r2, [r3, #24]
 8004ca4:	f022 0204 	bic.w	r2, r2, #4
 8004ca8:	619a      	str	r2, [r3, #24]
 8004caa:	699a      	ldr	r2, [r3, #24]
 8004cac:	430a      	orrs	r2, r1
 8004cae:	619a      	str	r2, [r3, #24]
 8004cb0:	e7d7      	b.n	8004c62 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004cb2:	6800      	ldr	r0, [r0, #0]
 8004cb4:	f7ff ff9a 	bl	8004bec <TIM_OC2_SetConfig>
 8004cb8:	6823      	ldr	r3, [r4, #0]
 8004cba:	6909      	ldr	r1, [r1, #16]
 8004cbc:	699a      	ldr	r2, [r3, #24]
 8004cbe:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004cc2:	619a      	str	r2, [r3, #24]
 8004cc4:	699a      	ldr	r2, [r3, #24]
 8004cc6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004cca:	619a      	str	r2, [r3, #24]
 8004ccc:	699a      	ldr	r2, [r3, #24]
 8004cce:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004cd2:	e7ec      	b.n	8004cae <HAL_TIM_PWM_ConfigChannel+0x6a>
 8004cd4:	6800      	ldr	r0, [r0, #0]
 8004cd6:	f7ff feb1 	bl	8004a3c <TIM_OC3_SetConfig>
 8004cda:	6823      	ldr	r3, [r4, #0]
 8004cdc:	6909      	ldr	r1, [r1, #16]
 8004cde:	69da      	ldr	r2, [r3, #28]
 8004ce0:	f042 0208 	orr.w	r2, r2, #8
 8004ce4:	61da      	str	r2, [r3, #28]
 8004ce6:	69da      	ldr	r2, [r3, #28]
 8004ce8:	f022 0204 	bic.w	r2, r2, #4
 8004cec:	61da      	str	r2, [r3, #28]
 8004cee:	69da      	ldr	r2, [r3, #28]
 8004cf0:	430a      	orrs	r2, r1
 8004cf2:	61da      	str	r2, [r3, #28]
 8004cf4:	e7b5      	b.n	8004c62 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004cf6:	2002      	movs	r0, #2
 8004cf8:	e7b6      	b.n	8004c68 <HAL_TIM_PWM_ConfigChannel+0x24>

08004cfa <TIM_ETR_SetConfig>:
 8004cfa:	b510      	push	{r4, lr}
 8004cfc:	6884      	ldr	r4, [r0, #8]
 8004cfe:	430a      	orrs	r2, r1
 8004d00:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
 8004d04:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 8004d08:	4322      	orrs	r2, r4
 8004d0a:	6082      	str	r2, [r0, #8]
 8004d0c:	bd10      	pop	{r4, pc}

08004d0e <HAL_TIM_ConfigClockSource>:
 8004d0e:	b570      	push	{r4, r5, r6, lr}
 8004d10:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8004d14:	4604      	mov	r4, r0
 8004d16:	2b01      	cmp	r3, #1
 8004d18:	f04f 0002 	mov.w	r0, #2
 8004d1c:	d027      	beq.n	8004d6e <HAL_TIM_ConfigClockSource+0x60>
 8004d1e:	2301      	movs	r3, #1
 8004d20:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
 8004d24:	6820      	ldr	r0, [r4, #0]
 8004d26:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004d2a:	6883      	ldr	r3, [r0, #8]
 8004d2c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004d30:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8004d34:	6083      	str	r3, [r0, #8]
 8004d36:	680b      	ldr	r3, [r1, #0]
 8004d38:	2b60      	cmp	r3, #96	; 0x60
 8004d3a:	d04d      	beq.n	8004dd8 <HAL_TIM_ConfigClockSource+0xca>
 8004d3c:	d832      	bhi.n	8004da4 <HAL_TIM_ConfigClockSource+0x96>
 8004d3e:	2b40      	cmp	r3, #64	; 0x40
 8004d40:	d062      	beq.n	8004e08 <HAL_TIM_ConfigClockSource+0xfa>
 8004d42:	d815      	bhi.n	8004d70 <HAL_TIM_ConfigClockSource+0x62>
 8004d44:	2b20      	cmp	r3, #32
 8004d46:	d003      	beq.n	8004d50 <HAL_TIM_ConfigClockSource+0x42>
 8004d48:	d809      	bhi.n	8004d5e <HAL_TIM_ConfigClockSource+0x50>
 8004d4a:	f033 0210 	bics.w	r2, r3, #16
 8004d4e:	d108      	bne.n	8004d62 <HAL_TIM_ConfigClockSource+0x54>
 8004d50:	6882      	ldr	r2, [r0, #8]
 8004d52:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8004d56:	4313      	orrs	r3, r2
 8004d58:	f043 0307 	orr.w	r3, r3, #7
 8004d5c:	e020      	b.n	8004da0 <HAL_TIM_ConfigClockSource+0x92>
 8004d5e:	2b30      	cmp	r3, #48	; 0x30
 8004d60:	d0f6      	beq.n	8004d50 <HAL_TIM_ConfigClockSource+0x42>
 8004d62:	2301      	movs	r3, #1
 8004d64:	2000      	movs	r0, #0
 8004d66:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004d6a:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
 8004d6e:	bd70      	pop	{r4, r5, r6, pc}
 8004d70:	2b50      	cmp	r3, #80	; 0x50
 8004d72:	d1f6      	bne.n	8004d62 <HAL_TIM_ConfigClockSource+0x54>
 8004d74:	684a      	ldr	r2, [r1, #4]
 8004d76:	68ce      	ldr	r6, [r1, #12]
 8004d78:	6a01      	ldr	r1, [r0, #32]
 8004d7a:	6a05      	ldr	r5, [r0, #32]
 8004d7c:	f021 010a 	bic.w	r1, r1, #10
 8004d80:	f025 0501 	bic.w	r5, r5, #1
 8004d84:	6205      	str	r5, [r0, #32]
 8004d86:	6983      	ldr	r3, [r0, #24]
 8004d88:	430a      	orrs	r2, r1
 8004d8a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004d8e:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
 8004d92:	6183      	str	r3, [r0, #24]
 8004d94:	6202      	str	r2, [r0, #32]
 8004d96:	6883      	ldr	r3, [r0, #8]
 8004d98:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004d9c:	f043 0357 	orr.w	r3, r3, #87	; 0x57
 8004da0:	6083      	str	r3, [r0, #8]
 8004da2:	e7de      	b.n	8004d62 <HAL_TIM_ConfigClockSource+0x54>
 8004da4:	2b70      	cmp	r3, #112	; 0x70
 8004da6:	d00c      	beq.n	8004dc2 <HAL_TIM_ConfigClockSource+0xb4>
 8004da8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004dac:	d1d9      	bne.n	8004d62 <HAL_TIM_ConfigClockSource+0x54>
 8004dae:	68cb      	ldr	r3, [r1, #12]
 8004db0:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8004db4:	f7ff ffa1 	bl	8004cfa <TIM_ETR_SetConfig>
 8004db8:	6822      	ldr	r2, [r4, #0]
 8004dba:	6893      	ldr	r3, [r2, #8]
 8004dbc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004dc0:	e008      	b.n	8004dd4 <HAL_TIM_ConfigClockSource+0xc6>
 8004dc2:	68cb      	ldr	r3, [r1, #12]
 8004dc4:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8004dc8:	f7ff ff97 	bl	8004cfa <TIM_ETR_SetConfig>
 8004dcc:	6822      	ldr	r2, [r4, #0]
 8004dce:	6893      	ldr	r3, [r2, #8]
 8004dd0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8004dd4:	6093      	str	r3, [r2, #8]
 8004dd6:	e7c4      	b.n	8004d62 <HAL_TIM_ConfigClockSource+0x54>
 8004dd8:	684d      	ldr	r5, [r1, #4]
 8004dda:	68ce      	ldr	r6, [r1, #12]
 8004ddc:	6a01      	ldr	r1, [r0, #32]
 8004dde:	f021 0110 	bic.w	r1, r1, #16
 8004de2:	6201      	str	r1, [r0, #32]
 8004de4:	6982      	ldr	r2, [r0, #24]
 8004de6:	6a03      	ldr	r3, [r0, #32]
 8004de8:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8004dec:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004df0:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004df4:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
 8004df8:	6182      	str	r2, [r0, #24]
 8004dfa:	6203      	str	r3, [r0, #32]
 8004dfc:	6883      	ldr	r3, [r0, #8]
 8004dfe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004e02:	f043 0367 	orr.w	r3, r3, #103	; 0x67
 8004e06:	e7cb      	b.n	8004da0 <HAL_TIM_ConfigClockSource+0x92>
 8004e08:	684a      	ldr	r2, [r1, #4]
 8004e0a:	68ce      	ldr	r6, [r1, #12]
 8004e0c:	6a01      	ldr	r1, [r0, #32]
 8004e0e:	6a05      	ldr	r5, [r0, #32]
 8004e10:	f021 010a 	bic.w	r1, r1, #10
 8004e14:	f025 0501 	bic.w	r5, r5, #1
 8004e18:	6205      	str	r5, [r0, #32]
 8004e1a:	6983      	ldr	r3, [r0, #24]
 8004e1c:	430a      	orrs	r2, r1
 8004e1e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004e22:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
 8004e26:	6183      	str	r3, [r0, #24]
 8004e28:	6202      	str	r2, [r0, #32]
 8004e2a:	6883      	ldr	r3, [r0, #8]
 8004e2c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004e30:	f043 0347 	orr.w	r3, r3, #71	; 0x47
 8004e34:	e7b4      	b.n	8004da0 <HAL_TIM_ConfigClockSource+0x92>

08004e36 <TIM_CCxChannelCmd>:
 8004e36:	b510      	push	{r4, lr}
 8004e38:	2401      	movs	r4, #1
 8004e3a:	6a03      	ldr	r3, [r0, #32]
 8004e3c:	f001 011f 	and.w	r1, r1, #31
 8004e40:	408c      	lsls	r4, r1
 8004e42:	ea23 0304 	bic.w	r3, r3, r4
 8004e46:	6203      	str	r3, [r0, #32]
 8004e48:	6a03      	ldr	r3, [r0, #32]
 8004e4a:	408a      	lsls	r2, r1
 8004e4c:	431a      	orrs	r2, r3
 8004e4e:	6202      	str	r2, [r0, #32]
 8004e50:	bd10      	pop	{r4, pc}
	...

08004e54 <HAL_TIM_OC_Start>:
 8004e54:	b510      	push	{r4, lr}
 8004e56:	4604      	mov	r4, r0
 8004e58:	b929      	cbnz	r1, 8004e66 <HAL_TIM_OC_Start+0x12>
 8004e5a:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 8004e5e:	2b01      	cmp	r3, #1
 8004e60:	d021      	beq.n	8004ea6 <HAL_TIM_OC_Start+0x52>
 8004e62:	2001      	movs	r0, #1
 8004e64:	bd10      	pop	{r4, pc}
 8004e66:	2904      	cmp	r1, #4
 8004e68:	d107      	bne.n	8004e7a <HAL_TIM_OC_Start+0x26>
 8004e6a:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 8004e6e:	2b01      	cmp	r3, #1
 8004e70:	d1f7      	bne.n	8004e62 <HAL_TIM_OC_Start+0xe>
 8004e72:	2302      	movs	r3, #2
 8004e74:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8004e78:	e018      	b.n	8004eac <HAL_TIM_OC_Start+0x58>
 8004e7a:	2908      	cmp	r1, #8
 8004e7c:	d107      	bne.n	8004e8e <HAL_TIM_OC_Start+0x3a>
 8004e7e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8004e82:	2b01      	cmp	r3, #1
 8004e84:	d1ed      	bne.n	8004e62 <HAL_TIM_OC_Start+0xe>
 8004e86:	2302      	movs	r3, #2
 8004e88:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8004e8c:	e00e      	b.n	8004eac <HAL_TIM_OC_Start+0x58>
 8004e8e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8004e92:	2b01      	cmp	r3, #1
 8004e94:	d1e5      	bne.n	8004e62 <HAL_TIM_OC_Start+0xe>
 8004e96:	2904      	cmp	r1, #4
 8004e98:	d0eb      	beq.n	8004e72 <HAL_TIM_OC_Start+0x1e>
 8004e9a:	2908      	cmp	r1, #8
 8004e9c:	d0f3      	beq.n	8004e86 <HAL_TIM_OC_Start+0x32>
 8004e9e:	2302      	movs	r3, #2
 8004ea0:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 8004ea4:	e002      	b.n	8004eac <HAL_TIM_OC_Start+0x58>
 8004ea6:	2302      	movs	r3, #2
 8004ea8:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 8004eac:	2201      	movs	r2, #1
 8004eae:	6820      	ldr	r0, [r4, #0]
 8004eb0:	f7ff ffc1 	bl	8004e36 <TIM_CCxChannelCmd>
 8004eb4:	6823      	ldr	r3, [r4, #0]
 8004eb6:	4a0c      	ldr	r2, [pc, #48]	; (8004ee8 <HAL_TIM_OC_Start+0x94>)
 8004eb8:	4293      	cmp	r3, r2
 8004eba:	d10a      	bne.n	8004ed2 <HAL_TIM_OC_Start+0x7e>
 8004ebc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004ebe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004ec2:	645a      	str	r2, [r3, #68]	; 0x44
 8004ec4:	689a      	ldr	r2, [r3, #8]
 8004ec6:	f002 0207 	and.w	r2, r2, #7
 8004eca:	2a06      	cmp	r2, #6
 8004ecc:	d107      	bne.n	8004ede <HAL_TIM_OC_Start+0x8a>
 8004ece:	2000      	movs	r0, #0
 8004ed0:	e7c8      	b.n	8004e64 <HAL_TIM_OC_Start+0x10>
 8004ed2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004ed6:	d0f5      	beq.n	8004ec4 <HAL_TIM_OC_Start+0x70>
 8004ed8:	4a04      	ldr	r2, [pc, #16]	; (8004eec <HAL_TIM_OC_Start+0x98>)
 8004eda:	4293      	cmp	r3, r2
 8004edc:	d0f2      	beq.n	8004ec4 <HAL_TIM_OC_Start+0x70>
 8004ede:	681a      	ldr	r2, [r3, #0]
 8004ee0:	f042 0201 	orr.w	r2, r2, #1
 8004ee4:	601a      	str	r2, [r3, #0]
 8004ee6:	e7f2      	b.n	8004ece <HAL_TIM_OC_Start+0x7a>
 8004ee8:	40012c00 	.word	0x40012c00
 8004eec:	40000400 	.word	0x40000400

08004ef0 <HAL_TIM_PWM_Start>:
 8004ef0:	f7ff bfb0 	b.w	8004e54 <HAL_TIM_OC_Start>

08004ef4 <HAL_TIM_OC_Stop>:
 8004ef4:	b538      	push	{r3, r4, r5, lr}
 8004ef6:	4604      	mov	r4, r0
 8004ef8:	2200      	movs	r2, #0
 8004efa:	6800      	ldr	r0, [r0, #0]
 8004efc:	460d      	mov	r5, r1
 8004efe:	f7ff ff9a 	bl	8004e36 <TIM_CCxChannelCmd>
 8004f02:	6823      	ldr	r3, [r4, #0]
 8004f04:	4a18      	ldr	r2, [pc, #96]	; (8004f68 <HAL_TIM_OC_Stop+0x74>)
 8004f06:	4293      	cmp	r3, r2
 8004f08:	d10d      	bne.n	8004f26 <HAL_TIM_OC_Stop+0x32>
 8004f0a:	f241 1211 	movw	r2, #4369	; 0x1111
 8004f0e:	6a19      	ldr	r1, [r3, #32]
 8004f10:	4211      	tst	r1, r2
 8004f12:	d108      	bne.n	8004f26 <HAL_TIM_OC_Stop+0x32>
 8004f14:	f240 4244 	movw	r2, #1092	; 0x444
 8004f18:	6a19      	ldr	r1, [r3, #32]
 8004f1a:	4211      	tst	r1, r2
 8004f1c:	bf02      	ittt	eq
 8004f1e:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 8004f20:	f422 4200 	biceq.w	r2, r2, #32768	; 0x8000
 8004f24:	645a      	streq	r2, [r3, #68]	; 0x44
 8004f26:	f241 1211 	movw	r2, #4369	; 0x1111
 8004f2a:	6a19      	ldr	r1, [r3, #32]
 8004f2c:	4211      	tst	r1, r2
 8004f2e:	d108      	bne.n	8004f42 <HAL_TIM_OC_Stop+0x4e>
 8004f30:	f240 4244 	movw	r2, #1092	; 0x444
 8004f34:	6a19      	ldr	r1, [r3, #32]
 8004f36:	4211      	tst	r1, r2
 8004f38:	bf02      	ittt	eq
 8004f3a:	681a      	ldreq	r2, [r3, #0]
 8004f3c:	f022 0201 	biceq.w	r2, r2, #1
 8004f40:	601a      	streq	r2, [r3, #0]
 8004f42:	2301      	movs	r3, #1
 8004f44:	b91d      	cbnz	r5, 8004f4e <HAL_TIM_OC_Stop+0x5a>
 8004f46:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004f4a:	2000      	movs	r0, #0
 8004f4c:	bd38      	pop	{r3, r4, r5, pc}
 8004f4e:	2d04      	cmp	r5, #4
 8004f50:	d102      	bne.n	8004f58 <HAL_TIM_OC_Stop+0x64>
 8004f52:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8004f56:	e7f8      	b.n	8004f4a <HAL_TIM_OC_Stop+0x56>
 8004f58:	2d08      	cmp	r5, #8
 8004f5a:	bf0c      	ite	eq
 8004f5c:	f884 3040 	strbeq.w	r3, [r4, #64]	; 0x40
 8004f60:	f884 3041 	strbne.w	r3, [r4, #65]	; 0x41
 8004f64:	e7f1      	b.n	8004f4a <HAL_TIM_OC_Stop+0x56>
 8004f66:	bf00      	nop
 8004f68:	40012c00 	.word	0x40012c00

08004f6c <HAL_TIM_PWM_Stop>:
 8004f6c:	f7ff bfc2 	b.w	8004ef4 <HAL_TIM_OC_Stop>

08004f70 <HAL_TIMEx_MasterConfigSynchronization>:
 8004f70:	b530      	push	{r4, r5, lr}
 8004f72:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 8004f76:	4603      	mov	r3, r0
 8004f78:	2a01      	cmp	r2, #1
 8004f7a:	f04f 0002 	mov.w	r0, #2
 8004f7e:	d01e      	beq.n	8004fbe <HAL_TIMEx_MasterConfigSynchronization+0x4e>
 8004f80:	681a      	ldr	r2, [r3, #0]
 8004f82:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
 8004f86:	6854      	ldr	r4, [r2, #4]
 8004f88:	680d      	ldr	r5, [r1, #0]
 8004f8a:	f024 0470 	bic.w	r4, r4, #112	; 0x70
 8004f8e:	432c      	orrs	r4, r5
 8004f90:	6890      	ldr	r0, [r2, #8]
 8004f92:	6054      	str	r4, [r2, #4]
 8004f94:	4c0a      	ldr	r4, [pc, #40]	; (8004fc0 <HAL_TIMEx_MasterConfigSynchronization+0x50>)
 8004f96:	42a2      	cmp	r2, r4
 8004f98:	d006      	beq.n	8004fa8 <HAL_TIMEx_MasterConfigSynchronization+0x38>
 8004f9a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8004f9e:	d003      	beq.n	8004fa8 <HAL_TIMEx_MasterConfigSynchronization+0x38>
 8004fa0:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8004fa4:	42a2      	cmp	r2, r4
 8004fa6:	d104      	bne.n	8004fb2 <HAL_TIMEx_MasterConfigSynchronization+0x42>
 8004fa8:	6849      	ldr	r1, [r1, #4]
 8004faa:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8004fae:	4301      	orrs	r1, r0
 8004fb0:	6091      	str	r1, [r2, #8]
 8004fb2:	2201      	movs	r2, #1
 8004fb4:	2000      	movs	r0, #0
 8004fb6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004fba:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
 8004fbe:	bd30      	pop	{r4, r5, pc}
 8004fc0:	40012c00 	.word	0x40012c00

08004fc4 <HAL_TIMEx_ConfigBreakDeadTime>:
 8004fc4:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8004fc8:	2b01      	cmp	r3, #1
 8004fca:	d01f      	beq.n	800500c <HAL_TIMEx_ConfigBreakDeadTime+0x48>
 8004fcc:	68cb      	ldr	r3, [r1, #12]
 8004fce:	688a      	ldr	r2, [r1, #8]
 8004fd0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004fd4:	4313      	orrs	r3, r2
 8004fd6:	684a      	ldr	r2, [r1, #4]
 8004fd8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004fdc:	4313      	orrs	r3, r2
 8004fde:	680a      	ldr	r2, [r1, #0]
 8004fe0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004fe4:	4313      	orrs	r3, r2
 8004fe6:	690a      	ldr	r2, [r1, #16]
 8004fe8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004fec:	4313      	orrs	r3, r2
 8004fee:	694a      	ldr	r2, [r1, #20]
 8004ff0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004ff4:	4313      	orrs	r3, r2
 8004ff6:	69ca      	ldr	r2, [r1, #28]
 8004ff8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004ffc:	4313      	orrs	r3, r2
 8004ffe:	6802      	ldr	r2, [r0, #0]
 8005000:	6453      	str	r3, [r2, #68]	; 0x44
 8005002:	2300      	movs	r3, #0
 8005004:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8005008:	4618      	mov	r0, r3
 800500a:	4770      	bx	lr
 800500c:	2002      	movs	r0, #2
 800500e:	4770      	bx	lr

08005010 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 8005010:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005012:	2400      	movs	r4, #0
 8005014:	2310      	movs	r3, #16
 8005016:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800501a:	6803      	ldr	r3, [r0, #0]
 800501c:	4615      	mov	r5, r2
 800501e:	699e      	ldr	r6, [r3, #24]
 8005020:	e9cd 4400 	strd	r4, r4, [sp]
 8005024:	466b      	mov	r3, sp
 8005026:	6812      	ldr	r2, [r2, #0]
 8005028:	47b0      	blx	r6
 800502a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800502e:	f003 0306 	and.w	r3, r3, #6
 8005032:	2b06      	cmp	r3, #6
 8005034:	bf09      	itett	eq
 8005036:	2001      	moveq	r0, #1
 8005038:	4620      	movne	r0, r4
 800503a:	9b00      	ldreq	r3, [sp, #0]
 800503c:	602b      	streq	r3, [r5, #0]
 800503e:	b004      	add	sp, #16
 8005040:	bd70      	pop	{r4, r5, r6, pc}

08005042 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 8005042:	9800      	ldr	r0, [sp, #0]
 8005044:	4290      	cmp	r0, r2
 8005046:	bf14      	ite	ne
 8005048:	2001      	movne	r0, #1
 800504a:	2006      	moveq	r0, #6
 800504c:	4770      	bx	lr
	...

08005050 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 8005050:	b510      	push	{r4, lr}
 8005052:	4604      	mov	r4, r0
 8005054:	4b02      	ldr	r3, [pc, #8]	; (8005060 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 8005056:	6003      	str	r3, [r0, #0]
 8005058:	f000 fd3b 	bl	8005ad2 <_ZNSt9type_infoD1Ev>
 800505c:	4620      	mov	r0, r4
 800505e:	bd10      	pop	{r4, pc}
 8005060:	08006a5c 	.word	0x08006a5c

08005064 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 8005064:	b510      	push	{r4, lr}
 8005066:	4604      	mov	r4, r0
 8005068:	f7ff fff2 	bl	8005050 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800506c:	4620      	mov	r0, r4
 800506e:	2108      	movs	r1, #8
 8005070:	f000 f842 	bl	80050f8 <_ZdlPvj>
 8005074:	4620      	mov	r0, r4
 8005076:	bd10      	pop	{r4, pc}

08005078 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 8005078:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800507c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005080:	461f      	mov	r7, r3
 8005082:	e9dd 3408 	ldrd	r3, r4, [sp, #32]
 8005086:	4598      	cmp	r8, r3
 8005088:	4606      	mov	r6, r0
 800508a:	4615      	mov	r5, r2
 800508c:	d107      	bne.n	800509e <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x26>
 800508e:	9907      	ldr	r1, [sp, #28]
 8005090:	f000 fd22 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 8005094:	b118      	cbz	r0, 800509e <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x26>
 8005096:	7165      	strb	r5, [r4, #5]
 8005098:	2000      	movs	r0, #0
 800509a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800509e:	4639      	mov	r1, r7
 80050a0:	4630      	mov	r0, r6
 80050a2:	f000 fd19 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 80050a6:	2800      	cmp	r0, #0
 80050a8:	d0f6      	beq.n	8005098 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x20>
 80050aa:	2301      	movs	r3, #1
 80050ac:	f8c4 8000 	str.w	r8, [r4]
 80050b0:	7125      	strb	r5, [r4, #4]
 80050b2:	71a3      	strb	r3, [r4, #6]
 80050b4:	e7f0      	b.n	8005098 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x20>

080050b6 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 80050b6:	b538      	push	{r3, r4, r5, lr}
 80050b8:	4615      	mov	r5, r2
 80050ba:	461c      	mov	r4, r3
 80050bc:	f000 fd0c 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 80050c0:	b120      	cbz	r0, 80050cc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x16>
 80050c2:	2308      	movs	r3, #8
 80050c4:	60e3      	str	r3, [r4, #12]
 80050c6:	2306      	movs	r3, #6
 80050c8:	6025      	str	r5, [r4, #0]
 80050ca:	7123      	strb	r3, [r4, #4]
 80050cc:	bd38      	pop	{r3, r4, r5, pc}

080050ce <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 80050ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80050d2:	4605      	mov	r5, r0
 80050d4:	460c      	mov	r4, r1
 80050d6:	4616      	mov	r6, r2
 80050d8:	461f      	mov	r7, r3
 80050da:	f000 fcfd 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 80050de:	b948      	cbnz	r0, 80050f4 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 80050e0:	2f03      	cmp	r7, #3
 80050e2:	d807      	bhi.n	80050f4 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 80050e4:	6823      	ldr	r3, [r4, #0]
 80050e6:	4632      	mov	r2, r6
 80050e8:	4629      	mov	r1, r5
 80050ea:	4620      	mov	r0, r4
 80050ec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80050f0:	695b      	ldr	r3, [r3, #20]
 80050f2:	4718      	bx	r3
 80050f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080050f8 <_ZdlPvj>:
 80050f8:	f001 b804 	b.w	8006104 <_ZdlPv>

080050fc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>:
 80050fc:	4a19      	ldr	r2, [pc, #100]	; (8005164 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x68>)
 80050fe:	b570      	push	{r4, r5, r6, lr}
 8005100:	6853      	ldr	r3, [r2, #4]
 8005102:	f1a0 0408 	sub.w	r4, r0, #8
 8005106:	b123      	cbz	r3, 8005112 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x16>
 8005108:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800510c:	1865      	adds	r5, r4, r1
 800510e:	42ab      	cmp	r3, r5
 8005110:	d903      	bls.n	800511a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x1e>
 8005112:	f840 3c04 	str.w	r3, [r0, #-4]
 8005116:	6054      	str	r4, [r2, #4]
 8005118:	bd70      	pop	{r4, r5, r6, pc}
 800511a:	d105      	bne.n	8005128 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x2c>
 800511c:	e9d3 3500 	ldrd	r3, r5, [r3]
 8005120:	4419      	add	r1, r3
 8005122:	e940 1502 	strd	r1, r5, [r0, #-8]
 8005126:	e7f6      	b.n	8005116 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x1a>
 8005128:	3204      	adds	r2, #4
 800512a:	685e      	ldr	r6, [r3, #4]
 800512c:	b14e      	cbz	r6, 8005142 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x46>
 800512e:	42b5      	cmp	r5, r6
 8005130:	d202      	bcs.n	8005138 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x3c>
 8005132:	1d1a      	adds	r2, r3, #4
 8005134:	4633      	mov	r3, r6
 8005136:	e7f8      	b.n	800512a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x2e>
 8005138:	bf01      	itttt	eq
 800513a:	682e      	ldreq	r6, [r5, #0]
 800513c:	686d      	ldreq	r5, [r5, #4]
 800513e:	1989      	addeq	r1, r1, r6
 8005140:	605d      	streq	r5, [r3, #4]
 8005142:	6813      	ldr	r3, [r2, #0]
 8005144:	681d      	ldr	r5, [r3, #0]
 8005146:	195e      	adds	r6, r3, r5
 8005148:	42b4      	cmp	r4, r6
 800514a:	bf17      	itett	ne
 800514c:	685b      	ldrne	r3, [r3, #4]
 800514e:	1949      	addeq	r1, r1, r5
 8005150:	f840 3c04 	strne.w	r3, [r0, #-4]
 8005154:	6813      	ldrne	r3, [r2, #0]
 8005156:	bf16      	itet	ne
 8005158:	f840 1c08 	strne.w	r1, [r0, #-8]
 800515c:	6019      	streq	r1, [r3, #0]
 800515e:	605c      	strne	r4, [r3, #4]
 8005160:	e7da      	b.n	8005118 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x1c>
 8005162:	bf00      	nop
 8005164:	2000047c 	.word	0x2000047c

08005168 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>:
 8005168:	f100 0308 	add.w	r3, r0, #8
 800516c:	2b08      	cmp	r3, #8
 800516e:	bf38      	it	cc
 8005170:	2308      	movcc	r3, #8
 8005172:	b530      	push	{r4, r5, lr}
 8005174:	4a0d      	ldr	r2, [pc, #52]	; (80051ac <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x44>)
 8005176:	3307      	adds	r3, #7
 8005178:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800517c:	f023 0307 	bic.w	r3, r3, #7
 8005180:	b168      	cbz	r0, 800519e <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x36>
 8005182:	e9d0 1400 	ldrd	r1, r4, [r0]
 8005186:	428b      	cmp	r3, r1
 8005188:	d90a      	bls.n	80051a0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x38>
 800518a:	1d02      	adds	r2, r0, #4
 800518c:	4620      	mov	r0, r4
 800518e:	e7f7      	b.n	8005180 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x18>
 8005190:	18c1      	adds	r1, r0, r3
 8005192:	604c      	str	r4, [r1, #4]
 8005194:	50c5      	str	r5, [r0, r3]
 8005196:	6810      	ldr	r0, [r2, #0]
 8005198:	6003      	str	r3, [r0, #0]
 800519a:	6011      	str	r1, [r2, #0]
 800519c:	3008      	adds	r0, #8
 800519e:	bd30      	pop	{r4, r5, pc}
 80051a0:	1acd      	subs	r5, r1, r3
 80051a2:	2d07      	cmp	r5, #7
 80051a4:	d8f4      	bhi.n	8005190 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x28>
 80051a6:	6001      	str	r1, [r0, #0]
 80051a8:	6014      	str	r4, [r2, #0]
 80051aa:	e7f7      	b.n	800519c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x34>
 80051ac:	2000047c 	.word	0x2000047c

080051b0 <__cxa_allocate_exception>:
 80051b0:	b510      	push	{r4, lr}
 80051b2:	f100 0480 	add.w	r4, r0, #128	; 0x80
 80051b6:	4620      	mov	r0, r4
 80051b8:	f001 f866 	bl	8006288 <malloc>
 80051bc:	4603      	mov	r3, r0
 80051be:	b930      	cbnz	r0, 80051ce <__cxa_allocate_exception+0x1e>
 80051c0:	4620      	mov	r0, r4
 80051c2:	f7ff ffd1 	bl	8005168 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
 80051c6:	4603      	mov	r3, r0
 80051c8:	b908      	cbnz	r0, 80051ce <__cxa_allocate_exception+0x1e>
 80051ca:	f000 fb6f 	bl	80058ac <_ZSt9terminatev>
 80051ce:	2280      	movs	r2, #128	; 0x80
 80051d0:	2100      	movs	r1, #0
 80051d2:	4618      	mov	r0, r3
 80051d4:	f001 f890 	bl	80062f8 <memset>
 80051d8:	3080      	adds	r0, #128	; 0x80
 80051da:	bd10      	pop	{r4, pc}

080051dc <__cxa_free_exception>:
 80051dc:	4a06      	ldr	r2, [pc, #24]	; (80051f8 <__cxa_free_exception+0x1c>)
 80051de:	3880      	subs	r0, #128	; 0x80
 80051e0:	6893      	ldr	r3, [r2, #8]
 80051e2:	4298      	cmp	r0, r3
 80051e4:	d905      	bls.n	80051f2 <__cxa_free_exception+0x16>
 80051e6:	68d2      	ldr	r2, [r2, #12]
 80051e8:	4413      	add	r3, r2
 80051ea:	4298      	cmp	r0, r3
 80051ec:	d201      	bcs.n	80051f2 <__cxa_free_exception+0x16>
 80051ee:	f7ff bf85 	b.w	80050fc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
 80051f2:	f001 b851 	b.w	8006298 <free>
 80051f6:	bf00      	nop
 80051f8:	2000047c 	.word	0x2000047c

080051fc <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
 80051fc:	b538      	push	{r3, r4, r5, lr}
 80051fe:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
 8005202:	4c07      	ldr	r4, [pc, #28]	; (8005220 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
 8005204:	4628      	mov	r0, r5
 8005206:	60e5      	str	r5, [r4, #12]
 8005208:	f001 f83e 	bl	8006288 <malloc>
 800520c:	60a0      	str	r0, [r4, #8]
 800520e:	b910      	cbnz	r0, 8005216 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1a>
 8005210:	60e0      	str	r0, [r4, #12]
 8005212:	6060      	str	r0, [r4, #4]
 8005214:	bd38      	pop	{r3, r4, r5, pc}
 8005216:	2300      	movs	r3, #0
 8005218:	6060      	str	r0, [r4, #4]
 800521a:	6005      	str	r5, [r0, #0]
 800521c:	6043      	str	r3, [r0, #4]
 800521e:	e7f9      	b.n	8005214 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x18>
 8005220:	2000047c 	.word	0x2000047c

08005224 <__cxa_end_cleanup>:
 8005224:	b41e      	push	{r1, r2, r3, r4}
 8005226:	f000 f89c 	bl	8005362 <__gnu_end_cleanup>
 800522a:	bc1e      	pop	{r1, r2, r3, r4}
 800522c:	f7fc f83a 	bl	80012a4 <_Unwind_Resume>

08005230 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 8005230:	7803      	ldrb	r3, [r0, #0]
 8005232:	2b47      	cmp	r3, #71	; 0x47
 8005234:	d117      	bne.n	8005266 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 8005236:	7843      	ldrb	r3, [r0, #1]
 8005238:	2b4e      	cmp	r3, #78	; 0x4e
 800523a:	d114      	bne.n	8005266 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 800523c:	7883      	ldrb	r3, [r0, #2]
 800523e:	2b55      	cmp	r3, #85	; 0x55
 8005240:	d111      	bne.n	8005266 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 8005242:	78c3      	ldrb	r3, [r0, #3]
 8005244:	2b43      	cmp	r3, #67	; 0x43
 8005246:	d10e      	bne.n	8005266 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 8005248:	7903      	ldrb	r3, [r0, #4]
 800524a:	2b43      	cmp	r3, #67	; 0x43
 800524c:	d10b      	bne.n	8005266 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 800524e:	7943      	ldrb	r3, [r0, #5]
 8005250:	2b2b      	cmp	r3, #43	; 0x2b
 8005252:	d108      	bne.n	8005266 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 8005254:	7983      	ldrb	r3, [r0, #6]
 8005256:	2b2b      	cmp	r3, #43	; 0x2b
 8005258:	d105      	bne.n	8005266 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 800525a:	79c0      	ldrb	r0, [r0, #7]
 800525c:	2801      	cmp	r0, #1
 800525e:	bf8c      	ite	hi
 8005260:	2000      	movhi	r0, #0
 8005262:	2001      	movls	r0, #1
 8005264:	4770      	bx	lr
 8005266:	2000      	movs	r0, #0
 8005268:	4770      	bx	lr
	...

0800526c <__cxa_type_match>:
 800526c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005270:	461d      	mov	r5, r3
 8005272:	7803      	ldrb	r3, [r0, #0]
 8005274:	460e      	mov	r6, r1
 8005276:	2b47      	cmp	r3, #71	; 0x47
 8005278:	4602      	mov	r2, r0
 800527a:	79c1      	ldrb	r1, [r0, #7]
 800527c:	d113      	bne.n	80052a6 <__cxa_type_match+0x3a>
 800527e:	7843      	ldrb	r3, [r0, #1]
 8005280:	2b4e      	cmp	r3, #78	; 0x4e
 8005282:	d110      	bne.n	80052a6 <__cxa_type_match+0x3a>
 8005284:	7883      	ldrb	r3, [r0, #2]
 8005286:	2b55      	cmp	r3, #85	; 0x55
 8005288:	d10d      	bne.n	80052a6 <__cxa_type_match+0x3a>
 800528a:	78c3      	ldrb	r3, [r0, #3]
 800528c:	2b43      	cmp	r3, #67	; 0x43
 800528e:	d10a      	bne.n	80052a6 <__cxa_type_match+0x3a>
 8005290:	7903      	ldrb	r3, [r0, #4]
 8005292:	2b46      	cmp	r3, #70	; 0x46
 8005294:	d107      	bne.n	80052a6 <__cxa_type_match+0x3a>
 8005296:	7943      	ldrb	r3, [r0, #5]
 8005298:	2b4f      	cmp	r3, #79	; 0x4f
 800529a:	d104      	bne.n	80052a6 <__cxa_type_match+0x3a>
 800529c:	7983      	ldrb	r3, [r0, #6]
 800529e:	2b52      	cmp	r3, #82	; 0x52
 80052a0:	d101      	bne.n	80052a6 <__cxa_type_match+0x3a>
 80052a2:	2900      	cmp	r1, #0
 80052a4:	d030      	beq.n	8005308 <__cxa_type_match+0x9c>
 80052a6:	4610      	mov	r0, r2
 80052a8:	f7ff ffc2 	bl	8005230 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 80052ac:	2300      	movs	r3, #0
 80052ae:	f080 0401 	eor.w	r4, r0, #1
 80052b2:	b2e4      	uxtb	r4, r4
 80052b4:	2000      	movs	r0, #0
 80052b6:	9001      	str	r0, [sp, #4]
 80052b8:	bb4b      	cbnz	r3, 800530e <__cxa_type_match+0xa2>
 80052ba:	bb54      	cbnz	r4, 8005312 <__cxa_type_match+0xa6>
 80052bc:	2901      	cmp	r1, #1
 80052be:	bf0a      	itet	eq
 80052c0:	f852 3c20 	ldreq.w	r3, [r2, #-32]
 80052c4:	f1a2 0320 	subne.w	r3, r2, #32
 80052c8:	3b78      	subeq	r3, #120	; 0x78
 80052ca:	2901      	cmp	r1, #1
 80052cc:	bf0c      	ite	eq
 80052ce:	f852 2c20 	ldreq.w	r2, [r2, #-32]
 80052d2:	3258      	addne	r2, #88	; 0x58
 80052d4:	681c      	ldr	r4, [r3, #0]
 80052d6:	9201      	str	r2, [sp, #4]
 80052d8:	6823      	ldr	r3, [r4, #0]
 80052da:	4620      	mov	r0, r4
 80052dc:	689b      	ldr	r3, [r3, #8]
 80052de:	4798      	blx	r3
 80052e0:	b1c8      	cbz	r0, 8005316 <__cxa_type_match+0xaa>
 80052e2:	2702      	movs	r7, #2
 80052e4:	9b01      	ldr	r3, [sp, #4]
 80052e6:	681b      	ldr	r3, [r3, #0]
 80052e8:	9301      	str	r3, [sp, #4]
 80052ea:	6833      	ldr	r3, [r6, #0]
 80052ec:	4621      	mov	r1, r4
 80052ee:	f8d3 8010 	ldr.w	r8, [r3, #16]
 80052f2:	4630      	mov	r0, r6
 80052f4:	2301      	movs	r3, #1
 80052f6:	aa01      	add	r2, sp, #4
 80052f8:	47c0      	blx	r8
 80052fa:	b170      	cbz	r0, 800531a <__cxa_type_match+0xae>
 80052fc:	9b01      	ldr	r3, [sp, #4]
 80052fe:	602b      	str	r3, [r5, #0]
 8005300:	4638      	mov	r0, r7
 8005302:	b002      	add	sp, #8
 8005304:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005308:	2301      	movs	r3, #1
 800530a:	460c      	mov	r4, r1
 800530c:	e7d2      	b.n	80052b4 <__cxa_type_match+0x48>
 800530e:	4c04      	ldr	r4, [pc, #16]	; (8005320 <__cxa_type_match+0xb4>)
 8005310:	e7e2      	b.n	80052d8 <__cxa_type_match+0x6c>
 8005312:	4c04      	ldr	r4, [pc, #16]	; (8005324 <__cxa_type_match+0xb8>)
 8005314:	e7e0      	b.n	80052d8 <__cxa_type_match+0x6c>
 8005316:	2701      	movs	r7, #1
 8005318:	e7e7      	b.n	80052ea <__cxa_type_match+0x7e>
 800531a:	4607      	mov	r7, r0
 800531c:	e7f0      	b.n	8005300 <__cxa_type_match+0x94>
 800531e:	bf00      	nop
 8005320:	08006a80 	.word	0x08006a80
 8005324:	08006a88 	.word	0x08006a88

08005328 <__cxa_begin_cleanup>:
 8005328:	b510      	push	{r4, lr}
 800532a:	4604      	mov	r4, r0
 800532c:	f000 f834 	bl	8005398 <__cxa_get_globals>
 8005330:	4602      	mov	r2, r0
 8005332:	4620      	mov	r0, r4
 8005334:	f1a4 0120 	sub.w	r1, r4, #32
 8005338:	f7ff ff7a 	bl	8005230 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800533c:	b160      	cbz	r0, 8005358 <__cxa_begin_cleanup+0x30>
 800533e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005342:	3301      	adds	r3, #1
 8005344:	2b01      	cmp	r3, #1
 8005346:	f844 3c04 	str.w	r3, [r4, #-4]
 800534a:	d103      	bne.n	8005354 <__cxa_begin_cleanup+0x2c>
 800534c:	6893      	ldr	r3, [r2, #8]
 800534e:	f844 3c08 	str.w	r3, [r4, #-8]
 8005352:	6091      	str	r1, [r2, #8]
 8005354:	2001      	movs	r0, #1
 8005356:	bd10      	pop	{r4, pc}
 8005358:	6893      	ldr	r3, [r2, #8]
 800535a:	2b00      	cmp	r3, #0
 800535c:	d0f9      	beq.n	8005352 <__cxa_begin_cleanup+0x2a>
 800535e:	f000 faa5 	bl	80058ac <_ZSt9terminatev>

08005362 <__gnu_end_cleanup>:
 8005362:	b510      	push	{r4, lr}
 8005364:	f000 f818 	bl	8005398 <__cxa_get_globals>
 8005368:	6882      	ldr	r2, [r0, #8]
 800536a:	4601      	mov	r1, r0
 800536c:	b90a      	cbnz	r2, 8005372 <__gnu_end_cleanup+0x10>
 800536e:	f000 fa9d 	bl	80058ac <_ZSt9terminatev>
 8005372:	f102 0420 	add.w	r4, r2, #32
 8005376:	4620      	mov	r0, r4
 8005378:	f7ff ff5a 	bl	8005230 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800537c:	b140      	cbz	r0, 8005390 <__gnu_end_cleanup+0x2e>
 800537e:	69d3      	ldr	r3, [r2, #28]
 8005380:	3b01      	subs	r3, #1
 8005382:	61d3      	str	r3, [r2, #28]
 8005384:	b913      	cbnz	r3, 800538c <__gnu_end_cleanup+0x2a>
 8005386:	6990      	ldr	r0, [r2, #24]
 8005388:	6088      	str	r0, [r1, #8]
 800538a:	6193      	str	r3, [r2, #24]
 800538c:	4620      	mov	r0, r4
 800538e:	bd10      	pop	{r4, pc}
 8005390:	6088      	str	r0, [r1, #8]
 8005392:	e7fb      	b.n	800538c <__gnu_end_cleanup+0x2a>

08005394 <_ZNSt9exceptionD1Ev>:
 8005394:	4770      	bx	lr
	...

08005398 <__cxa_get_globals>:
 8005398:	4800      	ldr	r0, [pc, #0]	; (800539c <__cxa_get_globals+0x4>)
 800539a:	4770      	bx	lr
 800539c:	2000048c 	.word	0x2000048c

080053a0 <_ZL12read_uleb128PKhPm>:
 80053a0:	2300      	movs	r3, #0
 80053a2:	461a      	mov	r2, r3
 80053a4:	b530      	push	{r4, r5, lr}
 80053a6:	f810 5b01 	ldrb.w	r5, [r0], #1
 80053aa:	f005 047f 	and.w	r4, r5, #127	; 0x7f
 80053ae:	4094      	lsls	r4, r2
 80053b0:	4323      	orrs	r3, r4
 80053b2:	062c      	lsls	r4, r5, #24
 80053b4:	f102 0207 	add.w	r2, r2, #7
 80053b8:	d4f5      	bmi.n	80053a6 <_ZL12read_uleb128PKhPm+0x6>
 80053ba:	600b      	str	r3, [r1, #0]
 80053bc:	bd30      	pop	{r4, r5, pc}

080053be <_ZL12read_sleb128PKhPl>:
 80053be:	2300      	movs	r3, #0
 80053c0:	461a      	mov	r2, r3
 80053c2:	b530      	push	{r4, r5, lr}
 80053c4:	f810 4b01 	ldrb.w	r4, [r0], #1
 80053c8:	f004 057f 	and.w	r5, r4, #127	; 0x7f
 80053cc:	4095      	lsls	r5, r2
 80053ce:	432b      	orrs	r3, r5
 80053d0:	0625      	lsls	r5, r4, #24
 80053d2:	f102 0207 	add.w	r2, r2, #7
 80053d6:	d4f5      	bmi.n	80053c4 <_ZL12read_sleb128PKhPl+0x6>
 80053d8:	2a1f      	cmp	r2, #31
 80053da:	d806      	bhi.n	80053ea <_ZL12read_sleb128PKhPl+0x2c>
 80053dc:	0664      	lsls	r4, r4, #25
 80053de:	bf42      	ittt	mi
 80053e0:	f04f 34ff 	movmi.w	r4, #4294967295
 80053e4:	fa04 f202 	lslmi.w	r2, r4, r2
 80053e8:	4313      	orrmi	r3, r2
 80053ea:	600b      	str	r3, [r1, #0]
 80053ec:	bd30      	pop	{r4, r5, pc}

080053ee <_ZL28read_encoded_value_with_basehjPKhPj>:
 80053ee:	2850      	cmp	r0, #80	; 0x50
 80053f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80053f4:	4606      	mov	r6, r0
 80053f6:	4688      	mov	r8, r1
 80053f8:	4615      	mov	r5, r2
 80053fa:	461f      	mov	r7, r3
 80053fc:	d108      	bne.n	8005410 <_ZL28read_encoded_value_with_basehjPKhPj+0x22>
 80053fe:	1cd0      	adds	r0, r2, #3
 8005400:	f020 0003 	bic.w	r0, r0, #3
 8005404:	f850 4b04 	ldr.w	r4, [r0], #4
 8005408:	603c      	str	r4, [r7, #0]
 800540a:	b002      	add	sp, #8
 800540c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005410:	f000 030f 	and.w	r3, r0, #15
 8005414:	2b0c      	cmp	r3, #12
 8005416:	d82e      	bhi.n	8005476 <_ZL28read_encoded_value_with_basehjPKhPj+0x88>
 8005418:	e8df f003 	tbb	[pc, r3]
 800541c:	251d0725 	.word	0x251d0725
 8005420:	2d2d2d29 	.word	0x2d2d2d29
 8005424:	2521182d 	.word	0x2521182d
 8005428:	29          	.byte	0x29
 8005429:	00          	.byte	0x00
 800542a:	4628      	mov	r0, r5
 800542c:	a901      	add	r1, sp, #4
 800542e:	f7ff ffb7 	bl	80053a0 <_ZL12read_uleb128PKhPm>
 8005432:	9c01      	ldr	r4, [sp, #4]
 8005434:	2c00      	cmp	r4, #0
 8005436:	d0e7      	beq.n	8005408 <_ZL28read_encoded_value_with_basehjPKhPj+0x1a>
 8005438:	f006 0370 	and.w	r3, r6, #112	; 0x70
 800543c:	2b10      	cmp	r3, #16
 800543e:	bf08      	it	eq
 8005440:	46a8      	moveq	r8, r5
 8005442:	0633      	lsls	r3, r6, #24
 8005444:	4444      	add	r4, r8
 8005446:	bf48      	it	mi
 8005448:	6824      	ldrmi	r4, [r4, #0]
 800544a:	e7dd      	b.n	8005408 <_ZL28read_encoded_value_with_basehjPKhPj+0x1a>
 800544c:	4628      	mov	r0, r5
 800544e:	a901      	add	r1, sp, #4
 8005450:	f7ff ffb5 	bl	80053be <_ZL12read_sleb128PKhPl>
 8005454:	e7ed      	b.n	8005432 <_ZL28read_encoded_value_with_basehjPKhPj+0x44>
 8005456:	4628      	mov	r0, r5
 8005458:	f830 4b02 	ldrh.w	r4, [r0], #2
 800545c:	e7ea      	b.n	8005434 <_ZL28read_encoded_value_with_basehjPKhPj+0x46>
 800545e:	4628      	mov	r0, r5
 8005460:	f930 4b02 	ldrsh.w	r4, [r0], #2
 8005464:	e7e6      	b.n	8005434 <_ZL28read_encoded_value_with_basehjPKhPj+0x46>
 8005466:	4628      	mov	r0, r5
 8005468:	f850 4b04 	ldr.w	r4, [r0], #4
 800546c:	e7e2      	b.n	8005434 <_ZL28read_encoded_value_with_basehjPKhPj+0x46>
 800546e:	4628      	mov	r0, r5
 8005470:	f850 4b08 	ldr.w	r4, [r0], #8
 8005474:	e7de      	b.n	8005434 <_ZL28read_encoded_value_with_basehjPKhPj+0x46>
 8005476:	f000 fed5 	bl	8006224 <abort>

0800547a <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 800547a:	b508      	push	{r3, lr}
 800547c:	4603      	mov	r3, r0
 800547e:	2bff      	cmp	r3, #255	; 0xff
 8005480:	4608      	mov	r0, r1
 8005482:	d010      	beq.n	80054a6 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2c>
 8005484:	f003 0270 	and.w	r2, r3, #112	; 0x70
 8005488:	2a30      	cmp	r2, #48	; 0x30
 800548a:	d012      	beq.n	80054b2 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x38>
 800548c:	d807      	bhi.n	800549e <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x24>
 800548e:	2a20      	cmp	r2, #32
 8005490:	d00b      	beq.n	80054aa <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x30>
 8005492:	d802      	bhi.n	800549a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 8005494:	f013 0f60 	tst.w	r3, #96	; 0x60
 8005498:	d005      	beq.n	80054a6 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2c>
 800549a:	f000 fec3 	bl	8006224 <abort>
 800549e:	2a40      	cmp	r2, #64	; 0x40
 80054a0:	d00b      	beq.n	80054ba <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
 80054a2:	2a50      	cmp	r2, #80	; 0x50
 80054a4:	d1f9      	bne.n	800549a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 80054a6:	2000      	movs	r0, #0
 80054a8:	bd08      	pop	{r3, pc}
 80054aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80054ae:	f001 b86c 	b.w	800658a <_Unwind_GetTextRelBase>
 80054b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80054b6:	f001 b865 	b.w	8006584 <_Unwind_GetDataRelBase>
 80054ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80054be:	f7fc b8ef 	b.w	80016a0 <_Unwind_GetRegionStart>

080054c2 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>:
 80054c2:	b570      	push	{r4, r5, r6, lr}
 80054c4:	460c      	mov	r4, r1
 80054c6:	4601      	mov	r1, r0
 80054c8:	4620      	mov	r0, r4
 80054ca:	4615      	mov	r5, r2
 80054cc:	461e      	mov	r6, r3
 80054ce:	f7ff ffd4 	bl	800547a <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80054d2:	4633      	mov	r3, r6
 80054d4:	4601      	mov	r1, r0
 80054d6:	462a      	mov	r2, r5
 80054d8:	4620      	mov	r0, r4
 80054da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80054de:	f7ff bf86 	b.w	80053ee <_ZL28read_encoded_value_with_basehjPKhPj>

080054e2 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 80054e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80054e4:	460c      	mov	r4, r1
 80054e6:	4615      	mov	r5, r2
 80054e8:	4606      	mov	r6, r0
 80054ea:	b328      	cbz	r0, 8005538 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x56>
 80054ec:	f7fc f8d8 	bl	80016a0 <_Unwind_GetRegionStart>
 80054f0:	4603      	mov	r3, r0
 80054f2:	4620      	mov	r0, r4
 80054f4:	602b      	str	r3, [r5, #0]
 80054f6:	f810 1b01 	ldrb.w	r1, [r0], #1
 80054fa:	29ff      	cmp	r1, #255	; 0xff
 80054fc:	d01e      	beq.n	800553c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x5a>
 80054fe:	4602      	mov	r2, r0
 8005500:	1d2b      	adds	r3, r5, #4
 8005502:	4630      	mov	r0, r6
 8005504:	f7ff ffdd 	bl	80054c2 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>
 8005508:	f810 3b01 	ldrb.w	r3, [r0], #1
 800550c:	2bff      	cmp	r3, #255	; 0xff
 800550e:	752b      	strb	r3, [r5, #20]
 8005510:	d016      	beq.n	8005540 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x5e>
 8005512:	2310      	movs	r3, #16
 8005514:	a901      	add	r1, sp, #4
 8005516:	752b      	strb	r3, [r5, #20]
 8005518:	f7ff ff42 	bl	80053a0 <_ZL12read_uleb128PKhPm>
 800551c:	9b01      	ldr	r3, [sp, #4]
 800551e:	4403      	add	r3, r0
 8005520:	60eb      	str	r3, [r5, #12]
 8005522:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005526:	a901      	add	r1, sp, #4
 8005528:	756b      	strb	r3, [r5, #21]
 800552a:	f7ff ff39 	bl	80053a0 <_ZL12read_uleb128PKhPm>
 800552e:	9b01      	ldr	r3, [sp, #4]
 8005530:	4403      	add	r3, r0
 8005532:	612b      	str	r3, [r5, #16]
 8005534:	b002      	add	sp, #8
 8005536:	bd70      	pop	{r4, r5, r6, pc}
 8005538:	4603      	mov	r3, r0
 800553a:	e7da      	b.n	80054f2 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x10>
 800553c:	606b      	str	r3, [r5, #4]
 800553e:	e7e3      	b.n	8005508 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x26>
 8005540:	2300      	movs	r3, #0
 8005542:	e7ed      	b.n	8005520 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x3e>

08005544 <_Unwind_GetGR>:
 8005544:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005546:	ab03      	add	r3, sp, #12
 8005548:	9300      	str	r3, [sp, #0]
 800554a:	2300      	movs	r3, #0
 800554c:	460a      	mov	r2, r1
 800554e:	4619      	mov	r1, r3
 8005550:	f7fb fafc 	bl	8000b4c <_Unwind_VRS_Get>
 8005554:	9803      	ldr	r0, [sp, #12]
 8005556:	b005      	add	sp, #20
 8005558:	f85d fb04 	ldr.w	pc, [sp], #4

0800555c <__gxx_personality_v0>:
 800555c:	2300      	movs	r3, #0
 800555e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005562:	b091      	sub	sp, #68	; 0x44
 8005564:	9305      	str	r3, [sp, #20]
 8005566:	f000 0303 	and.w	r3, r0, #3
 800556a:	2b01      	cmp	r3, #1
 800556c:	4606      	mov	r6, r0
 800556e:	460c      	mov	r4, r1
 8005570:	4617      	mov	r7, r2
 8005572:	d00e      	beq.n	8005592 <__gxx_personality_v0+0x36>
 8005574:	2b02      	cmp	r3, #2
 8005576:	d003      	beq.n	8005580 <__gxx_personality_v0+0x24>
 8005578:	2b00      	cmp	r3, #0
 800557a:	d13b      	bne.n	80055f4 <__gxx_personality_v0+0x98>
 800557c:	0701      	lsls	r1, r0, #28
 800557e:	d53b      	bpl.n	80055f8 <__gxx_personality_v0+0x9c>
 8005580:	4639      	mov	r1, r7
 8005582:	4620      	mov	r0, r4
 8005584:	f7fc f874 	bl	8001670 <__gnu_unwind_frame>
 8005588:	b390      	cbz	r0, 80055f0 <__gxx_personality_v0+0x94>
 800558a:	2009      	movs	r0, #9
 800558c:	b011      	add	sp, #68	; 0x44
 800558e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005592:	0702      	lsls	r2, r0, #28
 8005594:	d406      	bmi.n	80055a4 <__gxx_personality_v0+0x48>
 8005596:	6a0d      	ldr	r5, [r1, #32]
 8005598:	4638      	mov	r0, r7
 800559a:	210d      	movs	r1, #13
 800559c:	f7ff ffd2 	bl	8005544 <_Unwind_GetGR>
 80055a0:	4285      	cmp	r5, r0
 80055a2:	d02b      	beq.n	80055fc <__gxx_personality_v0+0xa0>
 80055a4:	2002      	movs	r0, #2
 80055a6:	2300      	movs	r3, #0
 80055a8:	f006 0608 	and.w	r6, r6, #8
 80055ac:	f10d 0a28 	add.w	sl, sp, #40	; 0x28
 80055b0:	4306      	orrs	r6, r0
 80055b2:	220c      	movs	r2, #12
 80055b4:	4619      	mov	r1, r3
 80055b6:	4638      	mov	r0, r7
 80055b8:	f8cd a000 	str.w	sl, [sp]
 80055bc:	940a      	str	r4, [sp, #40]	; 0x28
 80055be:	f7fb faeb 	bl	8000b98 <_Unwind_VRS_Set>
 80055c2:	2e06      	cmp	r6, #6
 80055c4:	d11c      	bne.n	8005600 <__gxx_personality_v0+0xa4>
 80055c6:	e9d4 590a 	ldrd	r5, r9, [r4, #40]	; 0x28
 80055ca:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
 80055ce:	f1b8 0f00 	cmp.w	r8, #0
 80055d2:	bf0c      	ite	eq
 80055d4:	f04f 0b01 	moveq.w	fp, #1
 80055d8:	f04f 0b03 	movne.w	fp, #3
 80055dc:	f016 0608 	ands.w	r6, r6, #8
 80055e0:	f000 8107 	beq.w	80057f2 <__gxx_personality_v0+0x296>
 80055e4:	f1bb 0f01 	cmp.w	fp, #1
 80055e8:	f040 80ff 	bne.w	80057ea <__gxx_personality_v0+0x28e>
 80055ec:	f000 f95e 	bl	80058ac <_ZSt9terminatev>
 80055f0:	2008      	movs	r0, #8
 80055f2:	e7cb      	b.n	800558c <__gxx_personality_v0+0x30>
 80055f4:	f000 fe16 	bl	8006224 <abort>
 80055f8:	2001      	movs	r0, #1
 80055fa:	e7d4      	b.n	80055a6 <__gxx_personality_v0+0x4a>
 80055fc:	2006      	movs	r0, #6
 80055fe:	e7d2      	b.n	80055a6 <__gxx_personality_v0+0x4a>
 8005600:	4638      	mov	r0, r7
 8005602:	f7fc f853 	bl	80016ac <_Unwind_GetLanguageSpecificData>
 8005606:	4681      	mov	r9, r0
 8005608:	2800      	cmp	r0, #0
 800560a:	d0b9      	beq.n	8005580 <__gxx_personality_v0+0x24>
 800560c:	4652      	mov	r2, sl
 800560e:	4601      	mov	r1, r0
 8005610:	4638      	mov	r0, r7
 8005612:	f7ff ff66 	bl	80054e2 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8005616:	4639      	mov	r1, r7
 8005618:	4605      	mov	r5, r0
 800561a:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 800561e:	f7ff ff2c 	bl	800547a <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8005622:	210f      	movs	r1, #15
 8005624:	900c      	str	r0, [sp, #48]	; 0x30
 8005626:	4638      	mov	r0, r7
 8005628:	f7ff ff8c 	bl	8005544 <_Unwind_GetGR>
 800562c:	f020 0801 	bic.w	r8, r0, #1
 8005630:	f108 38ff 	add.w	r8, r8, #4294967295
 8005634:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005636:	42ab      	cmp	r3, r5
 8005638:	f240 80bf 	bls.w	80057ba <__gxx_personality_v0+0x25e>
 800563c:	462a      	mov	r2, r5
 800563e:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
 8005642:	ab06      	add	r3, sp, #24
 8005644:	2000      	movs	r0, #0
 8005646:	f7ff ff3c 	bl	80054c2 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>
 800564a:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
 800564e:	4602      	mov	r2, r0
 8005650:	ab07      	add	r3, sp, #28
 8005652:	2000      	movs	r0, #0
 8005654:	f7ff ff35 	bl	80054c2 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>
 8005658:	ab08      	add	r3, sp, #32
 800565a:	4602      	mov	r2, r0
 800565c:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
 8005660:	2000      	movs	r0, #0
 8005662:	f7ff ff2e 	bl	80054c2 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>
 8005666:	a909      	add	r1, sp, #36	; 0x24
 8005668:	f7ff fe9a 	bl	80053a0 <_ZL12read_uleb128PKhPm>
 800566c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800566e:	9a06      	ldr	r2, [sp, #24]
 8005670:	4605      	mov	r5, r0
 8005672:	4413      	add	r3, r2
 8005674:	4543      	cmp	r3, r8
 8005676:	d901      	bls.n	800567c <__gxx_personality_v0+0x120>
 8005678:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800567a:	e7db      	b.n	8005634 <__gxx_personality_v0+0xd8>
 800567c:	9a07      	ldr	r2, [sp, #28]
 800567e:	4413      	add	r3, r2
 8005680:	4543      	cmp	r3, r8
 8005682:	d9d7      	bls.n	8005634 <__gxx_personality_v0+0xd8>
 8005684:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005688:	f1b8 0f00 	cmp.w	r8, #0
 800568c:	d001      	beq.n	8005692 <__gxx_personality_v0+0x136>
 800568e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005690:	4498      	add	r8, r3
 8005692:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005694:	b115      	cbz	r5, 800569c <__gxx_personality_v0+0x140>
 8005696:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005698:	3d01      	subs	r5, #1
 800569a:	4405      	add	r5, r0
 800569c:	f1b8 0f00 	cmp.w	r8, #0
 80056a0:	f43f af6e 	beq.w	8005580 <__gxx_personality_v0+0x24>
 80056a4:	2d00      	cmp	r5, #0
 80056a6:	f000 80f2 	beq.w	800588e <__gxx_personality_v0+0x332>
 80056aa:	f016 0308 	ands.w	r3, r6, #8
 80056ae:	9302      	str	r3, [sp, #8]
 80056b0:	d034      	beq.n	800571c <__gxx_personality_v0+0x1c0>
 80056b2:	2347      	movs	r3, #71	; 0x47
 80056b4:	7023      	strb	r3, [r4, #0]
 80056b6:	234e      	movs	r3, #78	; 0x4e
 80056b8:	7063      	strb	r3, [r4, #1]
 80056ba:	2355      	movs	r3, #85	; 0x55
 80056bc:	70a3      	strb	r3, [r4, #2]
 80056be:	2343      	movs	r3, #67	; 0x43
 80056c0:	70e3      	strb	r3, [r4, #3]
 80056c2:	2346      	movs	r3, #70	; 0x46
 80056c4:	7123      	strb	r3, [r4, #4]
 80056c6:	234f      	movs	r3, #79	; 0x4f
 80056c8:	7163      	strb	r3, [r4, #5]
 80056ca:	2352      	movs	r3, #82	; 0x52
 80056cc:	71a3      	strb	r3, [r4, #6]
 80056ce:	2300      	movs	r3, #0
 80056d0:	71e3      	strb	r3, [r4, #7]
 80056d2:	f04f 0b00 	mov.w	fp, #0
 80056d6:	a907      	add	r1, sp, #28
 80056d8:	4628      	mov	r0, r5
 80056da:	f7ff fe70 	bl	80053be <_ZL12read_sleb128PKhPl>
 80056de:	a908      	add	r1, sp, #32
 80056e0:	9003      	str	r0, [sp, #12]
 80056e2:	f7ff fe6c 	bl	80053be <_ZL12read_sleb128PKhPl>
 80056e6:	9907      	ldr	r1, [sp, #28]
 80056e8:	2900      	cmp	r1, #0
 80056ea:	d063      	beq.n	80057b4 <__gxx_personality_v0+0x258>
 80056ec:	dd3a      	ble.n	8005764 <__gxx_personality_v0+0x208>
 80056ee:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 80056f2:	28ff      	cmp	r0, #255	; 0xff
 80056f4:	d032      	beq.n	800575c <__gxx_personality_v0+0x200>
 80056f6:	f000 0307 	and.w	r3, r0, #7
 80056fa:	2b04      	cmp	r3, #4
 80056fc:	f63f af7a 	bhi.w	80055f4 <__gxx_personality_v0+0x98>
 8005700:	a201      	add	r2, pc, #4	; (adr r2, 8005708 <__gxx_personality_v0+0x1ac>)
 8005702:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005706:	bf00      	nop
 8005708:	08005761 	.word	0x08005761
 800570c:	080055f5 	.word	0x080055f5
 8005710:	0800572f 	.word	0x0800572f
 8005714:	08005761 	.word	0x08005761
 8005718:	08005759 	.word	0x08005759
 800571c:	79e3      	ldrb	r3, [r4, #7]
 800571e:	2b01      	cmp	r3, #1
 8005720:	bf0c      	ite	eq
 8005722:	f854 3c20 	ldreq.w	r3, [r4, #-32]
 8005726:	f104 0358 	addne.w	r3, r4, #88	; 0x58
 800572a:	9305      	str	r3, [sp, #20]
 800572c:	e7d1      	b.n	80056d2 <__gxx_personality_v0+0x176>
 800572e:	2502      	movs	r5, #2
 8005730:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005732:	ab09      	add	r3, sp, #36	; 0x24
 8005734:	fb05 2211 	mls	r2, r5, r1, r2
 8005738:	990c      	ldr	r1, [sp, #48]	; 0x30
 800573a:	f7ff fe58 	bl	80053ee <_ZL28read_encoded_value_with_basehjPKhPj>
 800573e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005740:	b131      	cbz	r1, 8005750 <__gxx_personality_v0+0x1f4>
 8005742:	b35c      	cbz	r4, 800579c <__gxx_personality_v0+0x240>
 8005744:	2200      	movs	r2, #0
 8005746:	4620      	mov	r0, r4
 8005748:	ab05      	add	r3, sp, #20
 800574a:	f7ff fd8f 	bl	800526c <__cxa_type_match>
 800574e:	b328      	cbz	r0, 800579c <__gxx_personality_v0+0x240>
 8005750:	f04f 0b03 	mov.w	fp, #3
 8005754:	9d07      	ldr	r5, [sp, #28]
 8005756:	e034      	b.n	80057c2 <__gxx_personality_v0+0x266>
 8005758:	2508      	movs	r5, #8
 800575a:	e7e9      	b.n	8005730 <__gxx_personality_v0+0x1d4>
 800575c:	2500      	movs	r5, #0
 800575e:	e7e7      	b.n	8005730 <__gxx_personality_v0+0x1d4>
 8005760:	2504      	movs	r5, #4
 8005762:	e7e5      	b.n	8005730 <__gxx_personality_v0+0x1d4>
 8005764:	f1c1 517f 	rsb	r1, r1, #1069547520	; 0x3fc00000
 8005768:	f501 117f 	add.w	r1, r1, #4177920	; 0x3fc000
 800576c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800576e:	f501 517f 	add.w	r1, r1, #16320	; 0x3fc0
 8005772:	313f      	adds	r1, #63	; 0x3f
 8005774:	eb03 0581 	add.w	r5, r3, r1, lsl #2
 8005778:	b1bc      	cbz	r4, 80057aa <__gxx_personality_v0+0x24e>
 800577a:	9a02      	ldr	r2, [sp, #8]
 800577c:	b9aa      	cbnz	r2, 80057aa <__gxx_personality_v0+0x24e>
 800577e:	9b05      	ldr	r3, [sp, #20]
 8005780:	3d04      	subs	r5, #4
 8005782:	9309      	str	r3, [sp, #36]	; 0x24
 8005784:	f855 1f04 	ldr.w	r1, [r5, #4]!
 8005788:	2900      	cmp	r1, #0
 800578a:	d0e1      	beq.n	8005750 <__gxx_personality_v0+0x1f4>
 800578c:	2200      	movs	r2, #0
 800578e:	4620      	mov	r0, r4
 8005790:	ab09      	add	r3, sp, #36	; 0x24
 8005792:	4429      	add	r1, r5
 8005794:	f7ff fd6a 	bl	800526c <__cxa_type_match>
 8005798:	2800      	cmp	r0, #0
 800579a:	d0f3      	beq.n	8005784 <__gxx_personality_v0+0x228>
 800579c:	9d08      	ldr	r5, [sp, #32]
 800579e:	2d00      	cmp	r5, #0
 80057a0:	d071      	beq.n	8005886 <__gxx_personality_v0+0x32a>
 80057a2:	9b03      	ldr	r3, [sp, #12]
 80057a4:	442b      	add	r3, r5
 80057a6:	461d      	mov	r5, r3
 80057a8:	e795      	b.n	80056d6 <__gxx_personality_v0+0x17a>
 80057aa:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80057ae:	2b00      	cmp	r3, #0
 80057b0:	d1f4      	bne.n	800579c <__gxx_personality_v0+0x240>
 80057b2:	e7cd      	b.n	8005750 <__gxx_personality_v0+0x1f4>
 80057b4:	f04f 0b01 	mov.w	fp, #1
 80057b8:	e7f0      	b.n	800579c <__gxx_personality_v0+0x240>
 80057ba:	2500      	movs	r5, #0
 80057bc:	f04f 0b01 	mov.w	fp, #1
 80057c0:	46a8      	mov	r8, r5
 80057c2:	07f3      	lsls	r3, r6, #31
 80057c4:	f57f af0a 	bpl.w	80055dc <__gxx_personality_v0+0x80>
 80057c8:	f1bb 0f02 	cmp.w	fp, #2
 80057cc:	f43f aed8 	beq.w	8005580 <__gxx_personality_v0+0x24>
 80057d0:	210d      	movs	r1, #13
 80057d2:	4638      	mov	r0, r7
 80057d4:	9e05      	ldr	r6, [sp, #20]
 80057d6:	f7ff feb5 	bl	8005544 <_Unwind_GetGR>
 80057da:	e9c4 590a 	strd	r5, r9, [r4, #40]	; 0x28
 80057de:	e9c4 0608 	strd	r0, r6, [r4, #32]
 80057e2:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 80057e6:	2006      	movs	r0, #6
 80057e8:	e6d0      	b.n	800558c <__gxx_personality_v0+0x30>
 80057ea:	2d00      	cmp	r5, #0
 80057ec:	da22      	bge.n	8005834 <__gxx_personality_v0+0x2d8>
 80057ee:	f000 f86f 	bl	80058d0 <_ZSt10unexpectedv>
 80057f2:	f1bb 0f01 	cmp.w	fp, #1
 80057f6:	d102      	bne.n	80057fe <__gxx_personality_v0+0x2a2>
 80057f8:	4620      	mov	r0, r4
 80057fa:	f000 fca2 	bl	8006142 <__cxa_call_terminate>
 80057fe:	2d00      	cmp	r5, #0
 8005800:	da18      	bge.n	8005834 <__gxx_personality_v0+0x2d8>
 8005802:	4652      	mov	r2, sl
 8005804:	4649      	mov	r1, r9
 8005806:	4638      	mov	r0, r7
 8005808:	f7ff fe6b 	bl	80054e2 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800580c:	4639      	mov	r1, r7
 800580e:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8005812:	f7ff fe32 	bl	800547a <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8005816:	43eb      	mvns	r3, r5
 8005818:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800581a:	900c      	str	r0, [sp, #48]	; 0x30
 800581c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8005820:	f853 2026 	ldr.w	r2, [r3, r6, lsl #2]
 8005824:	b10a      	cbz	r2, 800582a <__gxx_personality_v0+0x2ce>
 8005826:	3601      	adds	r6, #1
 8005828:	e7fa      	b.n	8005820 <__gxx_personality_v0+0x2c4>
 800582a:	2204      	movs	r2, #4
 800582c:	e9c4 600a 	strd	r6, r0, [r4, #40]	; 0x28
 8005830:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8005834:	2300      	movs	r3, #0
 8005836:	ae09      	add	r6, sp, #36	; 0x24
 8005838:	461a      	mov	r2, r3
 800583a:	4619      	mov	r1, r3
 800583c:	4638      	mov	r0, r7
 800583e:	9600      	str	r6, [sp, #0]
 8005840:	9409      	str	r4, [sp, #36]	; 0x24
 8005842:	f7fb f9a9 	bl	8000b98 <_Unwind_VRS_Set>
 8005846:	2300      	movs	r3, #0
 8005848:	2201      	movs	r2, #1
 800584a:	4619      	mov	r1, r3
 800584c:	4638      	mov	r0, r7
 800584e:	9600      	str	r6, [sp, #0]
 8005850:	9509      	str	r5, [sp, #36]	; 0x24
 8005852:	f7fb f9a1 	bl	8000b98 <_Unwind_VRS_Set>
 8005856:	210f      	movs	r1, #15
 8005858:	4638      	mov	r0, r7
 800585a:	f7ff fe73 	bl	8005544 <_Unwind_GetGR>
 800585e:	2300      	movs	r3, #0
 8005860:	f000 0001 	and.w	r0, r0, #1
 8005864:	ea40 0008 	orr.w	r0, r0, r8
 8005868:	9009      	str	r0, [sp, #36]	; 0x24
 800586a:	220f      	movs	r2, #15
 800586c:	4619      	mov	r1, r3
 800586e:	4638      	mov	r0, r7
 8005870:	9600      	str	r6, [sp, #0]
 8005872:	f7fb f991 	bl	8000b98 <_Unwind_VRS_Set>
 8005876:	f1bb 0f02 	cmp.w	fp, #2
 800587a:	d102      	bne.n	8005882 <__gxx_personality_v0+0x326>
 800587c:	4620      	mov	r0, r4
 800587e:	f7ff fd53 	bl	8005328 <__cxa_begin_cleanup>
 8005882:	2007      	movs	r0, #7
 8005884:	e682      	b.n	800558c <__gxx_personality_v0+0x30>
 8005886:	f1bb 0f00 	cmp.w	fp, #0
 800588a:	f43f ae79 	beq.w	8005580 <__gxx_personality_v0+0x24>
 800588e:	f04f 0b02 	mov.w	fp, #2
 8005892:	e796      	b.n	80057c2 <__gxx_personality_v0+0x266>

08005894 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8005894:	b508      	push	{r3, lr}
 8005896:	4780      	blx	r0
 8005898:	f000 fcc4 	bl	8006224 <abort>

0800589c <_ZSt13get_terminatev>:
 800589c:	4b02      	ldr	r3, [pc, #8]	; (80058a8 <_ZSt13get_terminatev+0xc>)
 800589e:	6818      	ldr	r0, [r3, #0]
 80058a0:	f3bf 8f5b 	dmb	ish
 80058a4:	4770      	bx	lr
 80058a6:	bf00      	nop
 80058a8:	20000010 	.word	0x20000010

080058ac <_ZSt9terminatev>:
 80058ac:	b508      	push	{r3, lr}
 80058ae:	f7ff fff5 	bl	800589c <_ZSt13get_terminatev>
 80058b2:	f7ff ffef 	bl	8005894 <_ZN10__cxxabiv111__terminateEPFvvE>

080058b6 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 80058b6:	b508      	push	{r3, lr}
 80058b8:	4780      	blx	r0
 80058ba:	f7ff fff7 	bl	80058ac <_ZSt9terminatev>
	...

080058c0 <_ZSt14get_unexpectedv>:
 80058c0:	4b02      	ldr	r3, [pc, #8]	; (80058cc <_ZSt14get_unexpectedv+0xc>)
 80058c2:	6818      	ldr	r0, [r3, #0]
 80058c4:	f3bf 8f5b 	dmb	ish
 80058c8:	4770      	bx	lr
 80058ca:	bf00      	nop
 80058cc:	2000000c 	.word	0x2000000c

080058d0 <_ZSt10unexpectedv>:
 80058d0:	b508      	push	{r3, lr}
 80058d2:	f7ff fff5 	bl	80058c0 <_ZSt14get_unexpectedv>
 80058d6:	f7ff ffee 	bl	80058b6 <_ZN10__cxxabiv112__unexpectedEPFvvE>

080058da <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 80058da:	2801      	cmp	r0, #1
 80058dc:	b510      	push	{r4, lr}
 80058de:	d903      	bls.n	80058e8 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0xe>
 80058e0:	f851 0c14 	ldr.w	r0, [r1, #-20]
 80058e4:	f7ff ffd6 	bl	8005894 <_ZN10__cxxabiv111__terminateEPFvvE>
 80058e8:	f3bf 8f5b 	dmb	ish
 80058ec:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
 80058f0:	e853 2f00 	ldrex	r2, [r3]
 80058f4:	3a01      	subs	r2, #1
 80058f6:	e843 2000 	strex	r0, r2, [r3]
 80058fa:	2800      	cmp	r0, #0
 80058fc:	d1f8      	bne.n	80058f0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x16>
 80058fe:	f3bf 8f5b 	dmb	ish
 8005902:	b95a      	cbnz	r2, 800591c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x42>
 8005904:	f851 3c1c 	ldr.w	r3, [r1, #-28]
 8005908:	f101 0458 	add.w	r4, r1, #88	; 0x58
 800590c:	b10b      	cbz	r3, 8005912 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x38>
 800590e:	4620      	mov	r0, r4
 8005910:	4798      	blx	r3
 8005912:	4620      	mov	r0, r4
 8005914:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005918:	f7ff bc60 	b.w	80051dc <__cxa_free_exception>
 800591c:	bd10      	pop	{r4, pc}
	...

08005920 <__cxa_init_primary_exception>:
 8005920:	b538      	push	{r3, r4, r5, lr}
 8005922:	2500      	movs	r5, #0
 8005924:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
 8005928:	f840 5c80 	str.w	r5, [r0, #-128]
 800592c:	4604      	mov	r4, r0
 800592e:	f7ff ffc7 	bl	80058c0 <_ZSt14get_unexpectedv>
 8005932:	f844 0c70 	str.w	r0, [r4, #-112]
 8005936:	f7ff ffb1 	bl	800589c <_ZSt13get_terminatev>
 800593a:	2347      	movs	r3, #71	; 0x47
 800593c:	f804 3c58 	strb.w	r3, [r4, #-88]
 8005940:	234e      	movs	r3, #78	; 0x4e
 8005942:	f804 3c57 	strb.w	r3, [r4, #-87]
 8005946:	2355      	movs	r3, #85	; 0x55
 8005948:	f804 3c56 	strb.w	r3, [r4, #-86]
 800594c:	2343      	movs	r3, #67	; 0x43
 800594e:	f804 3c55 	strb.w	r3, [r4, #-85]
 8005952:	f804 3c54 	strb.w	r3, [r4, #-84]
 8005956:	232b      	movs	r3, #43	; 0x2b
 8005958:	f804 3c53 	strb.w	r3, [r4, #-83]
 800595c:	f804 3c52 	strb.w	r3, [r4, #-82]
 8005960:	4b04      	ldr	r3, [pc, #16]	; (8005974 <__cxa_init_primary_exception+0x54>)
 8005962:	f844 0c6c 	str.w	r0, [r4, #-108]
 8005966:	f804 5c51 	strb.w	r5, [r4, #-81]
 800596a:	f844 3c50 	str.w	r3, [r4, #-80]
 800596e:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
 8005972:	bd38      	pop	{r3, r4, r5, pc}
 8005974:	080058db 	.word	0x080058db

08005978 <__cxa_throw>:
 8005978:	b508      	push	{r3, lr}
 800597a:	4604      	mov	r4, r0
 800597c:	460d      	mov	r5, r1
 800597e:	4616      	mov	r6, r2
 8005980:	f7ff fd0a 	bl	8005398 <__cxa_get_globals>
 8005984:	6843      	ldr	r3, [r0, #4]
 8005986:	4632      	mov	r2, r6
 8005988:	3301      	adds	r3, #1
 800598a:	4629      	mov	r1, r5
 800598c:	6043      	str	r3, [r0, #4]
 800598e:	4620      	mov	r0, r4
 8005990:	f7ff ffc6 	bl	8005920 <__cxa_init_primary_exception>
 8005994:	2301      	movs	r3, #1
 8005996:	4604      	mov	r4, r0
 8005998:	f844 3b28 	str.w	r3, [r4], #40
 800599c:	4620      	mov	r0, r4
 800599e:	f7fb fc6f 	bl	8001280 <_Unwind_RaiseException>
 80059a2:	4620      	mov	r0, r4
 80059a4:	f000 fc0d 	bl	80061c2 <__cxa_begin_catch>
 80059a8:	f7ff ff80 	bl	80058ac <_ZSt9terminatev>

080059ac <_Znwj>:
 80059ac:	2801      	cmp	r0, #1
 80059ae:	bf38      	it	cc
 80059b0:	2001      	movcc	r0, #1
 80059b2:	b510      	push	{r4, lr}
 80059b4:	4604      	mov	r4, r0
 80059b6:	4620      	mov	r0, r4
 80059b8:	f000 fc66 	bl	8006288 <malloc>
 80059bc:	b930      	cbnz	r0, 80059cc <_Znwj+0x20>
 80059be:	f000 fc29 	bl	8006214 <_ZSt15get_new_handlerv>
 80059c2:	b908      	cbnz	r0, 80059c8 <_Znwj+0x1c>
 80059c4:	f000 fc2e 	bl	8006224 <abort>
 80059c8:	4780      	blx	r0
 80059ca:	e7f4      	b.n	80059b6 <_Znwj+0xa>
 80059cc:	bd10      	pop	{r4, pc}
	...

080059d0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 80059d0:	b510      	push	{r4, lr}
 80059d2:	4604      	mov	r4, r0
 80059d4:	4b02      	ldr	r3, [pc, #8]	; (80059e0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 80059d6:	6003      	str	r3, [r0, #0]
 80059d8:	f7ff fb3a 	bl	8005050 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 80059dc:	4620      	mov	r0, r4
 80059de:	bd10      	pop	{r4, pc}
 80059e0:	08006b28 	.word	0x08006b28

080059e4 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 80059e4:	b510      	push	{r4, lr}
 80059e6:	4604      	mov	r4, r0
 80059e8:	f7ff fff2 	bl	80059d0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>
 80059ec:	4620      	mov	r0, r4
 80059ee:	210c      	movs	r1, #12
 80059f0:	f7ff fb82 	bl	80050f8 <_ZdlPvj>
 80059f4:	4620      	mov	r0, r4
 80059f6:	bd10      	pop	{r4, pc}

080059f8 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 80059f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80059fc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005a00:	4606      	mov	r6, r0
 8005a02:	4590      	cmp	r8, r2
 8005a04:	460f      	mov	r7, r1
 8005a06:	4615      	mov	r5, r2
 8005a08:	461c      	mov	r4, r3
 8005a0a:	d00b      	beq.n	8005a24 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x2c>
 8005a0c:	68b0      	ldr	r0, [r6, #8]
 8005a0e:	462a      	mov	r2, r5
 8005a10:	6803      	ldr	r3, [r0, #0]
 8005a12:	f8cd 8018 	str.w	r8, [sp, #24]
 8005a16:	6a1e      	ldr	r6, [r3, #32]
 8005a18:	4639      	mov	r1, r7
 8005a1a:	4623      	mov	r3, r4
 8005a1c:	46b4      	mov	ip, r6
 8005a1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005a22:	4760      	bx	ip
 8005a24:	4619      	mov	r1, r3
 8005a26:	f000 f857 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 8005a2a:	2800      	cmp	r0, #0
 8005a2c:	d0ee      	beq.n	8005a0c <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x14>
 8005a2e:	2006      	movs	r0, #6
 8005a30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005a34 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 8005a34:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a38:	460d      	mov	r5, r1
 8005a3a:	e9dd 4b0a 	ldrd	r4, fp, [sp, #40]	; 0x28
 8005a3e:	e9dd a60c 	ldrd	sl, r6, [sp, #48]	; 0x30
 8005a42:	4619      	mov	r1, r3
 8005a44:	4681      	mov	r9, r0
 8005a46:	4617      	mov	r7, r2
 8005a48:	4698      	mov	r8, r3
 8005a4a:	f000 f845 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 8005a4e:	b190      	cbz	r0, 8005a76 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x42>
 8005a50:	2d00      	cmp	r5, #0
 8005a52:	6034      	str	r4, [r6, #0]
 8005a54:	7137      	strb	r7, [r6, #4]
 8005a56:	db09      	blt.n	8005a6c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x38>
 8005a58:	442c      	add	r4, r5
 8005a5a:	45a2      	cmp	sl, r4
 8005a5c:	bf0c      	ite	eq
 8005a5e:	2406      	moveq	r4, #6
 8005a60:	2401      	movne	r4, #1
 8005a62:	71b4      	strb	r4, [r6, #6]
 8005a64:	2000      	movs	r0, #0
 8005a66:	b001      	add	sp, #4
 8005a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a6c:	3502      	adds	r5, #2
 8005a6e:	d1f9      	bne.n	8005a64 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 8005a70:	2301      	movs	r3, #1
 8005a72:	71b3      	strb	r3, [r6, #6]
 8005a74:	e7f6      	b.n	8005a64 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 8005a76:	4554      	cmp	r4, sl
 8005a78:	d106      	bne.n	8005a88 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x54>
 8005a7a:	4659      	mov	r1, fp
 8005a7c:	4648      	mov	r0, r9
 8005a7e:	f000 f82b 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 8005a82:	b108      	cbz	r0, 8005a88 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x54>
 8005a84:	7177      	strb	r7, [r6, #5]
 8005a86:	e7ed      	b.n	8005a64 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 8005a88:	f8d9 0008 	ldr.w	r0, [r9, #8]
 8005a8c:	463a      	mov	r2, r7
 8005a8e:	6803      	ldr	r3, [r0, #0]
 8005a90:	e9cd a60c 	strd	sl, r6, [sp, #48]	; 0x30
 8005a94:	e9cd 4b0a 	strd	r4, fp, [sp, #40]	; 0x28
 8005a98:	69dc      	ldr	r4, [r3, #28]
 8005a9a:	4629      	mov	r1, r5
 8005a9c:	4643      	mov	r3, r8
 8005a9e:	46a4      	mov	ip, r4
 8005aa0:	b001      	add	sp, #4
 8005aa2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005aa6:	4760      	bx	ip

08005aa8 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 8005aa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005aac:	4607      	mov	r7, r0
 8005aae:	460c      	mov	r4, r1
 8005ab0:	4615      	mov	r5, r2
 8005ab2:	461e      	mov	r6, r3
 8005ab4:	f7ff faff 	bl	80050b6 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 8005ab8:	b948      	cbnz	r0, 8005ace <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x26>
 8005aba:	68b8      	ldr	r0, [r7, #8]
 8005abc:	462a      	mov	r2, r5
 8005abe:	6803      	ldr	r3, [r0, #0]
 8005ac0:	4621      	mov	r1, r4
 8005ac2:	699f      	ldr	r7, [r3, #24]
 8005ac4:	4633      	mov	r3, r6
 8005ac6:	46bc      	mov	ip, r7
 8005ac8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005acc:	4760      	bx	ip
 8005ace:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005ad2 <_ZNSt9type_infoD1Ev>:
 8005ad2:	4770      	bx	lr

08005ad4 <_ZNKSt9type_info14__is_pointer_pEv>:
 8005ad4:	2000      	movs	r0, #0
 8005ad6:	4770      	bx	lr

08005ad8 <_ZNKSt9type_infoeqERKS_>:
 8005ad8:	4281      	cmp	r1, r0
 8005ada:	b508      	push	{r3, lr}
 8005adc:	d00e      	beq.n	8005afc <_ZNKSt9type_infoeqERKS_+0x24>
 8005ade:	6840      	ldr	r0, [r0, #4]
 8005ae0:	7803      	ldrb	r3, [r0, #0]
 8005ae2:	2b2a      	cmp	r3, #42	; 0x2a
 8005ae4:	d00c      	beq.n	8005b00 <_ZNKSt9type_infoeqERKS_+0x28>
 8005ae6:	6849      	ldr	r1, [r1, #4]
 8005ae8:	780b      	ldrb	r3, [r1, #0]
 8005aea:	2b2a      	cmp	r3, #42	; 0x2a
 8005aec:	bf08      	it	eq
 8005aee:	3101      	addeq	r1, #1
 8005af0:	f7fa fb2c 	bl	800014c <strcmp>
 8005af4:	fab0 f080 	clz	r0, r0
 8005af8:	0940      	lsrs	r0, r0, #5
 8005afa:	bd08      	pop	{r3, pc}
 8005afc:	2001      	movs	r0, #1
 8005afe:	e7fc      	b.n	8005afa <_ZNKSt9type_infoeqERKS_+0x22>
 8005b00:	2000      	movs	r0, #0
 8005b02:	e7fa      	b.n	8005afa <_ZNKSt9type_infoeqERKS_+0x22>

08005b04 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>:
 8005b04:	b510      	push	{r4, lr}
 8005b06:	4604      	mov	r4, r0
 8005b08:	4b02      	ldr	r3, [pc, #8]	; (8005b14 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev+0x10>)
 8005b0a:	6003      	str	r3, [r0, #0]
 8005b0c:	f7ff faa0 	bl	8005050 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 8005b10:	4620      	mov	r0, r4
 8005b12:	bd10      	pop	{r4, pc}
 8005b14:	08006ba0 	.word	0x08006ba0

08005b18 <_ZN10__cxxabiv121__vmi_class_type_infoD0Ev>:
 8005b18:	b510      	push	{r4, lr}
 8005b1a:	4604      	mov	r4, r0
 8005b1c:	f7ff fff2 	bl	8005b04 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>
 8005b20:	4620      	mov	r0, r4
 8005b22:	2118      	movs	r1, #24
 8005b24:	f7ff fae8 	bl	80050f8 <_ZdlPvj>
 8005b28:	4620      	mov	r0, r4
 8005b2a:	bd10      	pop	{r4, pc}

08005b2c <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 8005b2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b30:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8005b34:	4604      	mov	r4, r0
 8005b36:	454a      	cmp	r2, r9
 8005b38:	460f      	mov	r7, r1
 8005b3a:	4616      	mov	r6, r2
 8005b3c:	469a      	mov	sl, r3
 8005b3e:	d024      	beq.n	8005b8a <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x5e>
 8005b40:	f8d4 800c 	ldr.w	r8, [r4, #12]
 8005b44:	eb04 04c8 	add.w	r4, r4, r8, lsl #3
 8005b48:	f1b8 0f00 	cmp.w	r8, #0
 8005b4c:	d028      	beq.n	8005ba0 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x74>
 8005b4e:	68e5      	ldr	r5, [r4, #12]
 8005b50:	07aa      	lsls	r2, r5, #30
 8005b52:	d521      	bpl.n	8005b98 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x6c>
 8005b54:	122a      	asrs	r2, r5, #8
 8005b56:	f015 0501 	ands.w	r5, r5, #1
 8005b5a:	d003      	beq.n	8005b64 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x38>
 8005b5c:	1cfb      	adds	r3, r7, #3
 8005b5e:	d01b      	beq.n	8005b98 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x6c>
 8005b60:	6833      	ldr	r3, [r6, #0]
 8005b62:	589a      	ldr	r2, [r3, r2]
 8005b64:	68a0      	ldr	r0, [r4, #8]
 8005b66:	4639      	mov	r1, r7
 8005b68:	6803      	ldr	r3, [r0, #0]
 8005b6a:	f8cd 9000 	str.w	r9, [sp]
 8005b6e:	f8d3 b020 	ldr.w	fp, [r3, #32]
 8005b72:	4432      	add	r2, r6
 8005b74:	4653      	mov	r3, sl
 8005b76:	47d8      	blx	fp
 8005b78:	2803      	cmp	r0, #3
 8005b7a:	d90d      	bls.n	8005b98 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x6c>
 8005b7c:	b115      	cbz	r5, 8005b84 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x58>
 8005b7e:	f040 0001 	orr.w	r0, r0, #1
 8005b82:	b2c0      	uxtb	r0, r0
 8005b84:	b003      	add	sp, #12
 8005b86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b8a:	4619      	mov	r1, r3
 8005b8c:	f7ff ffa4 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 8005b90:	2800      	cmp	r0, #0
 8005b92:	d0d5      	beq.n	8005b40 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x14>
 8005b94:	2006      	movs	r0, #6
 8005b96:	e7f5      	b.n	8005b84 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x58>
 8005b98:	f108 38ff 	add.w	r8, r8, #4294967295
 8005b9c:	3c08      	subs	r4, #8
 8005b9e:	e7d3      	b.n	8005b48 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x1c>
 8005ba0:	2001      	movs	r0, #1
 8005ba2:	e7ef      	b.n	8005b84 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x58>

08005ba4 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_>:
 8005ba4:	b4f0      	push	{r4, r5, r6, r7}
 8005ba6:	1e0d      	subs	r5, r1, #0
 8005ba8:	9c04      	ldr	r4, [sp, #16]
 8005baa:	db06      	blt.n	8005bba <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_+0x16>
 8005bac:	1950      	adds	r0, r2, r5
 8005bae:	4284      	cmp	r4, r0
 8005bb0:	bf14      	ite	ne
 8005bb2:	2001      	movne	r0, #1
 8005bb4:	2006      	moveq	r0, #6
 8005bb6:	bcf0      	pop	{r4, r5, r6, r7}
 8005bb8:	4770      	bx	lr
 8005bba:	3502      	adds	r5, #2
 8005bbc:	d005      	beq.n	8005bca <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_+0x26>
 8005bbe:	6805      	ldr	r5, [r0, #0]
 8005bc0:	9404      	str	r4, [sp, #16]
 8005bc2:	6a2c      	ldr	r4, [r5, #32]
 8005bc4:	46a4      	mov	ip, r4
 8005bc6:	bcf0      	pop	{r4, r5, r6, r7}
 8005bc8:	4760      	bx	ip
 8005bca:	2001      	movs	r0, #1
 8005bcc:	e7f3      	b.n	8005bb6 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_+0x12>

08005bce <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 8005bce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005bd2:	b091      	sub	sp, #68	; 0x44
 8005bd4:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8005bd6:	469a      	mov	sl, r3
 8005bd8:	68a3      	ldr	r3, [r4, #8]
 8005bda:	4688      	mov	r8, r1
 8005bdc:	06d9      	lsls	r1, r3, #27
 8005bde:	bf48      	it	mi
 8005be0:	6883      	ldrmi	r3, [r0, #8]
 8005be2:	9206      	str	r2, [sp, #24]
 8005be4:	bf48      	it	mi
 8005be6:	60a3      	strmi	r3, [r4, #8]
 8005be8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8005bea:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005bec:	4681      	mov	r9, r0
 8005bee:	4293      	cmp	r3, r2
 8005bf0:	d107      	bne.n	8005c02 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34>
 8005bf2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8005bf4:	f7ff ff70 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 8005bf8:	b118      	cbz	r0, 8005c02 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34>
 8005bfa:	9b06      	ldr	r3, [sp, #24]
 8005bfc:	7163      	strb	r3, [r4, #5]
 8005bfe:	2700      	movs	r7, #0
 8005c00:	e085      	b.n	8005d0e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x140>
 8005c02:	4651      	mov	r1, sl
 8005c04:	4648      	mov	r0, r9
 8005c06:	f7ff ff67 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 8005c0a:	b1c0      	cbz	r0, 8005c3e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x70>
 8005c0c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005c0e:	f1b8 0f00 	cmp.w	r8, #0
 8005c12:	6023      	str	r3, [r4, #0]
 8005c14:	9b06      	ldr	r3, [sp, #24]
 8005c16:	7123      	strb	r3, [r4, #4]
 8005c18:	db0b      	blt.n	8005c32 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x64>
 8005c1a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005c1c:	4498      	add	r8, r3
 8005c1e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8005c20:	4543      	cmp	r3, r8
 8005c22:	bf0c      	ite	eq
 8005c24:	f04f 0806 	moveq.w	r8, #6
 8005c28:	f04f 0801 	movne.w	r8, #1
 8005c2c:	f884 8006 	strb.w	r8, [r4, #6]
 8005c30:	e7e5      	b.n	8005bfe <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 8005c32:	f118 0f02 	cmn.w	r8, #2
 8005c36:	d1e2      	bne.n	8005bfe <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 8005c38:	2301      	movs	r3, #1
 8005c3a:	71a3      	strb	r3, [r4, #6]
 8005c3c:	e7df      	b.n	8005bfe <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 8005c3e:	f1b8 0f00 	cmp.w	r8, #0
 8005c42:	bfa8      	it	ge
 8005c44:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
 8005c46:	f04f 0700 	mov.w	r7, #0
 8005c4a:	bfa4      	itt	ge
 8005c4c:	eba3 0308 	subge.w	r3, r3, r8
 8005c50:	9307      	strge	r3, [sp, #28]
 8005c52:	f04f 0302 	mov.w	r3, #2
 8005c56:	e9cd 7309 	strd	r7, r3, [sp, #36]	; 0x24
 8005c5a:	f04f 0301 	mov.w	r3, #1
 8005c5e:	9308      	str	r3, [sp, #32]
 8005c60:	9b06      	ldr	r3, [sp, #24]
 8005c62:	bfb8      	it	lt
 8005c64:	9007      	strlt	r0, [sp, #28]
 8005c66:	f043 0301 	orr.w	r3, r3, #1
 8005c6a:	930b      	str	r3, [sp, #44]	; 0x2c
 8005c6c:	f8d9 b00c 	ldr.w	fp, [r9, #12]
 8005c70:	eb09 03cb 	add.w	r3, r9, fp, lsl #3
 8005c74:	9305      	str	r3, [sp, #20]
 8005c76:	f1bb 0f00 	cmp.w	fp, #0
 8005c7a:	f000 80d5 	beq.w	8005e28 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x25a>
 8005c7e:	2300      	movs	r3, #0
 8005c80:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 8005c84:	9b05      	ldr	r3, [sp, #20]
 8005c86:	68a5      	ldr	r5, [r4, #8]
 8005c88:	68db      	ldr	r3, [r3, #12]
 8005c8a:	950f      	str	r5, [sp, #60]	; 0x3c
 8005c8c:	07da      	lsls	r2, r3, #31
 8005c8e:	bf48      	it	mi
 8005c90:	981a      	ldrmi	r0, [sp, #104]	; 0x68
 8005c92:	ea4f 2123 	mov.w	r1, r3, asr #8
 8005c96:	bf42      	ittt	mi
 8005c98:	6800      	ldrmi	r0, [r0, #0]
 8005c9a:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
 8005c9c:	5841      	ldrmi	r1, [r0, r1]
 8005c9e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8005ca0:	bf58      	it	pl
 8005ca2:	9a06      	ldrpl	r2, [sp, #24]
 8005ca4:	4401      	add	r1, r0
 8005ca6:	9807      	ldr	r0, [sp, #28]
 8005ca8:	b138      	cbz	r0, 8005cba <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xec>
 8005caa:	4288      	cmp	r0, r1
 8005cac:	bf2c      	ite	cs
 8005cae:	2000      	movcs	r0, #0
 8005cb0:	2001      	movcc	r0, #1
 8005cb2:	9e08      	ldr	r6, [sp, #32]
 8005cb4:	42b0      	cmp	r0, r6
 8005cb6:	f000 80b3 	beq.w	8005e20 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x252>
 8005cba:	079b      	lsls	r3, r3, #30
 8005cbc:	d407      	bmi.n	8005cce <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x100>
 8005cbe:	f118 0f02 	cmn.w	r8, #2
 8005cc2:	d102      	bne.n	8005cca <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xfc>
 8005cc4:	07ae      	lsls	r6, r5, #30
 8005cc6:	f000 80ad 	beq.w	8005e24 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x256>
 8005cca:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
 8005cce:	9b05      	ldr	r3, [sp, #20]
 8005cd0:	ad0d      	add	r5, sp, #52	; 0x34
 8005cd2:	6898      	ldr	r0, [r3, #8]
 8005cd4:	6803      	ldr	r3, [r0, #0]
 8005cd6:	9503      	str	r5, [sp, #12]
 8005cd8:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8005cda:	9502      	str	r5, [sp, #8]
 8005cdc:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8005cde:	e9cd 1500 	strd	r1, r5, [sp]
 8005ce2:	4641      	mov	r1, r8
 8005ce4:	69dd      	ldr	r5, [r3, #28]
 8005ce6:	4653      	mov	r3, sl
 8005ce8:	47a8      	blx	r5
 8005cea:	7963      	ldrb	r3, [r4, #5]
 8005cec:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
 8005cf0:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
 8005cf4:	4313      	orrs	r3, r2
 8005cf6:	2d06      	cmp	r5, #6
 8005cf8:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005cfa:	7163      	strb	r3, [r4, #5]
 8005cfc:	d001      	beq.n	8005d02 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x134>
 8005cfe:	2d02      	cmp	r5, #2
 8005d00:	d109      	bne.n	8005d16 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x148>
 8005d02:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
 8005d06:	6021      	str	r1, [r4, #0]
 8005d08:	7123      	strb	r3, [r4, #4]
 8005d0a:	71a5      	strb	r5, [r4, #6]
 8005d0c:	4607      	mov	r7, r0
 8005d0e:	4638      	mov	r0, r7
 8005d10:	b011      	add	sp, #68	; 0x44
 8005d12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d16:	6822      	ldr	r2, [r4, #0]
 8005d18:	b9a7      	cbnz	r7, 8005d44 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x176>
 8005d1a:	b9aa      	cbnz	r2, 8005d48 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17a>
 8005d1c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8005d20:	6021      	str	r1, [r4, #0]
 8005d22:	7122      	strb	r2, [r4, #4]
 8005d24:	b121      	cbz	r1, 8005d30 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x162>
 8005d26:	b11b      	cbz	r3, 8005d30 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x162>
 8005d28:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005d2c:	07dd      	lsls	r5, r3, #31
 8005d2e:	d5ed      	bpl.n	8005d0c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x13e>
 8005d30:	7963      	ldrb	r3, [r4, #5]
 8005d32:	2b04      	cmp	r3, #4
 8005d34:	d0ea      	beq.n	8005d0c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x13e>
 8005d36:	9b05      	ldr	r3, [sp, #20]
 8005d38:	4607      	mov	r7, r0
 8005d3a:	3b08      	subs	r3, #8
 8005d3c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8005d40:	9305      	str	r3, [sp, #20]
 8005d42:	e798      	b.n	8005c76 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xa8>
 8005d44:	2a00      	cmp	r2, #0
 8005d46:	d037      	beq.n	8005db8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1ea>
 8005d48:	4291      	cmp	r1, r2
 8005d4a:	d106      	bne.n	8005d5a <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x18c>
 8005d4c:	7923      	ldrb	r3, [r4, #4]
 8005d4e:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8005d52:	4313      	orrs	r3, r2
 8005d54:	7123      	strb	r3, [r4, #4]
 8005d56:	4638      	mov	r0, r7
 8005d58:	e7ea      	b.n	8005d30 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x162>
 8005d5a:	b909      	cbnz	r1, 8005d60 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x192>
 8005d5c:	2800      	cmp	r0, #0
 8005d5e:	d0fa      	beq.n	8005d56 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x188>
 8005d60:	2b03      	cmp	r3, #3
 8005d62:	79a6      	ldrb	r6, [r4, #6]
 8005d64:	d904      	bls.n	8005d70 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1a2>
 8005d66:	07d9      	lsls	r1, r3, #31
 8005d68:	d529      	bpl.n	8005dbe <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f0>
 8005d6a:	68a3      	ldr	r3, [r4, #8]
 8005d6c:	079b      	lsls	r3, r3, #30
 8005d6e:	d526      	bpl.n	8005dbe <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f0>
 8005d70:	b97e      	cbnz	r6, 8005d92 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1c4>
 8005d72:	2d03      	cmp	r5, #3
 8005d74:	d905      	bls.n	8005d82 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1b4>
 8005d76:	07ee      	lsls	r6, r5, #31
 8005d78:	d541      	bpl.n	8005dfe <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x230>
 8005d7a:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005d7e:	0798      	lsls	r0, r3, #30
 8005d80:	d53d      	bpl.n	8005dfe <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x230>
 8005d82:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8005d84:	4641      	mov	r1, r8
 8005d86:	9300      	str	r3, [sp, #0]
 8005d88:	4650      	mov	r0, sl
 8005d8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005d8c:	f7ff ff0a 	bl	8005ba4 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_>
 8005d90:	4606      	mov	r6, r0
 8005d92:	b9e5      	cbnz	r5, 8005dce <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x200>
 8005d94:	2e03      	cmp	r6, #3
 8005d96:	d905      	bls.n	8005da4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1d6>
 8005d98:	07f1      	lsls	r1, r6, #31
 8005d9a:	d532      	bpl.n	8005e02 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x234>
 8005d9c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005da0:	079a      	lsls	r2, r3, #30
 8005da2:	d52e      	bpl.n	8005e02 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x234>
 8005da4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8005da6:	4641      	mov	r1, r8
 8005da8:	9300      	str	r3, [sp, #0]
 8005daa:	4650      	mov	r0, sl
 8005dac:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005dae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005db0:	f7ff fef8 	bl	8005ba4 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_>
 8005db4:	4605      	mov	r5, r0
 8005db6:	e00a      	b.n	8005dce <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x200>
 8005db8:	2900      	cmp	r1, #0
 8005dba:	d1d1      	bne.n	8005d60 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x192>
 8005dbc:	e7cb      	b.n	8005d56 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x188>
 8005dbe:	2e01      	cmp	r6, #1
 8005dc0:	bf38      	it	cc
 8005dc2:	2601      	movcc	r6, #1
 8005dc4:	2d01      	cmp	r5, #1
 8005dc6:	bf38      	it	cc
 8005dc8:	2501      	movcc	r5, #1
 8005dca:	b2f6      	uxtb	r6, r6
 8005dcc:	b2ed      	uxtb	r5, r5
 8005dce:	ea85 0306 	eor.w	r3, r5, r6
 8005dd2:	b2db      	uxtb	r3, r3
 8005dd4:	2b03      	cmp	r3, #3
 8005dd6:	d916      	bls.n	8005e06 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x238>
 8005dd8:	2d03      	cmp	r5, #3
 8005dda:	bf81      	itttt	hi
 8005ddc:	462e      	movhi	r6, r5
 8005dde:	9b0d      	ldrhi	r3, [sp, #52]	; 0x34
 8005de0:	2000      	movhi	r0, #0
 8005de2:	6023      	strhi	r3, [r4, #0]
 8005de4:	bf8a      	itet	hi
 8005de6:	f89d 3038 	ldrbhi.w	r3, [sp, #56]	; 0x38
 8005dea:	4638      	movls	r0, r7
 8005dec:	7123      	strbhi	r3, [r4, #4]
 8005dee:	07b3      	lsls	r3, r6, #30
 8005df0:	71a6      	strb	r6, [r4, #6]
 8005df2:	d402      	bmi.n	8005dfa <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x22c>
 8005df4:	f016 0601 	ands.w	r6, r6, #1
 8005df8:	d19a      	bne.n	8005d30 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x162>
 8005dfa:	2000      	movs	r0, #0
 8005dfc:	e786      	b.n	8005d0c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x13e>
 8005dfe:	2601      	movs	r6, #1
 8005e00:	e7e5      	b.n	8005dce <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x200>
 8005e02:	2501      	movs	r5, #1
 8005e04:	e7e3      	b.n	8005dce <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x200>
 8005e06:	2300      	movs	r3, #0
 8005e08:	4035      	ands	r5, r6
 8005e0a:	b2ed      	uxtb	r5, r5
 8005e0c:	2d03      	cmp	r5, #3
 8005e0e:	6023      	str	r3, [r4, #0]
 8005e10:	d903      	bls.n	8005e1a <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x24c>
 8005e12:	2302      	movs	r3, #2
 8005e14:	2001      	movs	r0, #1
 8005e16:	71a3      	strb	r3, [r4, #6]
 8005e18:	e778      	b.n	8005d0c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x13e>
 8005e1a:	2001      	movs	r0, #1
 8005e1c:	71a0      	strb	r0, [r4, #6]
 8005e1e:	e787      	b.n	8005d30 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x162>
 8005e20:	2301      	movs	r3, #1
 8005e22:	9309      	str	r3, [sp, #36]	; 0x24
 8005e24:	4638      	mov	r0, r7
 8005e26:	e786      	b.n	8005d36 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x168>
 8005e28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e2a:	2b00      	cmp	r3, #0
 8005e2c:	f43f af6f 	beq.w	8005d0e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x140>
 8005e30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e32:	2b01      	cmp	r3, #1
 8005e34:	f43f af6b 	beq.w	8005d0e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x140>
 8005e38:	2301      	movs	r3, #1
 8005e3a:	f8cd b020 	str.w	fp, [sp, #32]
 8005e3e:	930a      	str	r3, [sp, #40]	; 0x28
 8005e40:	e714      	b.n	8005c6c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x9e>

08005e42 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 8005e42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e46:	b089      	sub	sp, #36	; 0x24
 8005e48:	4606      	mov	r6, r0
 8005e4a:	4617      	mov	r7, r2
 8005e4c:	461c      	mov	r4, r3
 8005e4e:	9102      	str	r1, [sp, #8]
 8005e50:	f7ff f931 	bl	80050b6 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 8005e54:	4605      	mov	r5, r0
 8005e56:	2800      	cmp	r0, #0
 8005e58:	d15f      	bne.n	8005f1a <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xd8>
 8005e5a:	f8d4 9008 	ldr.w	r9, [r4, #8]
 8005e5e:	f8d6 a00c 	ldr.w	sl, [r6, #12]
 8005e62:	f019 0f10 	tst.w	r9, #16
 8005e66:	bf18      	it	ne
 8005e68:	f8d6 9008 	ldrne.w	r9, [r6, #8]
 8005e6c:	eb06 08ca 	add.w	r8, r6, sl, lsl #3
 8005e70:	f009 0301 	and.w	r3, r9, #1
 8005e74:	9303      	str	r3, [sp, #12]
 8005e76:	f10d 0b10 	add.w	fp, sp, #16
 8005e7a:	f1ba 0f00 	cmp.w	sl, #0
 8005e7e:	d072      	beq.n	8005f66 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x124>
 8005e80:	2300      	movs	r3, #0
 8005e82:	9304      	str	r3, [sp, #16]
 8005e84:	f88d 3014 	strb.w	r3, [sp, #20]
 8005e88:	2300      	movs	r3, #0
 8005e8a:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8005e8e:	9307      	str	r3, [sp, #28]
 8005e90:	f002 0301 	and.w	r3, r2, #1
 8005e94:	9300      	str	r3, [sp, #0]
 8005e96:	f002 0302 	and.w	r3, r2, #2
 8005e9a:	9301      	str	r3, [sp, #4]
 8005e9c:	9b03      	ldr	r3, [sp, #12]
 8005e9e:	f002 0102 	and.w	r1, r2, #2
 8005ea2:	430b      	orrs	r3, r1
 8005ea4:	f8cd 9018 	str.w	r9, [sp, #24]
 8005ea8:	d104      	bne.n	8005eb4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x72>
 8005eaa:	f10a 3aff 	add.w	sl, sl, #4294967295
 8005eae:	f1a8 0808 	sub.w	r8, r8, #8
 8005eb2:	e7e2      	b.n	8005e7a <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x38>
 8005eb4:	2f00      	cmp	r7, #0
 8005eb6:	d034      	beq.n	8005f22 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe0>
 8005eb8:	9b00      	ldr	r3, [sp, #0]
 8005eba:	1212      	asrs	r2, r2, #8
 8005ebc:	b10b      	cbz	r3, 8005ec2 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x80>
 8005ebe:	683b      	ldr	r3, [r7, #0]
 8005ec0:	589a      	ldr	r2, [r3, r2]
 8005ec2:	443a      	add	r2, r7
 8005ec4:	f8d8 0008 	ldr.w	r0, [r8, #8]
 8005ec8:	9902      	ldr	r1, [sp, #8]
 8005eca:	6803      	ldr	r3, [r0, #0]
 8005ecc:	699d      	ldr	r5, [r3, #24]
 8005ece:	465b      	mov	r3, fp
 8005ed0:	47a8      	blx	r5
 8005ed2:	4605      	mov	r5, r0
 8005ed4:	2800      	cmp	r0, #0
 8005ed6:	d0e8      	beq.n	8005eaa <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
 8005ed8:	9b07      	ldr	r3, [sp, #28]
 8005eda:	2b08      	cmp	r3, #8
 8005edc:	d104      	bne.n	8005ee8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xa6>
 8005ede:	9b00      	ldr	r3, [sp, #0]
 8005ee0:	b113      	cbz	r3, 8005ee8 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xa6>
 8005ee2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005ee6:	9307      	str	r3, [sp, #28]
 8005ee8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8005eec:	2b03      	cmp	r3, #3
 8005eee:	d905      	bls.n	8005efc <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xba>
 8005ef0:	9a01      	ldr	r2, [sp, #4]
 8005ef2:	b91a      	cbnz	r2, 8005efc <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xba>
 8005ef4:	f023 0302 	bic.w	r3, r3, #2
 8005ef8:	f88d 3014 	strb.w	r3, [sp, #20]
 8005efc:	68e1      	ldr	r1, [r4, #12]
 8005efe:	b9c1      	cbnz	r1, 8005f32 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xf0>
 8005f00:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
 8005f04:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8005f08:	7923      	ldrb	r3, [r4, #4]
 8005f0a:	2b03      	cmp	r3, #3
 8005f0c:	d905      	bls.n	8005f1a <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xd8>
 8005f0e:	079a      	lsls	r2, r3, #30
 8005f10:	d509      	bpl.n	8005f26 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xe4>
 8005f12:	68b3      	ldr	r3, [r6, #8]
 8005f14:	f013 0f01 	tst.w	r3, #1
 8005f18:	d1c7      	bne.n	8005eaa <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
 8005f1a:	4628      	mov	r0, r5
 8005f1c:	b009      	add	sp, #36	; 0x24
 8005f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f22:	463a      	mov	r2, r7
 8005f24:	e7ce      	b.n	8005ec4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x82>
 8005f26:	07db      	lsls	r3, r3, #31
 8005f28:	d5f7      	bpl.n	8005f1a <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xd8>
 8005f2a:	68b3      	ldr	r3, [r6, #8]
 8005f2c:	f013 0f02 	tst.w	r3, #2
 8005f30:	e7f2      	b.n	8005f18 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xd6>
 8005f32:	6823      	ldr	r3, [r4, #0]
 8005f34:	9a04      	ldr	r2, [sp, #16]
 8005f36:	4293      	cmp	r3, r2
 8005f38:	d004      	beq.n	8005f44 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x102>
 8005f3a:	2300      	movs	r3, #0
 8005f3c:	6023      	str	r3, [r4, #0]
 8005f3e:	2302      	movs	r3, #2
 8005f40:	7123      	strb	r3, [r4, #4]
 8005f42:	e7ea      	b.n	8005f1a <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xd8>
 8005f44:	b12b      	cbz	r3, 8005f52 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x110>
 8005f46:	7923      	ldrb	r3, [r4, #4]
 8005f48:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8005f4c:	4313      	orrs	r3, r2
 8005f4e:	7123      	strb	r3, [r4, #4]
 8005f50:	e7ab      	b.n	8005eaa <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x68>
 8005f52:	9807      	ldr	r0, [sp, #28]
 8005f54:	2808      	cmp	r0, #8
 8005f56:	d0f2      	beq.n	8005f3e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xfc>
 8005f58:	2908      	cmp	r1, #8
 8005f5a:	d0f0      	beq.n	8005f3e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xfc>
 8005f5c:	f7ff fdbc 	bl	8005ad8 <_ZNKSt9type_infoeqERKS_>
 8005f60:	2800      	cmp	r0, #0
 8005f62:	d1f0      	bne.n	8005f46 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x104>
 8005f64:	e7eb      	b.n	8005f3e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xfc>
 8005f66:	7925      	ldrb	r5, [r4, #4]
 8005f68:	3d00      	subs	r5, #0
 8005f6a:	bf18      	it	ne
 8005f6c:	2501      	movne	r5, #1
 8005f6e:	e7d4      	b.n	8005f1a <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xd8>

08005f70 <_ZNSt8__detail15_List_node_base7_M_hookEPS0_>:
 8005f70:	684b      	ldr	r3, [r1, #4]
 8005f72:	6001      	str	r1, [r0, #0]
 8005f74:	6043      	str	r3, [r0, #4]
 8005f76:	684b      	ldr	r3, [r1, #4]
 8005f78:	6018      	str	r0, [r3, #0]
 8005f7a:	6048      	str	r0, [r1, #4]
 8005f7c:	4770      	bx	lr

08005f7e <_ZNKSt11logic_error4whatEv>:
 8005f7e:	6840      	ldr	r0, [r0, #4]
 8005f80:	4770      	bx	lr
	...

08005f84 <_ZNSt11logic_errorD1Ev>:
 8005f84:	b513      	push	{r0, r1, r4, lr}
 8005f86:	4604      	mov	r4, r0
 8005f88:	4b06      	ldr	r3, [pc, #24]	; (8005fa4 <_ZNSt11logic_errorD1Ev+0x20>)
 8005f8a:	a901      	add	r1, sp, #4
 8005f8c:	6003      	str	r3, [r0, #0]
 8005f8e:	6840      	ldr	r0, [r0, #4]
 8005f90:	380c      	subs	r0, #12
 8005f92:	f000 f89d 	bl	80060d0 <_ZNSs4_Rep10_M_disposeERKSaIcE>
 8005f96:	4620      	mov	r0, r4
 8005f98:	f7ff f9fc 	bl	8005394 <_ZNSt9exceptionD1Ev>
 8005f9c:	4620      	mov	r0, r4
 8005f9e:	b002      	add	sp, #8
 8005fa0:	bd10      	pop	{r4, pc}
 8005fa2:	bf00      	nop
 8005fa4:	08006be8 	.word	0x08006be8

08005fa8 <_ZNSt11logic_errorD0Ev>:
 8005fa8:	b510      	push	{r4, lr}
 8005faa:	4604      	mov	r4, r0
 8005fac:	f7ff ffea 	bl	8005f84 <_ZNSt11logic_errorD1Ev>
 8005fb0:	4620      	mov	r0, r4
 8005fb2:	f000 f8a7 	bl	8006104 <_ZdlPv>
 8005fb6:	4620      	mov	r0, r4
 8005fb8:	bd10      	pop	{r4, pc}
	...

08005fbc <_ZNSsC2EPKcRKSaIcE.isra.0>:
 8005fbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005fc0:	4607      	mov	r7, r0
 8005fc2:	4615      	mov	r5, r2
 8005fc4:	460c      	mov	r4, r1
 8005fc6:	b1d9      	cbz	r1, 8006000 <_ZNSsC2EPKcRKSaIcE.isra.0+0x44>
 8005fc8:	4608      	mov	r0, r1
 8005fca:	f7fa f8c9 	bl	8000160 <strlen>
 8005fce:	eb04 0900 	add.w	r9, r4, r0
 8005fd2:	454c      	cmp	r4, r9
 8005fd4:	4606      	mov	r6, r0
 8005fd6:	d016      	beq.n	8006006 <_ZNSsC2EPKcRKSaIcE.isra.0+0x4a>
 8005fd8:	462a      	mov	r2, r5
 8005fda:	2100      	movs	r1, #0
 8005fdc:	f000 f846 	bl	800606c <_ZNSs4_Rep9_S_createEjjRKSaIcE>
 8005fe0:	4605      	mov	r5, r0
 8005fe2:	f100 080c 	add.w	r8, r0, #12
 8005fe6:	4621      	mov	r1, r4
 8005fe8:	4640      	mov	r0, r8
 8005fea:	464a      	mov	r2, r9
 8005fec:	f000 f82c 	bl	8006048 <_ZNSs13_S_copy_charsEPcPKcS1_>
 8005ff0:	4631      	mov	r1, r6
 8005ff2:	4628      	mov	r0, r5
 8005ff4:	f000 f82e 	bl	8006054 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 8005ff8:	f8c7 8000 	str.w	r8, [r7]
 8005ffc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006000:	4802      	ldr	r0, [pc, #8]	; (800600c <_ZNSsC2EPKcRKSaIcE.isra.0+0x50>)
 8006002:	f000 f876 	bl	80060f2 <_ZSt19__throw_logic_errorPKc>
 8006006:	f8df 8008 	ldr.w	r8, [pc, #8]	; 8006010 <_ZNSsC2EPKcRKSaIcE.isra.0+0x54>
 800600a:	e7f5      	b.n	8005ff8 <_ZNSsC2EPKcRKSaIcE.isra.0+0x3c>
 800600c:	08006bf4 	.word	0x08006bf4
 8006010:	200004a4 	.word	0x200004a4

08006014 <_ZNSt11logic_errorC1EPKc>:
 8006014:	b513      	push	{r0, r1, r4, lr}
 8006016:	4604      	mov	r4, r0
 8006018:	4b04      	ldr	r3, [pc, #16]	; (800602c <_ZNSt11logic_errorC1EPKc+0x18>)
 800601a:	aa01      	add	r2, sp, #4
 800601c:	f840 3b04 	str.w	r3, [r0], #4
 8006020:	f7ff ffcc 	bl	8005fbc <_ZNSsC2EPKcRKSaIcE.isra.0>
 8006024:	4620      	mov	r0, r4
 8006026:	b002      	add	sp, #8
 8006028:	bd10      	pop	{r4, pc}
 800602a:	bf00      	nop
 800602c:	08006be8 	.word	0x08006be8

08006030 <_ZNSs7_M_copyEPcPKcj>:
 8006030:	2a01      	cmp	r2, #1
 8006032:	b430      	push	{r4, r5}
 8006034:	d103      	bne.n	800603e <_ZNSs7_M_copyEPcPKcj+0xe>
 8006036:	780b      	ldrb	r3, [r1, #0]
 8006038:	7003      	strb	r3, [r0, #0]
 800603a:	bc30      	pop	{r4, r5}
 800603c:	4770      	bx	lr
 800603e:	2a00      	cmp	r2, #0
 8006040:	d0fb      	beq.n	800603a <_ZNSs7_M_copyEPcPKcj+0xa>
 8006042:	bc30      	pop	{r4, r5}
 8006044:	f000 b930 	b.w	80062a8 <memcpy>

08006048 <_ZNSs13_S_copy_charsEPcPKcS1_>:
 8006048:	b508      	push	{r3, lr}
 800604a:	1a52      	subs	r2, r2, r1
 800604c:	f7ff fff0 	bl	8006030 <_ZNSs7_M_copyEPcPKcj>
 8006050:	bd08      	pop	{r3, pc}
	...

08006054 <_ZNSs4_Rep26_M_set_length_and_sharableEj>:
 8006054:	4b04      	ldr	r3, [pc, #16]	; (8006068 <_ZNSs4_Rep26_M_set_length_and_sharableEj+0x14>)
 8006056:	4298      	cmp	r0, r3
 8006058:	d004      	beq.n	8006064 <_ZNSs4_Rep26_M_set_length_and_sharableEj+0x10>
 800605a:	2300      	movs	r3, #0
 800605c:	6001      	str	r1, [r0, #0]
 800605e:	6083      	str	r3, [r0, #8]
 8006060:	4408      	add	r0, r1
 8006062:	7303      	strb	r3, [r0, #12]
 8006064:	4770      	bx	lr
 8006066:	bf00      	nop
 8006068:	20000498 	.word	0x20000498

0800606c <_ZNSs4_Rep9_S_createEjjRKSaIcE>:
 800606c:	4b15      	ldr	r3, [pc, #84]	; (80060c4 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>)
 800606e:	b510      	push	{r4, lr}
 8006070:	4298      	cmp	r0, r3
 8006072:	4604      	mov	r4, r0
 8006074:	d902      	bls.n	800607c <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x10>
 8006076:	4814      	ldr	r0, [pc, #80]	; (80060c8 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5c>)
 8006078:	f000 f83e 	bl	80060f8 <_ZSt20__throw_length_errorPKc>
 800607c:	4288      	cmp	r0, r1
 800607e:	d903      	bls.n	8006088 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x1c>
 8006080:	004b      	lsls	r3, r1, #1
 8006082:	4298      	cmp	r0, r3
 8006084:	bf38      	it	cc
 8006086:	461c      	movcc	r4, r3
 8006088:	f104 031d 	add.w	r3, r4, #29
 800608c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006090:	f104 000d 	add.w	r0, r4, #13
 8006094:	d90c      	bls.n	80060b0 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x44>
 8006096:	428c      	cmp	r4, r1
 8006098:	d90a      	bls.n	80060b0 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x44>
 800609a:	480a      	ldr	r0, [pc, #40]	; (80060c4 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>)
 800609c:	f504 5480 	add.w	r4, r4, #4096	; 0x1000
 80060a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80060a4:	1ae4      	subs	r4, r4, r3
 80060a6:	4284      	cmp	r4, r0
 80060a8:	bf28      	it	cs
 80060aa:	4604      	movcs	r4, r0
 80060ac:	f104 000d 	add.w	r0, r4, #13
 80060b0:	2800      	cmp	r0, #0
 80060b2:	da01      	bge.n	80060b8 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x4c>
 80060b4:	f000 f81a 	bl	80060ec <_ZSt17__throw_bad_allocv>
 80060b8:	f7ff fc78 	bl	80059ac <_Znwj>
 80060bc:	2200      	movs	r2, #0
 80060be:	6044      	str	r4, [r0, #4]
 80060c0:	6082      	str	r2, [r0, #8]
 80060c2:	bd10      	pop	{r4, pc}
 80060c4:	3ffffffc 	.word	0x3ffffffc
 80060c8:	08006c1e 	.word	0x08006c1e

080060cc <_ZNSs4_Rep10_M_destroyERKSaIcE>:
 80060cc:	f000 b81a 	b.w	8006104 <_ZdlPv>

080060d0 <_ZNSs4_Rep10_M_disposeERKSaIcE>:
 80060d0:	4a05      	ldr	r2, [pc, #20]	; (80060e8 <_ZNSs4_Rep10_M_disposeERKSaIcE+0x18>)
 80060d2:	b510      	push	{r4, lr}
 80060d4:	4290      	cmp	r0, r2
 80060d6:	d006      	beq.n	80060e6 <_ZNSs4_Rep10_M_disposeERKSaIcE+0x16>
 80060d8:	6882      	ldr	r2, [r0, #8]
 80060da:	1e54      	subs	r4, r2, #1
 80060dc:	2a00      	cmp	r2, #0
 80060de:	6084      	str	r4, [r0, #8]
 80060e0:	dc01      	bgt.n	80060e6 <_ZNSs4_Rep10_M_disposeERKSaIcE+0x16>
 80060e2:	f7ff fff3 	bl	80060cc <_ZNSs4_Rep10_M_destroyERKSaIcE>
 80060e6:	bd10      	pop	{r4, pc}
 80060e8:	20000498 	.word	0x20000498

080060ec <_ZSt17__throw_bad_allocv>:
 80060ec:	b508      	push	{r3, lr}
 80060ee:	f000 f899 	bl	8006224 <abort>

080060f2 <_ZSt19__throw_logic_errorPKc>:
 80060f2:	b508      	push	{r3, lr}
 80060f4:	f000 f896 	bl	8006224 <abort>

080060f8 <_ZSt20__throw_length_errorPKc>:
 80060f8:	b508      	push	{r3, lr}
 80060fa:	f000 f893 	bl	8006224 <abort>

080060fe <_ZSt25__throw_bad_function_callv>:
 80060fe:	b508      	push	{r3, lr}
 8006100:	f000 f890 	bl	8006224 <abort>

08006104 <_ZdlPv>:
 8006104:	f000 b8c8 	b.w	8006298 <free>

08006108 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 8006108:	7803      	ldrb	r3, [r0, #0]
 800610a:	2b47      	cmp	r3, #71	; 0x47
 800610c:	d117      	bne.n	800613e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 800610e:	7843      	ldrb	r3, [r0, #1]
 8006110:	2b4e      	cmp	r3, #78	; 0x4e
 8006112:	d114      	bne.n	800613e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 8006114:	7883      	ldrb	r3, [r0, #2]
 8006116:	2b55      	cmp	r3, #85	; 0x55
 8006118:	d111      	bne.n	800613e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 800611a:	78c3      	ldrb	r3, [r0, #3]
 800611c:	2b43      	cmp	r3, #67	; 0x43
 800611e:	d10e      	bne.n	800613e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 8006120:	7903      	ldrb	r3, [r0, #4]
 8006122:	2b43      	cmp	r3, #67	; 0x43
 8006124:	d10b      	bne.n	800613e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 8006126:	7943      	ldrb	r3, [r0, #5]
 8006128:	2b2b      	cmp	r3, #43	; 0x2b
 800612a:	d108      	bne.n	800613e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 800612c:	7983      	ldrb	r3, [r0, #6]
 800612e:	2b2b      	cmp	r3, #43	; 0x2b
 8006130:	d105      	bne.n	800613e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 8006132:	79c0      	ldrb	r0, [r0, #7]
 8006134:	2801      	cmp	r0, #1
 8006136:	bf8c      	ite	hi
 8006138:	2000      	movhi	r0, #0
 800613a:	2001      	movls	r0, #1
 800613c:	4770      	bx	lr
 800613e:	2000      	movs	r0, #0
 8006140:	4770      	bx	lr

08006142 <__cxa_call_terminate>:
 8006142:	b510      	push	{r4, lr}
 8006144:	4604      	mov	r4, r0
 8006146:	b148      	cbz	r0, 800615c <__cxa_call_terminate+0x1a>
 8006148:	f000 f83b 	bl	80061c2 <__cxa_begin_catch>
 800614c:	4620      	mov	r0, r4
 800614e:	f7ff ffdb 	bl	8006108 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 8006152:	b118      	cbz	r0, 800615c <__cxa_call_terminate+0x1a>
 8006154:	f854 0c14 	ldr.w	r0, [r4, #-20]
 8006158:	f7ff fb9c 	bl	8005894 <_ZN10__cxxabiv111__terminateEPFvvE>
 800615c:	f7ff fba6 	bl	80058ac <_ZSt9terminatev>

08006160 <__cxa_call_unexpected>:
 8006160:	b538      	push	{r3, r4, r5, lr}
 8006162:	4602      	mov	r2, r0
 8006164:	f7ff ffd0 	bl	8006108 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 8006168:	4604      	mov	r4, r0
 800616a:	b140      	cbz	r0, 800617e <__cxa_call_unexpected+0x1e>
 800616c:	2500      	movs	r5, #0
 800616e:	f852 4c18 	ldr.w	r4, [r2, #-24]
 8006172:	4610      	mov	r0, r2
 8006174:	f000 f825 	bl	80061c2 <__cxa_begin_catch>
 8006178:	b11d      	cbz	r5, 8006182 <__cxa_call_unexpected+0x22>
 800617a:	f7ff fba9 	bl	80058d0 <_ZSt10unexpectedv>
 800617e:	2501      	movs	r5, #1
 8006180:	e7f7      	b.n	8006172 <__cxa_call_unexpected+0x12>
 8006182:	4620      	mov	r0, r4
 8006184:	f7ff fb97 	bl	80058b6 <_ZN10__cxxabiv112__unexpectedEPFvvE>

08006188 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 8006188:	7803      	ldrb	r3, [r0, #0]
 800618a:	2b47      	cmp	r3, #71	; 0x47
 800618c:	d117      	bne.n	80061be <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 800618e:	7843      	ldrb	r3, [r0, #1]
 8006190:	2b4e      	cmp	r3, #78	; 0x4e
 8006192:	d114      	bne.n	80061be <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 8006194:	7883      	ldrb	r3, [r0, #2]
 8006196:	2b55      	cmp	r3, #85	; 0x55
 8006198:	d111      	bne.n	80061be <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 800619a:	78c3      	ldrb	r3, [r0, #3]
 800619c:	2b43      	cmp	r3, #67	; 0x43
 800619e:	d10e      	bne.n	80061be <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 80061a0:	7903      	ldrb	r3, [r0, #4]
 80061a2:	2b43      	cmp	r3, #67	; 0x43
 80061a4:	d10b      	bne.n	80061be <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 80061a6:	7943      	ldrb	r3, [r0, #5]
 80061a8:	2b2b      	cmp	r3, #43	; 0x2b
 80061aa:	d108      	bne.n	80061be <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 80061ac:	7983      	ldrb	r3, [r0, #6]
 80061ae:	2b2b      	cmp	r3, #43	; 0x2b
 80061b0:	d105      	bne.n	80061be <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 80061b2:	79c0      	ldrb	r0, [r0, #7]
 80061b4:	2801      	cmp	r0, #1
 80061b6:	bf8c      	ite	hi
 80061b8:	2000      	movhi	r0, #0
 80061ba:	2001      	movls	r0, #1
 80061bc:	4770      	bx	lr
 80061be:	2000      	movs	r0, #0
 80061c0:	4770      	bx	lr

080061c2 <__cxa_begin_catch>:
 80061c2:	b538      	push	{r3, r4, r5, lr}
 80061c4:	4604      	mov	r4, r0
 80061c6:	f7ff f8e7 	bl	8005398 <__cxa_get_globals>
 80061ca:	4602      	mov	r2, r0
 80061cc:	6805      	ldr	r5, [r0, #0]
 80061ce:	4620      	mov	r0, r4
 80061d0:	f1a4 0120 	sub.w	r1, r4, #32
 80061d4:	f7ff ffd8 	bl	8006188 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 80061d8:	b928      	cbnz	r0, 80061e6 <__cxa_begin_catch+0x24>
 80061da:	b10d      	cbz	r5, 80061e0 <__cxa_begin_catch+0x1e>
 80061dc:	f7ff fb66 	bl	80058ac <_ZSt9terminatev>
 80061e0:	6011      	str	r1, [r2, #0]
 80061e2:	4628      	mov	r0, r5
 80061e4:	bd38      	pop	{r3, r4, r5, pc}
 80061e6:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 80061ea:	4620      	mov	r0, r4
 80061ec:	2b00      	cmp	r3, #0
 80061ee:	bfb4      	ite	lt
 80061f0:	f1c3 0301 	rsblt	r3, r3, #1
 80061f4:	3301      	addge	r3, #1
 80061f6:	f844 3c0c 	str.w	r3, [r4, #-12]
 80061fa:	6853      	ldr	r3, [r2, #4]
 80061fc:	428d      	cmp	r5, r1
 80061fe:	f103 33ff 	add.w	r3, r3, #4294967295
 8006202:	6053      	str	r3, [r2, #4]
 8006204:	bf1c      	itt	ne
 8006206:	f844 5c10 	strne.w	r5, [r4, #-16]
 800620a:	6011      	strne	r1, [r2, #0]
 800620c:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800620e:	f7fa fc95 	bl	8000b3c <_Unwind_Complete>
 8006212:	e7e6      	b.n	80061e2 <__cxa_begin_catch+0x20>

08006214 <_ZSt15get_new_handlerv>:
 8006214:	4b02      	ldr	r3, [pc, #8]	; (8006220 <_ZSt15get_new_handlerv+0xc>)
 8006216:	6818      	ldr	r0, [r3, #0]
 8006218:	f3bf 8f5b 	dmb	ish
 800621c:	4770      	bx	lr
 800621e:	bf00      	nop
 8006220:	200004a8 	.word	0x200004a8

08006224 <abort>:
 8006224:	2006      	movs	r0, #6
 8006226:	b508      	push	{r3, lr}
 8006228:	f000 f982 	bl	8006530 <raise>
 800622c:	2001      	movs	r0, #1
 800622e:	f7fd fa1b 	bl	8003668 <_exit>
	...

08006234 <__errno>:
 8006234:	4b01      	ldr	r3, [pc, #4]	; (800623c <__errno+0x8>)
 8006236:	6818      	ldr	r0, [r3, #0]
 8006238:	4770      	bx	lr
 800623a:	bf00      	nop
 800623c:	20000014 	.word	0x20000014

08006240 <__libc_init_array>:
 8006240:	b570      	push	{r4, r5, r6, lr}
 8006242:	2600      	movs	r6, #0
 8006244:	4d0c      	ldr	r5, [pc, #48]	; (8006278 <__libc_init_array+0x38>)
 8006246:	4c0d      	ldr	r4, [pc, #52]	; (800627c <__libc_init_array+0x3c>)
 8006248:	1b64      	subs	r4, r4, r5
 800624a:	10a4      	asrs	r4, r4, #2
 800624c:	42a6      	cmp	r6, r4
 800624e:	d109      	bne.n	8006264 <__libc_init_array+0x24>
 8006250:	f000 f99e 	bl	8006590 <_init>
 8006254:	2600      	movs	r6, #0
 8006256:	4d0a      	ldr	r5, [pc, #40]	; (8006280 <__libc_init_array+0x40>)
 8006258:	4c0a      	ldr	r4, [pc, #40]	; (8006284 <__libc_init_array+0x44>)
 800625a:	1b64      	subs	r4, r4, r5
 800625c:	10a4      	asrs	r4, r4, #2
 800625e:	42a6      	cmp	r6, r4
 8006260:	d105      	bne.n	800626e <__libc_init_array+0x2e>
 8006262:	bd70      	pop	{r4, r5, r6, pc}
 8006264:	f855 3b04 	ldr.w	r3, [r5], #4
 8006268:	4798      	blx	r3
 800626a:	3601      	adds	r6, #1
 800626c:	e7ee      	b.n	800624c <__libc_init_array+0xc>
 800626e:	f855 3b04 	ldr.w	r3, [r5], #4
 8006272:	4798      	blx	r3
 8006274:	3601      	adds	r6, #1
 8006276:	e7f2      	b.n	800625e <__libc_init_array+0x1e>
 8006278:	08006eb0 	.word	0x08006eb0
 800627c:	08006eb0 	.word	0x08006eb0
 8006280:	08006eb0 	.word	0x08006eb0
 8006284:	08006ec8 	.word	0x08006ec8

08006288 <malloc>:
 8006288:	4b02      	ldr	r3, [pc, #8]	; (8006294 <malloc+0xc>)
 800628a:	4601      	mov	r1, r0
 800628c:	6818      	ldr	r0, [r3, #0]
 800628e:	f000 b8a3 	b.w	80063d8 <_malloc_r>
 8006292:	bf00      	nop
 8006294:	20000014 	.word	0x20000014

08006298 <free>:
 8006298:	4b02      	ldr	r3, [pc, #8]	; (80062a4 <free+0xc>)
 800629a:	4601      	mov	r1, r0
 800629c:	6818      	ldr	r0, [r3, #0]
 800629e:	f000 b833 	b.w	8006308 <_free_r>
 80062a2:	bf00      	nop
 80062a4:	20000014 	.word	0x20000014

080062a8 <memcpy>:
 80062a8:	440a      	add	r2, r1
 80062aa:	4291      	cmp	r1, r2
 80062ac:	f100 33ff 	add.w	r3, r0, #4294967295
 80062b0:	d100      	bne.n	80062b4 <memcpy+0xc>
 80062b2:	4770      	bx	lr
 80062b4:	b510      	push	{r4, lr}
 80062b6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80062ba:	4291      	cmp	r1, r2
 80062bc:	f803 4f01 	strb.w	r4, [r3, #1]!
 80062c0:	d1f9      	bne.n	80062b6 <memcpy+0xe>
 80062c2:	bd10      	pop	{r4, pc}

080062c4 <memmove>:
 80062c4:	4288      	cmp	r0, r1
 80062c6:	b510      	push	{r4, lr}
 80062c8:	eb01 0402 	add.w	r4, r1, r2
 80062cc:	d902      	bls.n	80062d4 <memmove+0x10>
 80062ce:	4284      	cmp	r4, r0
 80062d0:	4623      	mov	r3, r4
 80062d2:	d807      	bhi.n	80062e4 <memmove+0x20>
 80062d4:	1e43      	subs	r3, r0, #1
 80062d6:	42a1      	cmp	r1, r4
 80062d8:	d008      	beq.n	80062ec <memmove+0x28>
 80062da:	f811 2b01 	ldrb.w	r2, [r1], #1
 80062de:	f803 2f01 	strb.w	r2, [r3, #1]!
 80062e2:	e7f8      	b.n	80062d6 <memmove+0x12>
 80062e4:	4601      	mov	r1, r0
 80062e6:	4402      	add	r2, r0
 80062e8:	428a      	cmp	r2, r1
 80062ea:	d100      	bne.n	80062ee <memmove+0x2a>
 80062ec:	bd10      	pop	{r4, pc}
 80062ee:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80062f2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80062f6:	e7f7      	b.n	80062e8 <memmove+0x24>

080062f8 <memset>:
 80062f8:	4603      	mov	r3, r0
 80062fa:	4402      	add	r2, r0
 80062fc:	4293      	cmp	r3, r2
 80062fe:	d100      	bne.n	8006302 <memset+0xa>
 8006300:	4770      	bx	lr
 8006302:	f803 1b01 	strb.w	r1, [r3], #1
 8006306:	e7f9      	b.n	80062fc <memset+0x4>

08006308 <_free_r>:
 8006308:	b538      	push	{r3, r4, r5, lr}
 800630a:	4605      	mov	r5, r0
 800630c:	2900      	cmp	r1, #0
 800630e:	d040      	beq.n	8006392 <_free_r+0x8a>
 8006310:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006314:	1f0c      	subs	r4, r1, #4
 8006316:	2b00      	cmp	r3, #0
 8006318:	bfb8      	it	lt
 800631a:	18e4      	addlt	r4, r4, r3
 800631c:	f000 f924 	bl	8006568 <__malloc_lock>
 8006320:	4a1c      	ldr	r2, [pc, #112]	; (8006394 <_free_r+0x8c>)
 8006322:	6813      	ldr	r3, [r2, #0]
 8006324:	b933      	cbnz	r3, 8006334 <_free_r+0x2c>
 8006326:	6063      	str	r3, [r4, #4]
 8006328:	6014      	str	r4, [r2, #0]
 800632a:	4628      	mov	r0, r5
 800632c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006330:	f000 b920 	b.w	8006574 <__malloc_unlock>
 8006334:	42a3      	cmp	r3, r4
 8006336:	d908      	bls.n	800634a <_free_r+0x42>
 8006338:	6820      	ldr	r0, [r4, #0]
 800633a:	1821      	adds	r1, r4, r0
 800633c:	428b      	cmp	r3, r1
 800633e:	bf01      	itttt	eq
 8006340:	6819      	ldreq	r1, [r3, #0]
 8006342:	685b      	ldreq	r3, [r3, #4]
 8006344:	1809      	addeq	r1, r1, r0
 8006346:	6021      	streq	r1, [r4, #0]
 8006348:	e7ed      	b.n	8006326 <_free_r+0x1e>
 800634a:	461a      	mov	r2, r3
 800634c:	685b      	ldr	r3, [r3, #4]
 800634e:	b10b      	cbz	r3, 8006354 <_free_r+0x4c>
 8006350:	42a3      	cmp	r3, r4
 8006352:	d9fa      	bls.n	800634a <_free_r+0x42>
 8006354:	6811      	ldr	r1, [r2, #0]
 8006356:	1850      	adds	r0, r2, r1
 8006358:	42a0      	cmp	r0, r4
 800635a:	d10b      	bne.n	8006374 <_free_r+0x6c>
 800635c:	6820      	ldr	r0, [r4, #0]
 800635e:	4401      	add	r1, r0
 8006360:	1850      	adds	r0, r2, r1
 8006362:	4283      	cmp	r3, r0
 8006364:	6011      	str	r1, [r2, #0]
 8006366:	d1e0      	bne.n	800632a <_free_r+0x22>
 8006368:	6818      	ldr	r0, [r3, #0]
 800636a:	685b      	ldr	r3, [r3, #4]
 800636c:	4401      	add	r1, r0
 800636e:	6011      	str	r1, [r2, #0]
 8006370:	6053      	str	r3, [r2, #4]
 8006372:	e7da      	b.n	800632a <_free_r+0x22>
 8006374:	d902      	bls.n	800637c <_free_r+0x74>
 8006376:	230c      	movs	r3, #12
 8006378:	602b      	str	r3, [r5, #0]
 800637a:	e7d6      	b.n	800632a <_free_r+0x22>
 800637c:	6820      	ldr	r0, [r4, #0]
 800637e:	1821      	adds	r1, r4, r0
 8006380:	428b      	cmp	r3, r1
 8006382:	bf01      	itttt	eq
 8006384:	6819      	ldreq	r1, [r3, #0]
 8006386:	685b      	ldreq	r3, [r3, #4]
 8006388:	1809      	addeq	r1, r1, r0
 800638a:	6021      	streq	r1, [r4, #0]
 800638c:	6063      	str	r3, [r4, #4]
 800638e:	6054      	str	r4, [r2, #4]
 8006390:	e7cb      	b.n	800632a <_free_r+0x22>
 8006392:	bd38      	pop	{r3, r4, r5, pc}
 8006394:	200004ac 	.word	0x200004ac

08006398 <sbrk_aligned>:
 8006398:	b570      	push	{r4, r5, r6, lr}
 800639a:	4e0e      	ldr	r6, [pc, #56]	; (80063d4 <sbrk_aligned+0x3c>)
 800639c:	460c      	mov	r4, r1
 800639e:	6831      	ldr	r1, [r6, #0]
 80063a0:	4605      	mov	r5, r0
 80063a2:	b911      	cbnz	r1, 80063aa <sbrk_aligned+0x12>
 80063a4:	f000 f88c 	bl	80064c0 <_sbrk_r>
 80063a8:	6030      	str	r0, [r6, #0]
 80063aa:	4621      	mov	r1, r4
 80063ac:	4628      	mov	r0, r5
 80063ae:	f000 f887 	bl	80064c0 <_sbrk_r>
 80063b2:	1c43      	adds	r3, r0, #1
 80063b4:	d00a      	beq.n	80063cc <sbrk_aligned+0x34>
 80063b6:	1cc4      	adds	r4, r0, #3
 80063b8:	f024 0403 	bic.w	r4, r4, #3
 80063bc:	42a0      	cmp	r0, r4
 80063be:	d007      	beq.n	80063d0 <sbrk_aligned+0x38>
 80063c0:	1a21      	subs	r1, r4, r0
 80063c2:	4628      	mov	r0, r5
 80063c4:	f000 f87c 	bl	80064c0 <_sbrk_r>
 80063c8:	3001      	adds	r0, #1
 80063ca:	d101      	bne.n	80063d0 <sbrk_aligned+0x38>
 80063cc:	f04f 34ff 	mov.w	r4, #4294967295
 80063d0:	4620      	mov	r0, r4
 80063d2:	bd70      	pop	{r4, r5, r6, pc}
 80063d4:	200004b0 	.word	0x200004b0

080063d8 <_malloc_r>:
 80063d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80063dc:	1ccd      	adds	r5, r1, #3
 80063de:	f025 0503 	bic.w	r5, r5, #3
 80063e2:	3508      	adds	r5, #8
 80063e4:	2d0c      	cmp	r5, #12
 80063e6:	bf38      	it	cc
 80063e8:	250c      	movcc	r5, #12
 80063ea:	2d00      	cmp	r5, #0
 80063ec:	4607      	mov	r7, r0
 80063ee:	db01      	blt.n	80063f4 <_malloc_r+0x1c>
 80063f0:	42a9      	cmp	r1, r5
 80063f2:	d905      	bls.n	8006400 <_malloc_r+0x28>
 80063f4:	230c      	movs	r3, #12
 80063f6:	2600      	movs	r6, #0
 80063f8:	603b      	str	r3, [r7, #0]
 80063fa:	4630      	mov	r0, r6
 80063fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006400:	4e2e      	ldr	r6, [pc, #184]	; (80064bc <_malloc_r+0xe4>)
 8006402:	f000 f8b1 	bl	8006568 <__malloc_lock>
 8006406:	6833      	ldr	r3, [r6, #0]
 8006408:	461c      	mov	r4, r3
 800640a:	bb34      	cbnz	r4, 800645a <_malloc_r+0x82>
 800640c:	4629      	mov	r1, r5
 800640e:	4638      	mov	r0, r7
 8006410:	f7ff ffc2 	bl	8006398 <sbrk_aligned>
 8006414:	1c43      	adds	r3, r0, #1
 8006416:	4604      	mov	r4, r0
 8006418:	d14d      	bne.n	80064b6 <_malloc_r+0xde>
 800641a:	6834      	ldr	r4, [r6, #0]
 800641c:	4626      	mov	r6, r4
 800641e:	2e00      	cmp	r6, #0
 8006420:	d140      	bne.n	80064a4 <_malloc_r+0xcc>
 8006422:	6823      	ldr	r3, [r4, #0]
 8006424:	4631      	mov	r1, r6
 8006426:	4638      	mov	r0, r7
 8006428:	eb04 0803 	add.w	r8, r4, r3
 800642c:	f000 f848 	bl	80064c0 <_sbrk_r>
 8006430:	4580      	cmp	r8, r0
 8006432:	d13a      	bne.n	80064aa <_malloc_r+0xd2>
 8006434:	6821      	ldr	r1, [r4, #0]
 8006436:	3503      	adds	r5, #3
 8006438:	1a6d      	subs	r5, r5, r1
 800643a:	f025 0503 	bic.w	r5, r5, #3
 800643e:	3508      	adds	r5, #8
 8006440:	2d0c      	cmp	r5, #12
 8006442:	bf38      	it	cc
 8006444:	250c      	movcc	r5, #12
 8006446:	4638      	mov	r0, r7
 8006448:	4629      	mov	r1, r5
 800644a:	f7ff ffa5 	bl	8006398 <sbrk_aligned>
 800644e:	3001      	adds	r0, #1
 8006450:	d02b      	beq.n	80064aa <_malloc_r+0xd2>
 8006452:	6823      	ldr	r3, [r4, #0]
 8006454:	442b      	add	r3, r5
 8006456:	6023      	str	r3, [r4, #0]
 8006458:	e00e      	b.n	8006478 <_malloc_r+0xa0>
 800645a:	6822      	ldr	r2, [r4, #0]
 800645c:	1b52      	subs	r2, r2, r5
 800645e:	d41e      	bmi.n	800649e <_malloc_r+0xc6>
 8006460:	2a0b      	cmp	r2, #11
 8006462:	d916      	bls.n	8006492 <_malloc_r+0xba>
 8006464:	1961      	adds	r1, r4, r5
 8006466:	42a3      	cmp	r3, r4
 8006468:	6025      	str	r5, [r4, #0]
 800646a:	bf18      	it	ne
 800646c:	6059      	strne	r1, [r3, #4]
 800646e:	6863      	ldr	r3, [r4, #4]
 8006470:	bf08      	it	eq
 8006472:	6031      	streq	r1, [r6, #0]
 8006474:	5162      	str	r2, [r4, r5]
 8006476:	604b      	str	r3, [r1, #4]
 8006478:	4638      	mov	r0, r7
 800647a:	f104 060b 	add.w	r6, r4, #11
 800647e:	f000 f879 	bl	8006574 <__malloc_unlock>
 8006482:	f026 0607 	bic.w	r6, r6, #7
 8006486:	1d23      	adds	r3, r4, #4
 8006488:	1af2      	subs	r2, r6, r3
 800648a:	d0b6      	beq.n	80063fa <_malloc_r+0x22>
 800648c:	1b9b      	subs	r3, r3, r6
 800648e:	50a3      	str	r3, [r4, r2]
 8006490:	e7b3      	b.n	80063fa <_malloc_r+0x22>
 8006492:	6862      	ldr	r2, [r4, #4]
 8006494:	42a3      	cmp	r3, r4
 8006496:	bf0c      	ite	eq
 8006498:	6032      	streq	r2, [r6, #0]
 800649a:	605a      	strne	r2, [r3, #4]
 800649c:	e7ec      	b.n	8006478 <_malloc_r+0xa0>
 800649e:	4623      	mov	r3, r4
 80064a0:	6864      	ldr	r4, [r4, #4]
 80064a2:	e7b2      	b.n	800640a <_malloc_r+0x32>
 80064a4:	4634      	mov	r4, r6
 80064a6:	6876      	ldr	r6, [r6, #4]
 80064a8:	e7b9      	b.n	800641e <_malloc_r+0x46>
 80064aa:	230c      	movs	r3, #12
 80064ac:	4638      	mov	r0, r7
 80064ae:	603b      	str	r3, [r7, #0]
 80064b0:	f000 f860 	bl	8006574 <__malloc_unlock>
 80064b4:	e7a1      	b.n	80063fa <_malloc_r+0x22>
 80064b6:	6025      	str	r5, [r4, #0]
 80064b8:	e7de      	b.n	8006478 <_malloc_r+0xa0>
 80064ba:	bf00      	nop
 80064bc:	200004ac 	.word	0x200004ac

080064c0 <_sbrk_r>:
 80064c0:	b538      	push	{r3, r4, r5, lr}
 80064c2:	2300      	movs	r3, #0
 80064c4:	4d05      	ldr	r5, [pc, #20]	; (80064dc <_sbrk_r+0x1c>)
 80064c6:	4604      	mov	r4, r0
 80064c8:	4608      	mov	r0, r1
 80064ca:	602b      	str	r3, [r5, #0]
 80064cc:	f7fd f8d2 	bl	8003674 <_sbrk>
 80064d0:	1c43      	adds	r3, r0, #1
 80064d2:	d102      	bne.n	80064da <_sbrk_r+0x1a>
 80064d4:	682b      	ldr	r3, [r5, #0]
 80064d6:	b103      	cbz	r3, 80064da <_sbrk_r+0x1a>
 80064d8:	6023      	str	r3, [r4, #0]
 80064da:	bd38      	pop	{r3, r4, r5, pc}
 80064dc:	200004b4 	.word	0x200004b4

080064e0 <_raise_r>:
 80064e0:	291f      	cmp	r1, #31
 80064e2:	b538      	push	{r3, r4, r5, lr}
 80064e4:	4604      	mov	r4, r0
 80064e6:	460d      	mov	r5, r1
 80064e8:	d904      	bls.n	80064f4 <_raise_r+0x14>
 80064ea:	2316      	movs	r3, #22
 80064ec:	6003      	str	r3, [r0, #0]
 80064ee:	f04f 30ff 	mov.w	r0, #4294967295
 80064f2:	bd38      	pop	{r3, r4, r5, pc}
 80064f4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80064f6:	b112      	cbz	r2, 80064fe <_raise_r+0x1e>
 80064f8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80064fc:	b94b      	cbnz	r3, 8006512 <_raise_r+0x32>
 80064fe:	4620      	mov	r0, r4
 8006500:	f000 f830 	bl	8006564 <_getpid_r>
 8006504:	462a      	mov	r2, r5
 8006506:	4601      	mov	r1, r0
 8006508:	4620      	mov	r0, r4
 800650a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800650e:	f000 b817 	b.w	8006540 <_kill_r>
 8006512:	2b01      	cmp	r3, #1
 8006514:	d00a      	beq.n	800652c <_raise_r+0x4c>
 8006516:	1c59      	adds	r1, r3, #1
 8006518:	d103      	bne.n	8006522 <_raise_r+0x42>
 800651a:	2316      	movs	r3, #22
 800651c:	6003      	str	r3, [r0, #0]
 800651e:	2001      	movs	r0, #1
 8006520:	e7e7      	b.n	80064f2 <_raise_r+0x12>
 8006522:	2400      	movs	r4, #0
 8006524:	4628      	mov	r0, r5
 8006526:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800652a:	4798      	blx	r3
 800652c:	2000      	movs	r0, #0
 800652e:	e7e0      	b.n	80064f2 <_raise_r+0x12>

08006530 <raise>:
 8006530:	4b02      	ldr	r3, [pc, #8]	; (800653c <raise+0xc>)
 8006532:	4601      	mov	r1, r0
 8006534:	6818      	ldr	r0, [r3, #0]
 8006536:	f7ff bfd3 	b.w	80064e0 <_raise_r>
 800653a:	bf00      	nop
 800653c:	20000014 	.word	0x20000014

08006540 <_kill_r>:
 8006540:	b538      	push	{r3, r4, r5, lr}
 8006542:	2300      	movs	r3, #0
 8006544:	4d06      	ldr	r5, [pc, #24]	; (8006560 <_kill_r+0x20>)
 8006546:	4604      	mov	r4, r0
 8006548:	4608      	mov	r0, r1
 800654a:	4611      	mov	r1, r2
 800654c:	602b      	str	r3, [r5, #0]
 800654e:	f7fd f883 	bl	8003658 <_kill>
 8006552:	1c43      	adds	r3, r0, #1
 8006554:	d102      	bne.n	800655c <_kill_r+0x1c>
 8006556:	682b      	ldr	r3, [r5, #0]
 8006558:	b103      	cbz	r3, 800655c <_kill_r+0x1c>
 800655a:	6023      	str	r3, [r4, #0]
 800655c:	bd38      	pop	{r3, r4, r5, pc}
 800655e:	bf00      	nop
 8006560:	200004b4 	.word	0x200004b4

08006564 <_getpid_r>:
 8006564:	f7fd b876 	b.w	8003654 <_getpid>

08006568 <__malloc_lock>:
 8006568:	4801      	ldr	r0, [pc, #4]	; (8006570 <__malloc_lock+0x8>)
 800656a:	f000 b809 	b.w	8006580 <__retarget_lock_acquire_recursive>
 800656e:	bf00      	nop
 8006570:	200004b8 	.word	0x200004b8

08006574 <__malloc_unlock>:
 8006574:	4801      	ldr	r0, [pc, #4]	; (800657c <__malloc_unlock+0x8>)
 8006576:	f000 b804 	b.w	8006582 <__retarget_lock_release_recursive>
 800657a:	bf00      	nop
 800657c:	200004b8 	.word	0x200004b8

08006580 <__retarget_lock_acquire_recursive>:
 8006580:	4770      	bx	lr

08006582 <__retarget_lock_release_recursive>:
 8006582:	4770      	bx	lr

08006584 <_Unwind_GetDataRelBase>:
 8006584:	b508      	push	{r3, lr}
 8006586:	f7ff fe4d 	bl	8006224 <abort>

0800658a <_Unwind_GetTextRelBase>:
 800658a:	b508      	push	{r3, lr}
 800658c:	f7ff fffa 	bl	8006584 <_Unwind_GetDataRelBase>

08006590 <_init>:
 8006590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006592:	bf00      	nop
 8006594:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006596:	bc08      	pop	{r3}
 8006598:	469e      	mov	lr, r3
 800659a:	4770      	bx	lr

0800659c <_fini>:
 800659c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800659e:	bf00      	nop
 80065a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80065a2:	bc08      	pop	{r3}
 80065a4:	469e      	mov	lr, r3
 80065a6:	4770      	bx	lr
